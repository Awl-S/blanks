{\rtf1\ansi\ansicpg1251\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset204\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset204\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset204\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Blanks }Blanks}
{\comment \'D1\'EE\'E7\'E4\'E0\'ED\'EE \'F1\'E8\'F1\'F2\'E5\'EC\'EE\'E9 doxygen 1.9.7.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Blanks}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
\'C2\'E5\'F0\'F1\'E8\'FF \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CE\'E3\'EB\'E0\'E2\'EB\'E5\'ED\'E8\'E5\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2 \'E8\'EC\'E5\'ED\par \pard\plain 
{\tc \v \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2 \'E8\'EC\'E5\'ED}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 \'E8\'EC\'E5\'ED\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'CF\'EE\'EB\'ED\'FB\'E9 \'F1\'EF\'E8\'F1\'EE\'EA \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2 \'E8\'EC\'E5\'ED.}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b parser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C8\'E5\'F0\'E0\'F0\'F5\'E8\'F7\'E5\'F1\'EA\'E8\'E9 \'F1\'EF\'E8\'F1\'EE\'EA \'EA\'EB\'E0\'F1\'F1\'EE\'E2\par \pard\plain 
{\tc \v \'C8\'E5\'F0\'E0\'F0\'F5\'E8\'F7\'E5\'F1\'EA\'E8\'E9 \'F1\'EF\'E8\'F1\'EE\'EA \'EA\'EB\'E0\'F1\'F1\'EE\'E2}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'C8\'E5\'F0\'E0\'F0\'F5\'E8\'FF \'EA\'EB\'E0\'F1\'F1\'EE\'E2\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C8\'E5\'F0\'E0\'F0\'F5\'E8\'FF \'EA\'EB\'E0\'F1\'F1\'EE\'E2.}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
cfm\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CommandLine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EncodingConverter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
FileReader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
textReader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Generated\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
nbr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ParserConfiguration\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
json\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
point\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
RenderPDF\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
tbl\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
zgt\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'EA\'EB\'E0\'F1\'F1\'EE\'E2\par \pard\plain 
{\tc \v \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'EA\'EB\'E0\'F1\'F1\'EE\'E2}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'CA\'EB\'E0\'F1\'F1\'FB \'F1 \'E8\'F5 \'EA\'F0\'E0\'F2\'EA\'E8\'EC \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\'EC.}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b cfm} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 cfm })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CommandLine} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E8\'E9 \'E8\'ED\'F2\'E5\'F0\'F4\'E5\'E9\'F1 \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EncodingConverter} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'F4\'E0\'E9\'EB\'EE\'E2 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileReader} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F4\'E0\'E9\'EB\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Generated} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'E8\'E9 \'F4\'F3\'ED\'EA\'F6\'E8\'FE \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 JSON-\'F4\'E0\'E9\'EB\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b json} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 JSON-\'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E5\'E9 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nbr} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 nbr })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ParserConfiguration} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF \'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b point} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 \'F2\'EE\'F7\'E5\'EA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RenderPDF} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 PDF-\'F4\'E0\'E9\'EB\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tbl} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b textReader} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b zgt} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 zgt })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'D1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2\par \pard\plain 
{\tc \v \'D1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB\'FB\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'CF\'EE\'EB\'ED\'FB\'E9 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2.}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CommandLine.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EncodingConverter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Generated.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b json.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ParserConfiguration.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Plug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileReader.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b textReader.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RenderPDF.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cfm.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nbr.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b point_data.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tbl.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b zgt.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CommandLine.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EncodingConverter.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Generated.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b json.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ParserConfiguration.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FileReader.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b textReader.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b digit.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b draw.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Line.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Print.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Processor.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b RenderPDF.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 \'E8\'EC\'E5\'ED\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'EE \'E8\'EC\'E5\'ED parser\par \pard\plain 
{\tc\tcl2 \v parser}
{\xe \v parser}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unique_ptr< {\b ParserConfiguration} > {\b create} (const std::string &config_file_path)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v create\:parser}
{\xe \v parser\:create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static std::unique_ptr< {\b ParserConfiguration} > parser::create (const std::string &  {\i config_file_path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Plug.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00009                                                                                         \{\par
00010         {\cf19 if} (config_file_path.ends_with({\cf22 ".json"})) \{\par
00011             {\cf19 return} std::make_unique<json>(config_file_path);\par
00012         \}\par
00013         {\cf19 else} \{\par
00014             {\cf19 throw} std::runtime_error({\cf22 "Unsupported file type: "} + config_file_path);\par
00015         \}\par
00016     \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespaceparser_a6a1b9a41dcebf3bc40e63bcb26a93f64_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB{\tc \v \'CA\'EB\'E0\'F1\'F1\'FB}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 cfm\par \pard\plain 
{\tc\tcl2 \v cfm}
{\xe \v cfm}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 cfm. }}\par
{
{\f2 #include "cfm.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 cfm:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structcfm__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB cfm \'ED\'E0 \'EA\'EE\'ED\'F1\'EE\'EB\'FC. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'E0\'F2\'F0\'E8\'E1\'F3\'F2\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b header}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b blank}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b marks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::array< int, 2 > {\b format}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b diameter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::array< double, 2 > {\b small_tick}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::array< double, 2 > {\b big_tick}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::array< double, 4 > {\b digital_tick}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b digit_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b label_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b tick_mask}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 cfm. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 cfm \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'F2 \'EF\'EE\'EB\'FF \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'F0\'E0\'E7\'EB\'E8\'F7\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 cfm, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F2 \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0\'FB \'E4\'EB\'FF \'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF \'E3\'F0\'E0\'F4\'E8\'EA\'E0. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v display\:cfm}
{\xe \v cfm\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cfm::display () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB cfm \'ED\'E0 \'EA\'EE\'ED\'F1\'EE\'EB\'FC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b display()} \'E2\'FB\'E2\'EE\'E4\'E8\'F2 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'FF \'EA\'E0\'E6\'E4\'EE\'E3\'EE \'EF\'EE\'EB\'FF \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB cfm \'ED\'E0 \'EA\'EE\'ED\'F1\'EE\'EB\'FC. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00035                          \{\par
00036         std::cout << {\cf22 "Header: "} << header << {\cf22 "\\n"};\par
00037         std::cout << {\cf22 "Blank: "} << blank << {\cf22 "\\n"};\par
00038 \par
00039         std::cout << {\cf22 "Marks: "};\par
00040         {\cf19 for} ({\cf17 auto} val : marks)\par
00041             std::cout << val << {\cf22 " "};\par
00042         std::cout << {\cf22 "\\n"};\par
00043 \par
00044         std::cout << {\cf22 "Format: "} << format[0] << {\cf22 " "} << format[1] << {\cf22 "\\n"};\par
00045 \par
00046         std::cout << {\cf22 "Diameter: "} << diameter << {\cf22 "\\n"};\par
00047 \par
00048         std::cout << {\cf22 "Small Tick: "} << small_tick[0] << {\cf22 " "} << small_tick[1] << {\cf22 "\\n"};\par
00049 \par
00050         std::cout << {\cf22 "Big Tick: "} << big_tick[0] << {\cf22 " "} << big_tick[1] << {\cf22 "\\n"};\par
00051 \par
00052         std::cout << {\cf22 "Digital Tick: "} << digital_tick[0] << {\cf22 " "} << digital_tick[1] << {\cf22 " "} << digital_tick[2] << {\cf22 " "} << digital_tick[3] << {\cf22 "\\n"};\par
00053 \par
00054         std::cout << {\cf22 "Digit Height: "} << digit_height << {\cf22 "\\n"};\par
00055 \par
00056         std::cout << {\cf22 "Label Height: "} << label_height << {\cf22 "\\n"};\par
00057 \par
00058         std::cout << {\cf22 "Tick Mask: "} << tick_mask << {\cf22 "\\n"};\par
00059     \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structcfm_a34655b4bfca15e5fb6afeedcf05c1289_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v big_tick\:cfm}
{\xe \v cfm\:big_tick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::array<double, 2> cfm::big_tick}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C1\'EE\'EB\'FC\'F8\'EE\'E9 \'E4\'E5\'EB\'E8\'F2\'E5\'EB\'FC \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v blank\:cfm}
{\xe \v cfm\:blank}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string cfm::blank}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'EC\'EE\'E4\'E5\'EB\'FC \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v diameter\:cfm}
{\xe \v cfm\:diameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cfm::diameter}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E8\'E0\'EC\'E5\'F2\'F0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\xe \v digit_height\:cfm}
{\xe \v cfm\:digit_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cfm::digit_height}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'F1\'EE\'F2\'E0 \'F6\'E8\'F4\'F0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v digital_tick\:cfm}
{\xe \v cfm\:digital_tick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::array<double, 4> cfm::digital_tick}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D6\'E8\'F4\'F0\'EE\'E2\'EE\'E9 \'E4\'E5\'EB\'E8\'F2\'E5\'EB\'FC \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v format\:cfm}
{\xe \v cfm\:format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::array<int, 2> cfm::format}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'EE\'F0\'EC\'E0\'F2 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v header\:cfm}
{\xe \v cfm\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string cfm::header}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'EA \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v label_height\:cfm}
{\xe \v cfm\:label_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int cfm::label_height}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'F1\'EE\'F2\'E0 \'EC\'E5\'F2\'EE\'EA \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v marks\:cfm}
{\xe \v cfm\:marks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> cfm::marks}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EA\'E8 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v small_tick\:cfm}
{\xe \v cfm\:small_tick}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::array<double, 2> cfm::small_tick}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E0\'EB\'FB\'E9 \'E4\'E5\'EB\'E8\'F2\'E5\'EB\'FC \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v tick_mask\:cfm}
{\xe \v cfm\:tick_mask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string cfm::tick_mask}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E0\'F1\'EA\'E0 \'E4\'E5\'EB\'E8\'F2\'E5\'EB\'E5\'E9 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cfm.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cfm.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 CommandLine\par \pard\plain 
{\tc\tcl2 \v CommandLine}
{\xe \v CommandLine}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E8\'E9 \'E8\'ED\'F2\'E5\'F0\'F4\'E5\'E9\'F1 \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8. }}\par
{
{\f2 #include "CommandLine.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 CommandLine:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_command_line__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F2\'E8\'EF\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum class {\b CommandType} \{ {\b CONVERT}
, {\b PRINT}
, {\b GEN}
, {\b UNKNOWN}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandLine} (int argc, char *argv[])\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 {\b CommandLine}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandType} {\b get_command_type} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'F2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b get_args} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \'EA\'EE\'EC\'E0\'ED\'E4\'FB. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandType} {\b command_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b args}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E8\'E9 \'E8\'ED\'F2\'E5\'F0\'F4\'E5\'E9\'F1 \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DD\'F2\'EE\'F2 \'EA\'EB\'E0\'F1\'F1 \'EE\'E1\'F0\'E0\'E1\'E0\'F2\'FB\'E2\'E0\'E5\'F2 \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8 \'E8 \'EA\'E0\'F2\'E5\'E3\'EE\'F0\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'F2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2. \'C2 \'ED\'E0\'F1\'F2\'EE\'FF\'F9\'E5\'E5 \'E2\'F0\'E5\'EC\'FF \'EF\'EE\'E4\'E4\'E5\'F0\'E6\'E8\'E2\'E0\'FE\'F2\'F1\'FF \'EA\'EE\'EC\'E0\'ED\'E4\'FB 'convert', 'print' \'E8 'gen'. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'FF\par
\pard\plain 
{\xe \v CommandType\:CommandLine}
{\xe \v CommandLine\:CommandType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum class {\b CommandLine::CommandType}{\f2 [strong]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'DD\'EB\'E5\'EC\'E5\'ED\'F2\'FB \'EF\'E5\'F0\'E5\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E9:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CONVERT\:CommandLine}
{\xe \v CommandLine\:CONVERT}
{\qr CONVERT{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\cell }{\cell }{\row }
{\xe \v PRINT\:CommandLine}
{\xe \v CommandLine\:PRINT}
{\qr PRINT{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\cell }{\cell }{\row }
{\xe \v GEN\:CommandLine}
{\xe \v CommandLine\:GEN}
{\qr GEN{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:CommandLine}
{\xe \v CommandLine\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
\cell }{\cell }{\row }
}
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00015                            \{\par
00016         CONVERT,\par
00017         PRINT,\par
00018         GEN,\par
00019         UNKNOWN\par
00020     \};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v CommandLine\:CommandLine}
{\xe \v CommandLine\:CommandLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CommandLine::CommandLine (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 {\b CommandLine}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argc} \cell }{\'CA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2 \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i argv} \cell }{\'CC\'E0\'F1\'F1\'E8\'E2 \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2 \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8.\cell }
{\row }
}
\'C5\'F1\'EB\'E8 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2 \'EC\'E5\'ED\'FC\'F8\'E5 \'E4\'E2\'F3\'F5, \'F2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB \'E1\'F3\'E4\'E5\'F2 \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED \'EA\'E0\'EA UNKNOWN. \'C2 \'EF\'F0\'EE\'F2\'E8\'E2\'ED\'EE\'EC \'F1\'EB\'F3\'F7\'E0\'E5 \'F2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'FF\'E5\'F2\'F1\'FF \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EF\'E5\'F0\'E2\'EE\'E3\'EE \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'E0. \'CE\'F1\'F2\'E0\'EB\'FC\'ED\'FB\'E5 \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'FE\'F2\'F1\'FF \'E2 \'E2\'E5\'EA\'F2\'EE\'F0\'E5 args. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00015                                                \{\par
00016     {\cf19 if} (argc < 2) \{\par
00017         command_type = CommandType::UNKNOWN;\par
00018         {\cf19 return};\par
00019     \}\par
00020 \par
00021     std::string command(argv[1]);\par
00022     {\cf19 if} (command == {\cf22 "convert"}) \{\par
00023         command_type = CommandType::CONVERT;\par
00024     \}\par
00025     {\cf19 else} {\cf19 if} (command == {\cf22 "print"}) \{\par
00026         command_type = CommandType::PRINT;\par
00027     \}\par
00028     {\cf19 else} {\cf19 if} (command == {\cf22 "gen"}) \{\par
00029         command_type = CommandType::GEN;\par
00030     \}\par
00031     {\cf19 else} \{\par
00032         command_type = CommandType::UNKNOWN;\par
00033     \}\par
00034 \par
00035     {\cf19 for} ({\cf18 int} i = 2; i < argc; ++i) \{\par
00036         args.emplace_back(argv[i]);\par
00037     \}\par
00038 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v get_args\:CommandLine}
{\xe \v CommandLine\:get_args}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::string > CommandLine::get_args () const}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \'EA\'EE\'EC\'E0\'ED\'E4\'FB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
std::vector<std::string> \'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \'EA\'EE\'EC\'E0\'ED\'E4\'FB.\par
}}\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'E2\'E5\'EA\'F2\'EE\'F0 \'F1\'F2\'F0\'EE\'EA, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E8\'F5 \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB \'EA\'EE\'EC\'E0\'ED\'E4\'FB, \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'ED\'FB\'E5 \'EF\'F0\'E8 \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'E8 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 {\b CommandLine}. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 58}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00058                                                  \{\par
00059     {\cf19 return} args;\par
00060 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_command_line_a58060c2f8b6032c5d1feab576b642125_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v get_command_type\:CommandLine}
{\xe \v CommandLine\:get_command_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CommandLine::CommandType} CommandLine::get_command_type () const}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'EB\'F3\'F7\'E8\'F2\'FC \'F2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
CommandType \'D2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB.\par
}}\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F2\'E8\'EF \'EA\'EE\'EC\'E0\'ED\'E4\'FB, \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'ED\'FB\'E9 \'EF\'F0\'E8 \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'E8 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 {\b CommandLine}. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00047                                                            \{\par
00048     {\cf19 return} command_type;\par
00049 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_command_line_aa17cd3db7ef897f09cb04bd2acbfabd6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v args\:CommandLine}
{\xe \v CommandLine\:args}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::string> CommandLine::args{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v command_type\:CommandLine}
{\xe \v CommandLine\:command_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CommandType} CommandLine::command_type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b CommandLine.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandLine.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandLine.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 EncodingConverter\par \pard\plain 
{\tc\tcl2 \v EncodingConverter}
{\xe \v EncodingConverter}
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'F4\'E0\'E9\'EB\'EE\'E2. }}\par
{
{\f2 #include "EncodingConverter.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 EncodingConverter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncodingConverter} (std::string inputDir, const std::string &outputDir="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 {\b EncodingConverter}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b convert} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F4\'E0\'E9\'EB\'FB \'E2 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadSettings} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'ED\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E8 \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b convertDirectory} (const std::filesystem::path &dir)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F4\'E0\'E9\'EB\'FB \'E2 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E9 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8 \'E8 \'E5\'B8 \'EF\'EE\'E4\'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FF\'F5. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b convertFile} (const std::filesystem::path &filepath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F4\'E0\'E9\'EB\'E0 \'E8\'E7 \'EE\'E4\'ED\'EE\'E9 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E2 \'E4\'F0\'F3\'E3\'F3\'FE \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'F0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'E2 \'F4\'E0\'E9\'EB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printStats} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'F2\'E0\'F2\'E8\'F1\'F2\'E8\'EA\'F3 \'EF\'EE \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'FB\'EC \'F4\'E0\'E9\'EB\'E0\'EC. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'F1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b iconvConvert} (const std::string &input, std::string &output, const std::string &fromCharset, const std::string &toCharset)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'EE\'E4\'ED\'EE\'E9 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E2 \'E4\'F0\'F3\'E3\'F3\'FE \'F1 \'EF\'EE\'EC\'EE\'F9\'FC\'FE iconv. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b is_utf8} (const std::string &str)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2, \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'EB\'E8 \'F1\'F2\'F0\'EE\'EA\'E0 \'E2 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E5 UTF-8. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b inputDirectory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b outputDirectory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b useTempDirectory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b fileExtensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b sourceEncoding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b targetEncoding}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b filesProcessed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b filesConverted}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'F4\'E0\'E9\'EB\'EE\'E2. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 \'EF\'F0\'E8\'ED\'E8\'EC\'E0\'E5\'F2 \'E2\'F5\'EE\'E4\'ED\'EE\'E9 \'E8 \'E2\'FB\'F5\'EE\'E4\'ED\'EE\'E9 \'EA\'E0\'F2\'E0\'EB\'EE\'E3\'E8. \'C5\'F1\'EB\'E8 \'E2\'FB\'F5\'EE\'E4\'ED\'EE\'E9 \'EA\'E0\'F2\'E0\'EB\'EE\'E3 \'ED\'E5 \'F3\'EA\'E0\'E7\'E0\'ED, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'F2\'F1\'FF \'E2\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E9 \'EA\'E0\'F2\'E0\'EB\'EE\'E3. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v EncodingConverter\:EncodingConverter}
{\xe \v EncodingConverter\:EncodingConverter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
EncodingConverter::EncodingConverter (std::string  {\i inputDir}, const std::string &  {\i outputDir} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 {\b EncodingConverter}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inputDir} \cell }{\'C2\'F5\'EE\'E4\'ED\'EE\'E9 \'EA\'E0\'F2\'E0\'EB\'EE\'E3. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i outputDir} \cell }{\'C2\'FB\'F5\'EE\'E4\'ED\'EE\'E9 \'EA\'E0\'F2\'E0\'EB\'EE\'E3.\cell }
{\row }
}
\'C5\'F1\'EB\'E8 outputDir \'EF\'F3\'F1\'F2, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'F2\'F1\'FF \'E2\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E9 \'EA\'E0\'F2\'E0\'EB\'EE\'E3. \'C7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'ED\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E8 \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E8 \'F1\'E1\'F0\'E0\'F1\'FB\'E2\'E0\'E5\'F2 \'F1\'F7\'E5\'F2\'F7\'E8\'EA\'E8 \'F4\'E0\'E9\'EB\'EE\'E2. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00018         : inputDirectory(std::move(inputDir)), outputDirectory(outputDir), useTempDirectory(outputDir.empty()) \{\par
00019     loadSettings(), filesConverted = 0, filesProcessed = 0;\par
00020 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_ab3102bc4fcd6c5ebf7768b4d6dbcff62_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v convert\:EncodingConverter}
{\xe \v EncodingConverter\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EncodingConverter::convert ()}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F4\'E0\'E9\'EB\'FB \'E2 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F4\'E0\'E9\'EB\'FB \'E2 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E9 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8 \'E8 \'E2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'F2\'E0\'F2\'E8\'F1\'F2\'E8\'EA\'F3 \'EF\'EE \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'FB\'EC \'F4\'E0\'E9\'EB\'E0\'EC. \'CF\'F3\'F2\'FC \'EA \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'E5\'E9 \'E8\'F1\'F5\'EE\'E4\'ED\'FB\'E5 \'F4\'E0\'E9\'EB\'FB, \'E7\'E0\'E4\'E0\'E5\'F2\'F1\'FF \'E2 \'EF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'EE\'E9 inputDirectory. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 46}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00046                                 \{\par
00047     std::filesystem::path inputPath(inputDirectory);\par
00048     convertDirectory(inputPath);\par
00049     printStats();\par
00050 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_ae79126a88077fe4ac04a5cd09edf72d3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_ae79126a88077fe4ac04a5cd09edf72d3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v convertDirectory\:EncodingConverter}
{\xe \v EncodingConverter\:convertDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EncodingConverter::convertDirectory (const std::filesystem::path &  {\i dir}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F4\'E0\'E9\'EB\'FB \'E2 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E9 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8 \'E8 \'E5\'B8 \'EF\'EE\'E4\'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FF\'F5. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'F0\'E5\'EA\'F3\'F0\'F1\'E8\'E2\'ED\'EE \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'E2\'F1\'E5 \'F4\'E0\'E9\'EB\'FB \'E2 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E9 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8 \'E8 \'E5\'B8 \'EF\'EE\'E4\'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FF\'F5. \'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'EC\'FB\'E5 \'F4\'E0\'E9\'EB\'FB \'E4\'EE\'EB\'E6\'ED\'FB \'E8\'EC\'E5\'F2\'FC \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'FF, \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'E5 \'E2 \'F1\'EF\'E8\'F1\'EA\'E5 fileExtensions. \'C5\'F1\'EB\'E8 \'F4\'E0\'E9\'EB \'E8\'EC\'E5\'E5\'F2 \'E4\'F0\'F3\'E3\'EE\'E5 \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'E5 \'E8 outputDirectory \'F3\'EA\'E0\'E7\'E0\'ED\'E0, \'EE\'ED \'E1\'F3\'E4\'E5\'F2 \'F1\'EA\'EE\'EF\'E8\'F0\'EE\'E2\'E0\'ED \'E2 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'F3\'FE \'E2\'FB\'F5\'EE\'E4\'ED\'F3\'FE \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FE.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dir} \cell }{\'CF\'F3\'F2\'FC \'EA \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8, \'E2 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'ED\'F3\'E6\'ED\'EE \'E2\'FB\'EF\'EE\'EB\'ED\'E8\'F2\'FC \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'FE \'F4\'E0\'E9\'EB\'EE\'E2. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 61}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00061                                                                      \{\par
00062     {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : std::filesystem::recursive_directory_iterator(dir)) \{\par
00063         {\cf19 if} (entry.is_regular_file()) \{\par
00064             filesProcessed++;\par
00065             std::filesystem::path relativePath = std::filesystem::relative(entry, inputDirectory);\par
00066             std::filesystem::path outputPath = useTempDirectory ? std::filesystem::temp_directory_path() / relativePath : outputDirectory / relativePath;\par
00067 \par
00068             {\cf19 if} (std::find(fileExtensions.begin(), fileExtensions.end(), entry.path().extension()) != fileExtensions.end()) \{\par
00069                 convertFile(entry.path());\par
00070             \} {\cf19 else} {\cf19 if} (!outputDirectory.empty()) \{\par
00071                 {\cf20 // \'C5\'F1\'EB\'E8 \'F4\'E0\'E9\'EB \'E8\'EC\'E5\'E5\'F2 \'E4\'F0\'F3\'E3\'EE\'E5 \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'E5 \'E8 outputDirectory \'F3\'EA\'E0\'E7\'E0\'ED\'E0, \'EA\'EE\'EF\'E8\'F0\'F3\'E5\'EC \'E5\'E3\'EE}\par
00072                 std::filesystem::create_directories(outputPath.parent_path());\par
00073                 std::filesystem::copy_file(entry, outputPath, std::filesystem::copy_options::overwrite_existing);\par
00074             \}\par
00075         \}\par
00076     \}\par
00077 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_ab066b92f365f593c44d6825071463e08_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_ab066b92f365f593c44d6825071463e08_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v convertFile\:EncodingConverter}
{\xe \v EncodingConverter\:convertFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EncodingConverter::convertFile (const std::filesystem::path &  {\i filepath}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F4\'E0\'E9\'EB\'E0 \'E8\'E7 \'EE\'E4\'ED\'EE\'E9 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E2 \'E4\'F0\'F3\'E3\'F3\'FE \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'F0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'E2 \'F4\'E0\'E9\'EB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'F7\'E8\'F2\'E0\'E5\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F4\'E0\'E9\'EB\'E0 \'F1 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'EC \'EF\'F3\'F2\'E5\'EC, \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'E5\'E3\'EE \'E8\'E7 \'E8\'F1\'F5\'EE\'E4\'ED\'EE\'E9 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E2 \'F6\'E5\'EB\'E5\'E2\'F3\'FE \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'F0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'E2 \'F4\'E0\'E9\'EB. \'C5\'F1\'EB\'E8 \'E2\'EA\'EB\'FE\'F7\'E5\'ED\'E0 \'EE\'EF\'F6\'E8\'FF useTempDirectory, \'F2\'EE \'EF\'F0\'EE\'EC\'E5\'E6\'F3\'F2\'EE\'F7\'ED\'FB\'E9 \'F4\'E0\'E9\'EB \'E1\'F3\'E4\'E5\'F2 \'F1\'EE\'E7\'E4\'E0\'ED \'E2\'EE \'E2\'F0\'E5\'EC\'E5\'ED\'ED\'EE\'E9 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8, \'E0 \'E7\'E0\'F2\'E5\'EC \'F1\'EA\'EE\'EF\'E8\'F0\'EE\'E2\'E0\'ED \'E8 \'E7\'E0\'EC\'E5\'ED\'E8\'F2 \'E8\'F1\'F5\'EE\'E4\'ED\'FB\'E9 \'F4\'E0\'E9\'EB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filepath} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3, \'EA\'EE\'F2\'EE\'F0\'FB\'E9 \'ED\'F3\'E6\'ED\'EE \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'EE\'E2\'E0\'F2\'FC. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 128}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00128                                                                      \{\par
00129     std::cout << filepath << std::endl;\par
00130     std::ifstream inFile(filepath, std::ios::binary);\par
00131     std::string content((std::istreambuf_iterator<char>(inFile)), std::istreambuf_iterator<char>());\par
00132 \par
00133     std::filesystem::path relativePath = std::filesystem::relative(filepath, inputDirectory);\par
00134     std::filesystem::path outputPath = useTempDirectory ? std::filesystem::temp_directory_path() / relativePath : outputDirectory / relativePath;\par
00135     std::filesystem::create_directories(outputPath.parent_path());\par
00136 \par
00137     {\cf19 if} (!is_utf8(content)) \{\par
00138         std::string utf8Content;\par
00139         {\cf19 if} (iconvConvert(content, utf8Content, sourceEncoding, targetEncoding)) \{\par
00140             content = utf8Content;\par
00141             filesConverted++;\par
00142         \} {\cf19 else} \{\par
00143             std::cerr << {\cf22 "Error Converting file '"} << filepath << {\cf22 "': Invalid or incomplete multibyte or wide character"} << std::endl;\par
00144         \}\par
00145     \}\par
00146 \par
00147     std::ofstream outFile(outputPath, std::ios::binary);\par
00148     outFile.write(content.data(), content.size());\par
00149     outFile.close();\par
00150 \par
00151     {\cf19 if} (useTempDirectory) \{\par
00152         std::filesystem::copy(outputPath, filepath, std::filesystem::copy_options::overwrite_existing);\par
00153         std::filesystem::remove(outputPath);\par
00154     \}\par
00155 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_a460858eb34940271be93a5aa08452a66_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_a460858eb34940271be93a5aa08452a66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v iconvConvert\:EncodingConverter}
{\xe \v EncodingConverter\:iconvConvert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool EncodingConverter::iconvConvert (const std::string &  {\i input}, std::string &  {\i output}, const std::string &  {\i fromCharset}, const std::string &  {\i toCharset}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'EE\'E4\'ED\'EE\'E9 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E2 \'E4\'F0\'F3\'E3\'F3\'FE \'F1 \'EF\'EE\'EC\'EE\'F9\'FC\'FE iconv. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'EE\'E4\'ED\'EE\'E9 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'E2 \'E4\'F0\'F3\'E3\'F3\'FE \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \'F4\'F3\'ED\'EA\'F6\'E8\'E9 iconv.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i input} \cell }{\'C2\'F5\'EE\'E4\'ED\'E0\'FF \'F1\'F2\'F0\'EE\'EA\'E0 \'E4\'EB\'FF \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i output} \cell }{\'D1\'F2\'F0\'EE\'EA\'E0, \'E2 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'E5\'F2 \'E7\'E0\'EF\'E8\'F1\'E0\'ED \'F0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fromCharset} \cell }{\'C8\'F1\'F5\'EE\'E4\'ED\'E0\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i toCharset} \cell }{\'D6\'E5\'EB\'E5\'E2\'E0\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E0. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true, \'E5\'F1\'EB\'E8 \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'FF \'EF\'F0\'EE\'F8\'EB\'E0 \'F3\'F1\'EF\'E5\'F8\'ED\'EE, \'E8\'ED\'E0\'F7\'E5 false. \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 90}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00090                                                                                                                                         \{\par
00091     iconv_t cd = iconv_open(toCharset.c_str(), fromCharset.c_str());\par
00092     {\cf19 if} (cd == (iconv_t)-1) \{\par
00093         perror({\cf22 "iconv_open"});\par
00094         {\cf19 return} {\cf17 false};\par
00095     \}\par
00096 \par
00097     std::vector<char> inBuf(input.begin(), input.end());\par
00098     {\cf18 size_t} inLeft = inBuf.size();\par
00099     {\cf18 size_t} outLeft = inLeft * 4;\par
00100     std::vector<char> outBuf(outLeft);\par
00101 \par
00102     {\cf18 char}* inPtr = inBuf.data();\par
00103     {\cf18 char}* outPtr = outBuf.data();\par
00104 \par
00105     {\cf19 while} (inLeft > 0) \{\par
00106         {\cf18 size_t} result = iconv(cd, &inPtr, &inLeft, &outPtr, &outLeft);\par
00107         {\cf19 if} (result == ({\cf18 size_t})-1) \{\par
00108             iconv_close(cd);\par
00109             {\cf19 return} {\cf17 false};\par
00110         \}\par
00111     \}\par
00112 \par
00113     iconv_close(cd);\par
00114     outBuf.resize(outBuf.size() - outLeft);\par
00115 \par
00116     output.assign(outBuf.begin(), outBuf.end());\par
00117     {\cf19 return} {\cf17 true};\par
00118 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_ac7f6cefb08a76f5fa3696ee18beb8faf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v is_utf8\:EncodingConverter}
{\xe \v EncodingConverter\:is_utf8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool EncodingConverter::is_utf8 (const std::string &  {\i str}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2, \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'EB\'E8 \'F1\'F2\'F0\'EE\'EA\'E0 \'E2 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E5 UTF-8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'EF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2, \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'EB\'E8 \'F1\'F2\'F0\'EE\'EA\'E0 \'E2 \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E5 UTF-8 \'EF\'F3\'F2\'E5\'EC \'E0\'ED\'E0\'EB\'E8\'E7\'E0 \'E1\'E0\'E9\'F2\'EE\'E2\'EE\'E9 \'EF\'EE\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'F2\'E5\'EB\'FC\'ED\'EE\'F1\'F2\'E8. \'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 true, \'E5\'F1\'EB\'E8 \'F1\'F2\'F0\'EE\'EA\'E0 \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'EA\'EE\'F0\'F0\'E5\'EA\'F2\'ED\'EE\'E9 UTF-8 \'F1\'F2\'F0\'EE\'EA\'EE\'E9, \'E8\'ED\'E0\'F7\'E5 false.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i str} \cell }{\'D1\'F2\'F0\'EE\'EA\'E0, \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'ED\'F3\'E6\'ED\'EE \'EF\'F0\'EE\'E2\'E5\'F0\'E8\'F2\'FC. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true, \'E5\'F1\'EB\'E8 \'F1\'F2\'F0\'EE\'EA\'E0 \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'EA\'EE\'F0\'F0\'E5\'EA\'F2\'ED\'EE\'E9 UTF-8 \'F1\'F2\'F0\'EE\'EA\'EE\'E9, \'E8\'ED\'E0\'F7\'E5 false. \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 176}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00176                                                     \{\par
00177     {\cf18 size_t} length = str.size();\par
00178     {\cf19 for} ({\cf18 size_t} i = 0; i < length; ) \{\par
00179         {\cf19 if} ((str[i] & 0x80) == 0) \{\par
00180             i += 1;\par
00181         \} {\cf19 else} {\cf19 if} ((str[i] & 0xE0) == 0xC0 && i + 1 < length && (str[i + 1] & 0xC0) == 0x80) \{\par
00182             i += 2;\par
00183         \} {\cf19 else} {\cf19 if} ((str[i] & 0xF0) == 0xE0 && i + 2 < length && (str[i + 1] & 0xC0) == 0x80 && (str[i + 2] & 0xC0) == 0x80) \{\par
00184             i += 3;\par
00185         \} {\cf19 else} {\cf19 if} ((str[i] & 0xF8) == 0xF0 && i + 3 < length && (str[i + 1] & 0xC0) == 0x80 && (str[i + 2] & 0xC0) == 0x80 && (str[i + 3] & 0xC0) == 0x80) \{\par
00186             i += 4;\par
00187         \} {\cf19 else} \{\par
00188             {\cf19 return} {\cf17 false};\par
00189         \}\par
00190     \}\par
00191     {\cf19 return} {\cf17 true};\par
00192 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_a9b72ba808c4b0c7087f63fd0c3b8a5d7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadSettings\:EncodingConverter}
{\xe \v EncodingConverter\:loadSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EncodingConverter::loadSettings (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'ED\'E0\'F1\'F2\'F0\'EE\'E9\'EA\'E8 \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'F2 \'E8\'F1\'F5\'EE\'E4\'ED\'F3\'FE \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'F3 \'E2 "UTF-8" \'E8 \'F6\'E5\'EB\'E5\'E2\'F3\'FE \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'F3 \'E2 "WINDOWS-1251". \'C7\'E0\'E4\'E0\'E5\'F2 \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'FF \'F4\'E0\'E9\'EB\'EE\'E2, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'F1\'EB\'E5\'E4\'F3\'E5\'F2 \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'FB\'E2\'E0\'F2\'FC. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 28}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00028                                     \{\par
00029     sourceEncoding = {\cf22 "WINDOWS-1251"};\par
00030     targetEncoding = {\cf22 "UTF-8"};\par
00031 \par
00032     {\cf20 // \'D1\'EE\'E7\'E4\'E0\'E5\'EC \'EC\'E0\'F1\'F1\'E8\'E2 \'E8\'F2\'E5\'F0\'E0\'F2\'EE\'F0\'EE\'E2 \'ED\'E0 \'F1\'F2\'F0\'EE\'EA\'E8, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'ED\'F3\'E6\'ED\'EE \'E4\'EE\'E1\'E0\'E2\'E8\'F2\'FC}\par
00033     std::string extensions[] = \{ {\cf22 ".tbl"}, {\cf22 ".\'ED\'E1\'F0"}, {\cf22 ".\'E7\'E3\'F2"}, {\cf22 ".cfm"} \};\par
00034     {\cf18 size_t} numExtensions = {\cf17 sizeof}(extensions) / {\cf17 sizeof}(extensions[0]);\par
00035 \par
00036     {\cf20 // \'C8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'EC \'EA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 std::vector, \'EF\'F0\'E8\'ED\'E8\'EC\'E0\'FE\'F9\'E8\'E9 \'E4\'E2\'E0 \'E8\'F2\'E5\'F0\'E0\'F2\'EE\'F0\'E0}\par
00037     fileExtensions.insert(fileExtensions.end(), extensions, extensions + numExtensions);\par
00038 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_a327b6fd6e84ab1949e73302fc9e153e4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printStats\:EncodingConverter}
{\xe \v EncodingConverter\:printStats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void EncodingConverter::printStats () const{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'F2\'E0\'F2\'E8\'F1\'F2\'E8\'EA\'F3 \'EF\'EE \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'FB\'EC \'F4\'E0\'E9\'EB\'E0\'EC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'E2\'FB\'E2\'EE\'E4\'E8\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'EE \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'E5 \'EE\'E1\'F0\'E0\'E1\'EE\'F2\'E0\'ED\'ED\'FB\'F5 \'E8 \'EA\'EE\'ED\'E2\'E5\'F0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 162}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00162                                          \{\par
00163     std::cout << {\cf22 "Files processed: "} << filesProcessed << std::endl;\par
00164     std::cout << {\cf22 "Files converted: "} << filesConverted << std::endl;\par
00165 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_encoding_converter_a6a4a2d610029ac2c890fb0265626ebd0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v fileExtensions\:EncodingConverter}
{\xe \v EncodingConverter\:fileExtensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::string> EncodingConverter::fileExtensions{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 22}}\par
}
{\xe \v filesConverted\:EncodingConverter}
{\xe \v EncodingConverter\:filesConverted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t EncodingConverter::filesConverted{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\xe \v filesProcessed\:EncodingConverter}
{\xe \v EncodingConverter\:filesProcessed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t EncodingConverter::filesProcessed{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
}
{\xe \v inputDirectory\:EncodingConverter}
{\xe \v EncodingConverter\:inputDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string EncodingConverter::inputDirectory{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v outputDirectory\:EncodingConverter}
{\xe \v EncodingConverter\:outputDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string EncodingConverter::outputDirectory{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v sourceEncoding\:EncodingConverter}
{\xe \v EncodingConverter\:sourceEncoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string EncodingConverter::sourceEncoding{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
}
{\xe \v targetEncoding\:EncodingConverter}
{\xe \v EncodingConverter\:targetEncoding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string EncodingConverter::targetEncoding{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
}
{\xe \v useTempDirectory\:EncodingConverter}
{\xe \v EncodingConverter\:useTempDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool EncodingConverter::useTempDirectory{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b EncodingConverter.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncodingConverter.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EncodingConverter.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 FileReader\par \pard\plain 
{\tc\tcl2 \v FileReader}
{\xe \v FileReader}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F4\'E0\'E9\'EB\'E0. }}\par
{
{\f2 #include "FileReader.h"}}\par
\'C3\'F0\'E0\'F4 \'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'E8\'FF:FileReader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_file_reader__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileReader} (std::filesystem::path file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b FileReader}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'F9\'E8\'F9\'E5\'ED\'ED\'FB\'E5 \'F1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b readLineString} (std::ifstream &file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b trim} (const std::string &s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB \'E8\'E7 \'F1\'F2\'F0\'EE\'EA\'E8. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'F9\'E8\'F9\'E5\'ED\'ED\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::filesystem::path {\b file_path_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F4\'E0\'E9\'EB\'E0. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 {\b FileReader} \'EF\'F0\'E5\'E4\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'F4\'F3\'ED\'EA\'F6\'E8\'EE\'ED\'E0\'EB\'FC\'ED\'EE\'F1\'F2\'FC \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F4\'E0\'E9\'EB\'EE\'E2 \'E8 \'EE\'E1\'F0\'E0\'E1\'EE\'F2\'EA\'E8 \'F1\'F2\'F0\'EE\'EA. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b FileReader.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v FileReader\:FileReader}
{\xe \v FileReader\:FileReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FileReader::FileReader (std::filesystem::path  {\i file_path}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b FileReader}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF.\cell }
{\row }
}
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 {\b FileReader} \'F1 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'EC \'EF\'F3\'F2\'E5\'EC \'EA \'F4\'E0\'E9\'EB\'F3 file_path. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b FileReader.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00023 : file_path_(std::move(file_path)) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v readLineString\:FileReader}
{\xe \v FileReader\:readLineString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string FileReader::readLineString (std::ifstream &  {\i file}){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0, \'F3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{\'D4\'E0\'E9\'EB\'EE\'E2\'FB\'E9 \'EF\'EE\'F2\'EE\'EA \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F1\'F2\'F0\'EE\'EA\'E8. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CF\'F0\'EE\'F7\'E8\'F2\'E0\'ED\'ED\'E0\'FF \'F1\'F2\'F0\'EE\'EA\'E0 \'E1\'E5\'E7 \'E2\'E5\'E4\'F3\'F9\'E8\'F5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'F5 \'EF\'F0\'EE\'E1\'E5\'EB\'EE\'E2.\par
}}\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b readLineString()} \'F7\'E8\'F2\'E0\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'EE\'E2\'EE\'E3\'EE \'EF\'EE\'F2\'EE\'EA\'E0 file. \'C7\'E0\'F2\'E5\'EC \'F3\'E4\'E0\'EB\'FF\'FE\'F2\'F1\'FF \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB \'E8\'E7 \'F1\'F2\'F0\'EE\'EA\'E8. \'D0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\'F1\'FF \'E2 \'E2\'E8\'E4\'E5 \'ED\'EE\'E2\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b FileReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 33}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00033                                                       \{\par
00034     std::string line;\par
00035     {\cf19 if} (std::getline(file, line))\par
00036     \{\par
00037         {\cf20 // Remove any leading/trailing whitespace}\par
00038         line.erase(0, line.find_first_not_of({\cf22 " \\t\\r\\n"}));\par
00039         line.erase(line.find_last_not_of({\cf22 " \\t\\r\\n"}) + 1);\par
00040     \}\par
00041     {\cf19 return} line;\par
00042 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_file_reader_a8e183bdc265152f0309184debb4af6a3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v trim\:FileReader}
{\xe \v FileReader\:trim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string FileReader::trim (const std::string &  {\i s}){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB \'E8\'E7 \'F1\'F2\'F0\'EE\'EA\'E8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{\'C8\'F1\'F5\'EE\'E4\'ED\'E0\'FF \'F1\'F2\'F0\'EE\'EA\'E0. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'F2\'F0\'EE\'EA\'E0 \'E1\'E5\'E7 \'E2\'E5\'E4\'F3\'F9\'E8\'F5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'F5 \'EF\'F0\'EE\'E1\'E5\'EB\'EE\'E2.\par
}}\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b trim()} \'F3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB \'E8\'E7 \'F1\'F2\'F0\'EE\'EA\'E8 s. \'D0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\'F1\'FF \'E2 \'E2\'E8\'E4\'E5 \'ED\'EE\'E2\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i s} \cell }{\'C8\'F1\'F5\'EE\'E4\'ED\'E0\'FF \'F1\'F2\'F0\'EE\'EA\'E0. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'F2\'F0\'EE\'EA\'E0 \'E1\'E5\'E7 \'E2\'E5\'E4\'F3\'F9\'E8\'F5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'F5 \'EF\'F0\'EE\'E1\'E5\'EB\'EE\'E2.\par
}}\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b trim()} \'F3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB \'E8\'E7 \'F1\'F2\'F0\'EE\'EA\'E8 s. \'D2\'E0\'EA\'E6\'E5 \'F3\'E4\'E0\'EB\'FF\'FE\'F2\'F1\'FF \'EB\'FE\'E1\'FB\'E5 \'F1\'E8\'EC\'E2\'EE\'EB\'FB, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'FF\'E2\'EB\'FF\'FE\'F2\'F1\'FF \'EF\'F0\'EE\'E1\'E5\'EB\'FC\'ED\'FB\'EC\'E8 \'E8\'EB\'E8 \'E8\'EC\'E5\'FE\'F2 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5 \'EA\'EE\'E4\'E0 \'E1\'EE\'EB\'FC\'F8\'E5 255. \'D0\'E5\'E7\'F3\'EB\'FC\'F2\'E0\'F2 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\'F1\'FF \'E2 \'E2\'E8\'E4\'E5 \'ED\'EE\'E2\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b FileReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012                                              \{\par
00013     {\cf17 auto} start = s.begin();\par
00014     {\cf19 while} (start != s.end() && ({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*start) > 255 || std::isspace({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*start)))) \{\par
00015         start++;\par
00016     \}\par
00017     {\cf17 auto} end = s.end();\par
00018     {\cf19 while} (end != start && ({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*(end - 1)) > 255 || std::isspace({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*(end - 1))))) \{\par
00019         end--;\par
00020     \}\par
00021     {\cf19 return} std::string(start, end);\par
00022 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_file_reader_a8b67d54f19fd8f228f337ba75ea29e22_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v file_path_\:FileReader}
{\xe \v FileReader\:file_path_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::filesystem::path FileReader::file_path_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b FileReader.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileReader.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileReader.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 Generated\par \pard\plain 
{\tc\tcl2 \v Generated}
{\xe \v Generated}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'E8\'E9 \'F4\'F3\'ED\'EA\'F6\'E8\'FE \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 JSON-\'F4\'E0\'E9\'EB\'E0. }}\par
{
{\f2 #include "Generated.h"}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b generateJsonFile} (const std::string &filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'E5\'ED\'E5\'F0\'E8\'F0\'F3\'E5\'F2 JSON-\'F4\'E0\'E9\'EB \'F1 \'E7\'E0\'E4\'E0\'ED\'ED\'FB\'EC \'E8\'EC\'E5\'ED\'E5\'EC. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'E8\'E9 \'F4\'F3\'ED\'EA\'F6\'E8\'FE \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 JSON-\'F4\'E0\'E9\'EB\'E0. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Generated.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v generateJsonFile\:Generated}
{\xe \v Generated\:generateJsonFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Generated::generateJsonFile (const std::string &  {\i filename})}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'E5\'ED\'E5\'F0\'E8\'F0\'F3\'E5\'F2 JSON-\'F4\'E0\'E9\'EB \'F1 \'E7\'E0\'E4\'E0\'ED\'ED\'FB\'EC \'E8\'EC\'E5\'ED\'E5\'EC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{\'C8\'EC\'FF \'F4\'E0\'E9\'EB\'E0 \'E4\'EB\'FF \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF JSON.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E3\'E5\'ED\'E5\'F0\'E8\'F0\'F3\'E5\'F2 JSON-\'F4\'E0\'E9\'EB, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'E8\'E9 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'EE \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FF\'F5, \'F2\'E5\'EA\'F1\'F2\'E5 \'F1\'EF\'F0\'E0\'E2\'EA\'E8 \'E8 \'E8\'EC\'E5\'ED\'E8 \'F4\'E0\'E9\'EB\'E0 PDF. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Generated.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00010                                                           \{\par
00011     nlohmann::json j;\par
00012 \par
00013     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EF\'F3\'F2\'E5\'E9 \'EA \'F0\'E0\'E7\'EB\'E8\'F7\'ED\'FB\'EC \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FF\'EC}\par
00014     j[{\cf22 "directories"}][{\cf22 "tbl"}] = {\cf22 "/path/to/tbl"};\par
00015     j[{\cf22 "directories"}][{\cf22 "cfm"}] = {\cf22 "/path/to/cfm"};\par
00016     j[{\cf22 "directories"}][{\cf22 "zagotovki"}] = {\cf22 "/path/to/zgt"};\par
00017     j[{\cf22 "directories"}][{\cf22 "nabor"}] = {\cf22 "/path/to/\'ED\'E0\'E1\'EE\'F0\'FB"};\par
00018     j[{\cf22 "directories"}][{\cf22 "font"}] = {\cf22 "/path/to/font"};\par
00019 \par
00020     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 \'F1\'EF\'F0\'E0\'E2\'EA\'E8}\par
00021     j[{\cf22 "help"}] = {\cf22 "\'D2\'E5\'EA\'F1\'F2 \'EF\'EE\'EC\'EE\'F9\'E8 \'E7\'E4\'E5\'F1\'FC..."};\par
00022 \par
00023     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E8\'EC\'E5\'ED\'E8 \'F4\'E0\'E9\'EB\'E0 PDF}\par
00024     j[{\cf22 "pdf_file_name"}] = {\cf22 "example.pdf"};\par
00025 \par
00026     {\cf20 // \'CE\'F2\'EA\'F0\'FB\'F2\'E8\'E5 \'F4\'E0\'E9\'EB\'E0 \'E4\'EB\'FF \'E7\'E0\'EF\'E8\'F1\'E8}\par
00027     std::ofstream o(filename);\par
00028     {\cf20 // \'C7\'E0\'EF\'E8\'F1\'FC JSON-\'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'E2 \'F4\'E0\'E9\'EB \'F1 \'EE\'F2\'F1\'F2\'F3\'EF\'EE\'EC 4 \'EF\'F0\'EE\'E1\'E5\'EB\'E0 \'E4\'EB\'FF \'F4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'FF}\par
00029     o << std::setw(4) << j << std::endl;\par
00030 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_generated_a83bc49c8c5facc46a56afe4f1af0d01a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generated.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Generated.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 json\par \pard\plain 
{\tc\tcl2 \v json}
{\xe \v json}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 JSON-\'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E5\'E9. }}\par
{
{\f2 #include "json.h"}}\par
\'C3\'F0\'E0\'F4 \'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'E8\'FF:json:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classjson__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 json:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classjson__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} () override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b json} (const std::string &config_file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::filesystem::path {\b getFilePath} (const std::string &key) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E8\'F5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3 \'E8 \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'EC\'F3 \'E7\'E0\'EF\'F0\'EE\'F1\'F3. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::filesystem::path > {\b getFileList} (const std::string &key, const std::string &search) override\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 json. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long long {\b getInteger} (const std::string &key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E8\'E9 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB \'F3\'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'ED\'FB\'E5 \'EE\'F2 {\b ParserConfiguration}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ParserConfiguration} ()=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::filesystem::path {\b getFilePath} (const std::string &key)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'EA\'EB\'FE\'F7\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::vector< std::filesystem::path > {\b getFileList} (const std::string &key, const std::string &search)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'EA\'EB\'FE\'F7\'E0 \'E8 \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'E3\'EE \'E7\'E0\'EF\'F0\'EE\'F1\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b display} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual long long {\b getInteger} (const std::string &key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 \'FD\'EA\'E7\'E5\'EC\'EF\'EB\'FF\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 ConfigParser \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EF\'F3\'F2\'E8 \'EA \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'EC\'F3 \'F4\'E0\'E9\'EB\'F3. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nlohmann::json {\b config_json}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 JSON-\'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E5\'E9. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 json \'EF\'F0\'E5\'E4\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'F4\'F3\'ED\'EA\'F6\'E8\'EE\'ED\'E0\'EB\'FC\'ED\'EE\'F1\'F2\'FC \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'E8 \'EE\'E1\'F0\'E0\'E1\'EE\'F2\'EA\'E8 JSON-\'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v json\:json}
{\xe \v json\:json}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
json::json (const std::string &  {\i config_file_path}){\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\'CA\'EB\'FE\'F7 \'E4\'EB\'FF \'EF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'FF \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E3\'EE \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'FF. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'C5\'F1\'EB\'E8 \'EA\'EB\'FE\'F7 \'EE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'E2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3 key, \'E8\'E7\'E2\'EB\'E5\'EA\'E0\'FF \'E5\'E3\'EE \'E8\'E7 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 config_json. \'C5\'F1\'EB\'E8 \'EA\'EB\'FE\'F7 \'EE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'E2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8, \'E2\'FB\'E1\'F0\'E0\'F1\'FB\'E2\'E0\'E5\'F2\'F1\'FF \'E8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'E5 std::runtime_error. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 74}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00074                                             \{\par
00075     std::ifstream config_file(config_file_path);\par
00076     {\cf19 if} (!config_file.is_open()) \{\par
00077         {\cf19 throw} std::runtime_error({\cf22 "Cannot open configuration file: "} + config_file_path);\par
00078     \}\par
00079     config_file >> config_json;\par
00080 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v display\:json}
{\xe \v json\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void json::display (){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'EC\'EE\'E3\'EE \'EA\'EB\'E0\'F1\'F1\'EE\'EC. \'C4\'E0\'ED\'ED\'FB\'E9 \'EC\'E5\'F2\'EE\'E4 \'EC\'EE\'E6\'E5\'F2 \'E1\'FB\'F2\'FC \'EF\'E5\'F0\'E5\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED \'E2 \'EF\'F0\'EE\'E8\'E7\'E2\'EE\'E4\'ED\'FB\'F5 \'EA\'EB\'E0\'F1\'F1\'E0\'F5. \par
}{
\'C7\'E0\'EC\'E5\'F9\'E0\'E5\'F2 {\b ParserConfiguration} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 82}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00082                    \{\par
00083     {\cf19 for} ({\cf17 const} {\cf17 auto}& [key, value] : config_json.items()) \{\par
00084         std::cout << key << {\cf22 ": "} << value << std::endl;\par
00085     \}\par
00086 \}\par
}
}
{\xe \v getFileList\:json}
{\xe \v json\:getFileList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::filesystem::path > json::getFileList (const std::string &  {\i key}, const std::string &  {\i search}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 json. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i config_file_path} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'C5\'F1\'EB\'E8 \'ED\'E5 \'F3\'E4\'E0\'EB\'EE\'F1\'FC \'EE\'F2\'EA\'F0\'FB\'F2\'FC \'F4\'E0\'E9\'EB \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8.\cell }
{\row }
}
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EE\'F2\'EA\'F0\'FB\'E2\'E0\'E5\'F2 \'F4\'E0\'E9\'EB \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'E8 \'E7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'E5\'E3\'EE \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'E2 \'EE\'E1\'FA\'E5\'EA\'F2 config_json. \'C5\'F1\'EB\'E8 \'F4\'E0\'E9\'EB \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'ED\'E5 \'E1\'F3\'E4\'E5\'F2 \'ED\'E0\'E9\'E4\'E5\'ED, \'E2\'FB\'E1\'F0\'E0\'F1\'FB\'E2\'E0\'E5\'F2\'F1\'FF \'E8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'E5 std::runtime_error. \par
}{
\'C7\'E0\'EC\'E5\'F9\'E0\'E5\'F2 {\b ParserConfiguration} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 13}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00013                                                                                             \{\par
00014     std::vector<std::filesystem::path> files;\par
00015     std::filesystem::path directory = getFilePath(key);\par
00016 \par
00017     {\cf19 if} (std::filesystem::exists(directory)) \{\par
00018         {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : std::filesystem::recursive_directory_iterator(directory)) \{\par
00019             {\cf19 if} (entry.is_regular_file() && entry.path().filename().string().find(search) != std::string::npos) \{\par
00020                 files.push_back(entry.path());\par
00021                 {\cf20 //std::cout << entry.path().string() << "\\t" << entry.path() << std::endl;}\par
00022             \}\par
00023         \}\par
00024     \} {\cf19 else} \{\par
00025         {\cf20 // \'CE\'E1\'F0\'E0\'E1\'EE\'F2\'EA\'E0 \'EE\'F8\'E8\'E1\'EA\'E8}\par
00026         std::cout << {\cf22 "Directory does not exist or is not accessible: "} << directory << std::endl;\par
00027     \}\par
00028 \par
00029     {\cf19 return} files;\par
00030 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classjson_a335a17f634ae297aa36dbc40855dd8da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getFilePath\:json}
{\xe \v json\:getFilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::filesystem::path json::getFilePath (const std::string &  {\i key}){\f2 [override]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E8\'F5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3 \'E8 \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'EC\'F3 \'E7\'E0\'EF\'F0\'EE\'F1\'F3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\'CA\'EB\'FE\'F7 \'E4\'EB\'FF \'EF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'FF \'EF\'F3\'F2\'E8 \'EA \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i search} \cell }{\'CF\'EE\'E8\'F1\'EA\'EE\'E2\'FB\'E9 \'E7\'E0\'EF\'F0\'EE\'F1 \'E4\'EB\'FF \'F4\'E8\'EB\'FC\'F2\'F0\'E0\'F6\'E8\'E8 \'F4\'E0\'E9\'EB\'EE\'E2. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2, \'F3\'E4\'EE\'E2\'EB\'E5\'F2\'E2\'EE\'F0\'FF\'FE\'F9\'E8\'F5 \'F3\'F1\'EB\'EE\'E2\'E8\'FF\'EC \'EF\'EE\'E8\'F1\'EA\'E0.\par
}}\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2, \'ED\'E0\'E9\'E4\'E5\'ED\'ED\'FB\'F5 \'E2 \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'E8, \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'ED\'EE\'E9 \'EA\'EB\'FE\'F7\'EE\'EC key. \'D4\'E0\'E9\'EB\'FB \'F4\'E8\'EB\'FC\'F2\'F0\'F3\'FE\'F2\'F1\'FF \'F1 \'EF\'EE\'EC\'EE\'F9\'FC\'FE \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'E3\'EE \'E7\'E0\'EF\'F0\'EE\'F1\'E0 search. \par
}{
\'C7\'E0\'EC\'E5\'F9\'E0\'E5\'F2 {\b ParserConfiguration} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 41}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00041                                                         \{\par
00042     {\cf19 if} (!config_json.contains(key)) \{\par
00043         {\cf19 throw} std::runtime_error({\cf22 "Configuration file does not contain key: "} + key);\par
00044     \}\par
00045     {\cf19 return} std::filesystem::u8path(config_json[key].get<std::string>());\par
00046 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classjson_a760a6ea6469d17e611ccf23921753d20_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getInteger\:json}
{\xe \v json\:getInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long long json::getInteger (const std::string &  {\i key}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E8\'E9 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\'CA\'EB\'FE\'F7 \'E4\'EB\'FF \'EF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'FF \'EF\'F3\'F2\'E8 \'EA \'F4\'E0\'E9\'EB\'F3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E8\'E9 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'C5\'F1\'EB\'E8 \'EA\'EB\'FE\'F7 \'EE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'E2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E8\'E9 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3 key, \'E8\'E7\'E2\'EB\'E5\'EA\'E0\'FF \'E5\'E3\'EE \'E8\'E7 \'EE\'E1\'FA\'E5\'EA\'F2\'E0 config_json. \'C5\'F1\'EB\'E8 \'EA\'EB\'FE\'F7 \'EE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'E2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8, \'E2\'FB\'E1\'F0\'E0\'F1\'FB\'E2\'E0\'E5\'F2\'F1\'FF \'E8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'E5 std::runtime_error. \par
}{
\'CF\'E5\'F0\'E5\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'FF\'E5\'F2 \'EC\'E5\'F2\'EE\'E4 \'EF\'F0\'E5\'E4\'EA\'E0 {\b ParserConfiguration} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 58}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00058                                                \{\par
00059     {\cf19 if} (!config_json.contains(key)) \{\par
00060         {\cf19 throw} std::runtime_error({\cf22 "Configuration file does not contain key: "} + key);\par
00061     \}\par
00062     {\cf19 return} config_json[key];\par
00063 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v config_json\:json}
{\xe \v json\:config_json}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nlohmann::json json::config_json{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b json.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 26}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b json.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b json.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 nbr\par \pard\plain 
{\tc\tcl2 \v nbr}
{\xe \v nbr}
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 nbr. }}\par
{
{\f2 #include "nbr.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 nbr:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structnbr__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'E0\'F2\'F0\'E8\'E1\'F3\'F2\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< size_t, std::string > {\b icon}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 nbr. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 nbr \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'F2 \'EF\'EE\'EB\'E5 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'FF \'E8\'EA\'EE\'ED\'EE\'EA \'E2 \'E2\'E8\'E4\'E5 \'E0\'F1\'F1\'EE\'F6\'E8\'E0\'F2\'E8\'E2\'ED\'EE\'E3\'EE \'EA\'EE\'ED\'F2\'E5\'E9\'ED\'E5\'F0\'E0 std::map. \'CA\'EB\'FE\'F7\'EE\'EC \'FF\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'F0\'E0\'E7\'EC\'E5\'F0 \'E8\'EA\'EE\'ED\'EA\'E8, \'E0 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5\'EC - \'F1\'F2\'F0\'EE\'EA\'E0, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E0\'FF \'E8\'EA\'EE\'ED\'EA\'F3. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b nbr.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 14}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v icon\:nbr}
{\xe \v nbr\:icon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map<size_t, std::string> nbr::icon}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F2\'E5\'E9\'ED\'E5\'F0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E8\'EA\'EE\'ED\'EE\'EA \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b nbr.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nbr.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 ParserConfiguration\par \pard\plain 
{\tc\tcl2 \v ParserConfiguration}
{\xe \v ParserConfiguration}
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF \'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0. }}\par
{
{\f2 #include "ParserConfiguration.h"}}\par
\'C3\'F0\'E0\'F4 \'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'E8\'FF:ParserConfiguration:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_parser_configuration__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ParserConfiguration} ()=default\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::filesystem::path {\b getFilePath} (const std::string &key)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'EA\'EB\'FE\'F7\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::vector< std::filesystem::path > {\b getFileList} (const std::string &key, const std::string &search)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'EA\'EB\'FE\'F7\'E0 \'E8 \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'E3\'EE \'E7\'E0\'EF\'F0\'EE\'F1\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b display} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual long long {\b getInteger} (const std::string &key)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 \'FD\'EA\'E7\'E5\'EC\'EF\'EB\'FF\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 ConfigParser \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EF\'F3\'F2\'E8 \'EA \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'EC\'F3 \'F4\'E0\'E9\'EB\'F3. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF \'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 {\b ParserConfiguration} \'EF\'F0\'E5\'E4\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'F1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E9 \'EC\'E5\'F2\'EE\'E4 create() \'E4\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF \'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0. \'CE\'E1\'FA\'E5\'EA\'F2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EC\'EE\'E6\'E5\'F2 \'E1\'FB\'F2\'FC \'F1\'EE\'E7\'E4\'E0\'ED \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F4\'E0\'E9\'EB\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'F4\'EE\'F0\'EC\'E0\'F2\'E0 JSON. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b ParserConfiguration.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v ~ParserConfiguration\:ParserConfiguration}
{\xe \v ParserConfiguration\:~ParserConfiguration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual ParserConfiguration::~ParserConfiguration (){\f2 [virtual]}, {\f2 [default]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v display\:ParserConfiguration}
{\xe \v ParserConfiguration\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void ParserConfiguration::display (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'EE\'F2\'EE\'E1\'F0\'E0\'E6\'E0\'E5\'F2 \'E8\'ED\'F4\'EE\'F0\'EC\'E0\'F6\'E8\'FE \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'EC\'EE\'E3\'EE \'EA\'EB\'E0\'F1\'F1\'EE\'EC. \'C4\'E0\'ED\'ED\'FB\'E9 \'EC\'E5\'F2\'EE\'E4 \'EC\'EE\'E6\'E5\'F2 \'E1\'FB\'F2\'FC \'EF\'E5\'F0\'E5\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED \'E2 \'EF\'F0\'EE\'E8\'E7\'E2\'EE\'E4\'ED\'FB\'F5 \'EA\'EB\'E0\'F1\'F1\'E0\'F5. \par
}{
\'C7\'E0\'EC\'E5\'F9\'E0\'E5\'F2\'F1\'FF \'E2 {\b json} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFileList\:ParserConfiguration}
{\xe \v ParserConfiguration\:getFileList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::vector< std::filesystem::path > ParserConfiguration::getFileList (const std::string &  {\i key}, const std::string &  {\i search}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'EA\'EB\'FE\'F7\'E0 \'E8 \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'E3\'EE \'E7\'E0\'EF\'F0\'EE\'F1\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2, \'F1\'E2\'FF\'E7\'E0\'ED\'ED\'FB\'F5 \'F1 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'EC \'EA\'EB\'FE\'F7\'EE\'EC \'E8 \'F3\'E4\'EE\'E2\'EB\'E5\'F2\'E2\'EE\'F0\'FF\'FE\'F9\'E8\'F5 \'EF\'EE\'E8\'F1\'EA\'EE\'E2\'EE\'EC\'F3 \'E7\'E0\'EF\'F0\'EE\'F1\'F3, \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\'CA\'EB\'FE\'F7 \'E4\'EB\'FF \'EF\'EE\'E8\'F1\'EA\'E0 \'F1\'EF\'E8\'F1\'EA\'E0 \'F4\'E0\'E9\'EB\'EE\'E2. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i search} \cell }{\'CF\'EE\'E8\'F1\'EA\'EE\'E2\'FB\'E9 \'E7\'E0\'EF\'F0\'EE\'F1 \'E4\'EB\'FF \'F4\'E8\'EB\'FC\'F2\'F0\'E0\'F6\'E8\'E8 \'F4\'E0\'E9\'EB\'EE\'E2. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'EF\'E8\'F1\'EE\'EA \'F4\'E0\'E9\'EB\'EE\'E2. \par
}}}{
\'C7\'E0\'EC\'E5\'F9\'E0\'E5\'F2\'F1\'FF \'E2 {\b json} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getFilePath\:ParserConfiguration}
{\xe \v ParserConfiguration\:getFilePath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual std::filesystem::path ParserConfiguration::getFilePath (const std::string &  {\i key}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'EA\'EB\'FE\'F7\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EE\'E4 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3, \'F1\'E2\'FF\'E7\'E0\'ED\'ED\'FB\'E9 \'F1 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'EC \'EA\'EB\'FE\'F7\'EE\'EC, \'E8\'E7 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\'CA\'EB\'FE\'F7 \'E4\'EB\'FF \'EF\'EE\'E8\'F1\'EA\'E0 \'EF\'F3\'F2\'E8 \'EA \'F4\'E0\'E9\'EB\'F3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3. \par
}}}{
\'C7\'E0\'EC\'E5\'F9\'E0\'E5\'F2\'F1\'FF \'E2 {\b json} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v getInteger\:ParserConfiguration}
{\xe \v ParserConfiguration\:getInteger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual long long ParserConfiguration::getInteger (const std::string &  {\i key}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 \'FD\'EA\'E7\'E5\'EC\'EF\'EB\'FF\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 ConfigParser \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EF\'F3\'F2\'E8 \'EA \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'EC\'F3 \'F4\'E0\'E9\'EB\'F3. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E9 \'EC\'E5\'F2\'EE\'E4 create() \'F1\'EE\'E7\'E4\'E0\'E5\'F2 \'E8 \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'FD\'EA\'E7\'E5\'EC\'EF\'EB\'FF\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 ConfigParser \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EF\'F3\'F2\'E8 \'EA \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'EC\'F3 \'F4\'E0\'E9\'EB\'F3.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i config_file_path} \cell }{\'CF\'F3\'F2\'FC \'EA \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'EE\'ED\'ED\'EE\'EC\'F3 \'F4\'E0\'E9\'EB\'F3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'F1\'EE\'E7\'E4\'E0\'ED\'ED\'FB\'E9 \'FD\'EA\'E7\'E5\'EC\'EF\'EB\'FF\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 ConfigParser.\par
}}\'D1\'EE\'E7\'E4\'E0\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i config_file_path} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC \'ED\'E0 \'EE\'E1\'FA\'E5\'EA\'F2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'C5\'F1\'EB\'E8 \'F2\'E8\'EF \'F4\'E0\'E9\'EB\'E0 \'ED\'E5 \'EF\'EE\'E4\'E4\'E5\'F0\'E6\'E8\'E2\'E0\'E5\'F2\'F1\'FF.\cell }
{\row }
}
\'D1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E9 \'EC\'E5\'F2\'EE\'E4 create() \'F1\'EE\'E7\'E4\'E0\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0 \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8. \'C5\'F1\'EB\'E8 \'F4\'E0\'E9\'EB \'E8\'EC\'E5\'E5\'F2 \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'E5 ".json", \'F1\'EE\'E7\'E4\'E0\'E5\'F2\'F1\'FF \'EE\'E1\'FA\'E5\'EA\'F2 json, \'E8\'ED\'E0\'F7\'E5 \'E2\'FB\'E1\'F0\'E0\'F1\'FB\'E2\'E0\'E5\'F2\'F1\'FF \'E8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'E5 std::runtime_error.\par
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i key} \cell }{\'CA\'EB\'FE\'F7 \'E4\'EB\'FF \'EF\'EE\'EB\'F3\'F7\'E5\'ED\'E8\'FF \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E3\'EE \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'FF. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'C5\'F1\'EB\'E8 \'EA\'EB\'FE\'F7 \'EE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'E2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8.\cell }
{\row }
}
\'C2\'E8\'F0\'F2\'F3\'E0\'EB\'FC\'ED\'E0\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'FF {\b getInteger()} \'E2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'F6\'E5\'EB\'EE\'F7\'E8\'F1\'EB\'E5\'ED\'ED\'EE\'E5 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'E5, \'F1\'EE\'EE\'F2\'E2\'E5\'F2\'F1\'F2\'E2\'F3\'FE\'F9\'E5\'E5 \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'EC\'F3 \'EA\'EB\'FE\'F7\'F3 key. \'C4\'E0\'ED\'ED\'E0\'FF \'F4\'F3\'ED\'EA\'F6\'E8\'FF \'E4\'EE\'EB\'E6\'ED\'E0 \'E1\'FB\'F2\'FC \'F0\'E5\'E0\'EB\'E8\'E7\'EE\'E2\'E0\'ED\'E0 \'E2 \'EA\'EB\'E0\'F1\'F1\'E0\'F5-\'ED\'E0\'F1\'EB\'E5\'E4\'ED\'E8\'EA\'E0\'F5. \'C5\'F1\'EB\'E8 \'EA\'EB\'FE\'F7 \'EE\'F2\'F1\'F3\'F2\'F1\'F2\'E2\'F3\'E5\'F2 \'E2 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8, \'E2\'FB\'E1\'F0\'E0\'F1\'FB\'E2\'E0\'E5\'F2\'F1\'FF \'E8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'E5 std::runtime_error. \par
}{
\'CF\'E5\'F0\'E5\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'FF\'E5\'F2\'F1\'FF \'E2 {\b json} ({\i \'F1\'F2\'F0.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'E0 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParserConfiguration.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 point\par \pard\plain 
{\tc\tcl2 \v point}
{\xe \v point}
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 \'F2\'EE\'F7\'E5\'EA. }}\par
{
{\f2 #include "point_data.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 point:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpoint__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB \'F2\'EE\'F7\'E5\'EA \'E2 \'F1\'F2\'E0\'ED\'E4\'E0\'F0\'F2\'ED\'FB\'E9 \'E2\'FB\'E2\'EE\'E4. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'E0\'F2\'F0\'E8\'E1\'F3\'F2\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::pair< double, double > > {\b coordinates}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 \'F2\'EE\'F7\'E5\'EA. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i coordinates} \cell }{\'C2\'E5\'EA\'F2\'EE\'F0 \'EF\'E0\'F0, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E8\'F5 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b point_data.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v display\:point}
{\xe \v point\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void point::display (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB \'F2\'EE\'F7\'E5\'EA \'E2 \'F1\'F2\'E0\'ED\'E4\'E0\'F0\'F2\'ED\'FB\'E9 \'E2\'FB\'E2\'EE\'E4. }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b point_data.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00015                   \{\par
00016         {\cf19 for} ({\cf17 const} {\cf17 auto}& coord : coordinates) \{\par
00017             std::cout << {\cf22 "("} << coord.first << {\cf22 "; "} << coord.second << {\cf22 ")"} << std::endl;\par
00018         \}\par
00019     \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpoint_a0b248ae2a8dab47a95f68ffb03f33ede_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v coordinates\:point}
{\xe \v point\:coordinates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::pair<double, double> > point::coordinates}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b point_data.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b point_data.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 RenderPDF\par \pard\plain 
{\tc\tcl2 \v RenderPDF}
{\xe \v RenderPDF}
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 PDF-\'F4\'E0\'E9\'EB\'E0. }}\par
{
{\f2 #include "RenderPDF.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 RenderPDF:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b generatePDF} (std::string &filename)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 PDF-\'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FF \'E3\'F0\'E0\'F4\'E8\'F7\'E5\'F1\'EA\'E8\'E5 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'FB, \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'ED\'FB\'E5 \'E2 \'E4\'F0\'F3\'E3\'E8\'F5 \'EC\'E5\'F2\'EE\'E4\'E0\'F5 \'EA\'EB\'E0\'F1\'F1\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RenderPDF} ({\b cfm} cfm_data, {\b zgt} zgt_data, const std::vector< {\b tbl} > &tbl_data, {\b nbr} nbr_data, {\b point} point_data, std::filesystem::path fontPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b RenderPDF}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~RenderPDF} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E5\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b RenderPDF}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HPDF_Font {\b loadFont} (const std::string &fontPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'F8\'F0\'E8\'F4\'F2 \'E8\'E7 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sortTblData} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E2 tbl_data_ \'EF\'EE \'EF\'EE\'EB\'EE\'E6\'E5\'ED\'E8\'FE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b populatePointTbl} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'EE\'EB\'ED\'FF\'E5\'F2 point_tbl \'E4\'E0\'ED\'ED\'FB\'EC\'E8 \'E8\'E7 tbl_data_. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkForNewPage} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2 \'ED\'E0\'EB\'E8\'F7\'E8\'E5 \'E4\'F3\'E1\'EB\'E8\'EA\'E0\'F2\'EE\'E2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 \'E2 point_data_. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createA3Page} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 \'ED\'EE\'E2\'F3\'FE \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'F3 \'F4\'EE\'F0\'EC\'E0\'F2\'E0 A3. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFontSize} (HPDF_Page page, double size)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'F2 \'F0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E8 \'F0\'E0\'E7\'EC\'E5\'F0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB PDF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b generate_Marks} (size_t blank)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'E5\'ED\'E5\'F0\'E8\'F0\'F3\'E5\'F2 \'EC\'E0\'F0\'EA\'E5\'F0\'FB \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'E8\'E7\'EC\'E5\'F0\'E5\'ED\'E8\'E9 \'E8\'E7 \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawDigitIndices} (HPDF_Page page, size_t blank)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'E8\'ED\'E4\'E5\'EA\'F1\'FB (\'F6\'E8\'F4\'F0\'FB) \'ED\'E0 PDF \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawMainLines} (HPDF_Page page, size_t blank)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'EE\'F1\'ED\'EE\'E2\'ED\'FB\'E5 \'EB\'E8\'ED\'E8\'E8 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawAdditionalTicks} (HPDF_Page page, size_t blank)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'E4\'EE\'EF\'EE\'EB\'ED\'E8\'F2\'E5\'EB\'FC\'ED\'FB\'E5 \'EE\'F2\'EC\'E5\'F2\'EA\'E8 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializeData} ({\b cfm} cfm_data, {\b zgt} zgt_data, const std::vector< {\b tbl} > &tbl_data, {\b nbr} nbr_data, {\b point} point_data, std::filesystem::path fontPath)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initializePDF} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 HPDF_Doc \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 PDF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b adjustFontSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'E3\'EE\'ED\'FF\'E5\'F2 \'F0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HPDF_REAL {\b calculateYCoordinate} (HPDF_REAL angle, size_t blank)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'F7\'E8\'F1\'EB\'FF\'E5\'F2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'F3 Y \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HPDF_REAL {\b calculateXCoordinate} (HPDF_REAL angle, double textWidth, size_t blank)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'F7\'E8\'F1\'EB\'FF\'E5\'F2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'F3 X \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b formatText} (int i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'F3\'E5\'F2 \'F2\'E5\'EA\'F1\'F2 \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'E9 \'F2\'EE\'F7\'ED\'EE\'F1\'F2\'E8. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawText} (HPDF_Page page, const std::string &text, HPDF_REAL x, HPDF_REAL y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'F2\'E5\'EA\'F1\'F2 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'F1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b drawCircle} (HPDF_Page page, double x, double y, double radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'EA\'F0\'F3\'E3 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b draw_line} (HPDF_Page page, HPDF_REAL x1, HPDF_REAL y1, HPDF_REAL x2, HPDF_REAL y2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'EB\'E8\'ED\'E8\'FE \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C7\'E0\'EA\'F0\'FB\'F2\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b PI} = 3.14159265358979323846\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b margitText} = 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b new_page} = false\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::filesystem::path {\b fontPath_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HPDF_Doc {\b pdf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HPDF_Font {\b font_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cfm} {\b cfm_data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zgt} {\b zgt_data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b nbr} {\b nbr_data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b point} {\b point_data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b tbl} > {\b tbl_data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< size_t > {\b point_tbl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b marks}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 PDF-\'F4\'E0\'E9\'EB\'E0. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 {\b RenderPDF} \'EF\'F0\'E5\'E4\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'F4\'F3\'ED\'EA\'F6\'E8\'EE\'ED\'E0\'EB\'FC\'ED\'EE\'F1\'F2\'FC \'E4\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF \'E8 \'F0\'E5\'ED\'E4\'E5\'F0\'E8\'ED\'E3\'E0 PDF-\'F4\'E0\'E9\'EB\'EE\'E2. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v RenderPDF\:RenderPDF}
{\xe \v RenderPDF\:RenderPDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RenderPDF::RenderPDF ({\b cfm}  {\i cfm_data}, {\b zgt}  {\i zgt_data}, const std::vector< {\b tbl} > &  {\i tbl_data}, {\b nbr}  {\i nbr_data}, {\b point}  {\i point_data}, std::filesystem::path  {\i fontPath})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b RenderPDF}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5, \'F1\'EE\'E7\'E4\'E0\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 PDF, \'EF\'EE\'E4\'E3\'EE\'ED\'FF\'E5\'F2 \'F0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0, \'E7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'F8\'F0\'E8\'F4\'F2, \'F1\'EE\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB \'E8 \'E7\'E0\'EF\'EE\'EB\'ED\'FF\'E5\'F2 \'F2\'E0\'E1\'EB\'E8\'F6\'F3 \'F2\'EE\'F7\'E5\'EA. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 47}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00047                                                                                                                                            \{\par
00048     initializeData(std::move(cfm_data), std::move(zgt_data), tbl_data, std::move(nbr_data), std::move(point_data), fontPath);\par
00049     initializePDF();\par
00050     adjustFontSize();\par
00051     font_ = loadFont(fontPath_.string());\par
00052     sortTblData();\par
00053     populatePointTbl();\par
00054     new_page = checkForNewPage();\par
00055 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_af0e199f862cb39e5600325bd2c69600f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~RenderPDF\:RenderPDF}
{\xe \v RenderPDF\:~RenderPDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RenderPDF::~RenderPDF ()}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E5\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b RenderPDF}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F1\'E2\'EE\'E1\'EE\'E6\'E4\'E0\'E5\'F2 \'F0\'E5\'F1\'F3\'F0\'F1\'FB, \'F1\'E2\'FF\'E7\'E0\'ED\'ED\'FB\'E5 \'F1 \'EE\'E1\'FA\'E5\'EA\'F2\'EE\'EC HPDF_Doc. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 35}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00035                       \{\par
00036     {\cf19 if} (pdf_) \{\par
00037         HPDF_Free(pdf_);\par
00038     \}\par
00039 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v adjustFontSize\:RenderPDF}
{\xe \v RenderPDF\:adjustFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::adjustFontSize (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E4\'E3\'EE\'ED\'FF\'E5\'F2 \'F0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'F2 \'EA\'EE\'FD\'F4\'F4\'E8\'F6\'E8\'E5\'ED\'F2 \'EF\'EE\'EF\'F0\'E0\'E2\'EA\'E8 \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'E4\'EB\'FF \'F8\'F0\'E8\'F4\'F2\'E0 GOST_B. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 92}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00092                                 \{\par
00093     cfm_data_.digit_height*=1.090248; {\cf20 //\'EA\'EE\'FD\'F4\'F4\'E8\'F6\'E8\'E5\'ED\'F2 \'EF\'EE\'EF\'F0\'E0\'E2\'EA\'E8 \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'E4\'EB\'FF \'F8\'F0\'E8\'F4\'F2\'E0 GOST_B}\par
00094 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a9c8b019dbb7873ad236e5b15c52fd4f0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calculateXCoordinate\:RenderPDF}
{\xe \v RenderPDF\:calculateXCoordinate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HPDF_REAL RenderPDF::calculateXCoordinate (HPDF_REAL  {\i angle}, double  {\i textWidth}, size_t  {\i blank}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'F7\'E8\'F1\'EB\'FF\'E5\'F2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'F3 X \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i angle} \cell }{\'D3\'E3\'EE\'EB \'EC\'E0\'F0\'EA\'E5\'F0\'E0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i textWidth} \cell }{\'D8\'E8\'F0\'E8\'ED\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blank} \cell }{\'D0\'E0\'E7\'EC\'E5\'F0 \'EF\'F3\'F1\'F2\'EE\'E3\'EE \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 X \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 80}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00080                                                                                          \{\par
00081     {\cf18 double} marginText = 1;\par
00082     {\cf17 auto} radius = (cfm_data_.diameter / 2.0) - cfm_data_.digital_tick[0] / 2;\par
00083     HPDF_REAL x = point_data_.coordinates[point_tbl[blank] - marginText].first +\par
00084                   (radius - cfm_data_.digital_tick[0]-1) * cos(angle) - textWidth / 2;\par
00085     {\cf19 return} x;\par
00086 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a98e9f7f26365660413fb541ecd7dc92f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calculateYCoordinate\:RenderPDF}
{\xe \v RenderPDF\:calculateYCoordinate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HPDF_REAL RenderPDF::calculateYCoordinate (HPDF_REAL  {\i angle}, size_t  {\i blank}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'F7\'E8\'F1\'EB\'FF\'E5\'F2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'F3 Y \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i angle} \cell }{\'D3\'E3\'EE\'EB \'EC\'E0\'F0\'EA\'E5\'F0\'E0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blank} \cell }{\'D0\'E0\'E7\'EC\'E5\'F0 \'EF\'F3\'F1\'F2\'EE\'E3\'EE \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 Y \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E0\'F0\'EA\'E5\'F0\'E0. \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 95}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00095                                                                        \{\par
00096     {\cf18 double} marginText = 1;\par
00097     {\cf17 auto} radius = (cfm_data_.diameter / 2.0) - cfm_data_.digital_tick[0] / 2;\par
00098     HPDF_REAL y = point_data_.coordinates[point_tbl[blank] - marginText].second +\par
00099                   (radius - cfm_data_.digital_tick[0]-1) * sin(angle) - cfm_data_.digit_height / 2.5 + 0.5;\par
00100     {\cf19 return} y;\par
00101 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a7931b27233f110635d4c15fd83508a3b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v checkForNewPage\:RenderPDF}
{\xe \v RenderPDF\:checkForNewPage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RenderPDF::checkForNewPage (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F0\'EE\'E2\'E5\'F0\'FF\'E5\'F2 \'ED\'E0\'EB\'E8\'F7\'E8\'E5 \'E4\'F3\'E1\'EB\'E8\'EA\'E0\'F2\'EE\'E2 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 \'E2 point_data_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 true, \'E5\'F1\'EB\'E8 \'E5\'F1\'F2\'FC \'E4\'F3\'E1\'EB\'E8\'EA\'E0\'F2\'FB \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2, \'F3\'EA\'E0\'E7\'FB\'E2\'E0\'FE\'F9\'E8\'E5 \'ED\'E0 \'ED\'E5\'EE\'E1\'F5\'EE\'E4\'E8\'EC\'EE\'F1\'F2\'FC \'ED\'EE\'E2\'EE\'E9 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB, \'E8\'ED\'E0\'F7\'E5 false. \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Processor.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 8}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00008                                 \{\par
00009     {\cf19 for} ({\cf18 size_t} i = 0; i < point_data_.coordinates.size(); ++i) \{\par
00010         {\cf19 for} ({\cf18 size_t} j = i + 1; j < point_data_.coordinates.size(); ++j) \{\par
00011             {\cf19 if} (point_data_.coordinates[i] == point_data_.coordinates[j]) \{\par
00012                 {\cf19 return} {\cf17 true};\par
00013             \}\par
00014         \}\par
00015     \}\par
00016     {\cf19 return} {\cf17 false};\par
00017 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_ae7ea70ad51e168a5c255de4ea54db087_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v createA3Page\:RenderPDF}
{\xe \v RenderPDF\:createA3Page}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::createA3Page (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 \'ED\'EE\'E2\'F3\'FE \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'F3 \'F4\'EE\'F0\'EC\'E0\'F2\'E0 A3. }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 7}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00007                               \{\par
00008     HPDF_Page page = HPDF_AddPage(pdf_);\par
00009     HPDF_Page_SetSize(page, HPDF_PAGE_SIZE_A3, HPDF_PAGE_PORTRAIT);\par
00010 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a22fa693e95126bb362fe324470ba2277_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v draw_line\:RenderPDF}
{\xe \v RenderPDF\:draw_line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::draw_line (HPDF_Page  {\i page}, HPDF_REAL  {\i x1}, HPDF_REAL  {\i y1}, HPDF_REAL  {\i x2}, HPDF_REAL  {\i y2}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'EB\'E8\'ED\'E8\'FE \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'ED\'E0 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'E1\'F3\'E4\'E5\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED\'E0 \'EB\'E8\'ED\'E8\'FF. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x1} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 X \'ED\'E0\'F7\'E0\'EB\'E0 \'EB\'E8\'ED\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y1} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 Y \'ED\'E0\'F7\'E0\'EB\'E0 \'EB\'E8\'ED\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x2} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 X \'EA\'EE\'ED\'F6\'E0 \'EB\'E8\'ED\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y2} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 Y \'EA\'EE\'ED\'F6\'E0 \'EB\'E8\'ED\'E8\'E8. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 38}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00038                                                                                                 \{\par
00039     HPDF_Page_MoveTo(page, x1, y1);\par
00040     HPDF_Page_LineTo(page, x2, y2);\par
00041     HPDF_Page_Stroke(page);\par
00042 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_ae17f88d413daf207f1b93fc43a8fd679_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawAdditionalTicks\:RenderPDF}
{\xe \v RenderPDF\:drawAdditionalTicks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::drawAdditionalTicks (HPDF_Page  {\i page}, size_t  {\i blank}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'E4\'EE\'EF\'EE\'EB\'ED\'E8\'F2\'E5\'EB\'FC\'ED\'FB\'E5 \'EE\'F2\'EC\'E5\'F2\'EA\'E8 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'ED\'E0 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'E1\'F3\'E4\'F3\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED\'FB \'E4\'EE\'EF\'EE\'EB\'ED\'E8\'F2\'E5\'EB\'FC\'ED\'FB\'E5 \'EE\'F2\'EC\'E5\'F2\'EA\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blank} \cell }{\'C8\'ED\'E4\'E5\'EA\'F1 \'F1\'F2\'F0\'EE\'EA\'E8 \'E2 \'F2\'E0\'E1\'EB\'E8\'F6\'E5 \'E4\'E0\'ED\'ED\'FB\'F5, \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'F1\'EB\'E5\'E4\'F3\'E5\'F2 \'F0\'E8\'F1\'EE\'E2\'E0\'F2\'FC \'EE\'F2\'EC\'E5\'F2\'EA\'E8. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Line.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 125}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00125                                                                 \{\par
00126     {\cf17 auto} radius = cfm_data_.diameter / 2.0f;\par
00127     {\cf18 size_t} size_tick_mask = cfm_data_.tick_mask.size() - 1;\par
00128     {\cf19 for} ({\cf18 size_t} k = 0; k < marks.size() - 1; k++) \{\par
00129         {\cf18 double} angle1 = 4.71239 - marks[k];\par
00130         {\cf18 double} angle2 = 4.71239 - marks[k + 1];\par
00131         {\cf18 double} angle_diff = (angle2 - angle1) / {\cf18 double}(size_tick_mask);\par
00132 \par
00133         {\cf19 for} ({\cf18 size_t} j = 1; j <= size_tick_mask; j++) \{\par
00134             {\cf18 double} angle = angle1 + j * angle_diff;\par
00135             HPDF_REAL x1 = point_data_.coordinates[point_tbl[blank] - 1].first + radius * cos(angle);\par
00136             HPDF_REAL y1 = point_data_.coordinates[point_tbl[blank] - 1].second + radius * sin(angle);\par
00137             HPDF_REAL x2, y2;\par
00138             HPDF_REAL height_line;\par
00139 \par
00140             {\cf19 if} (cfm_data_.tick_mask[j] == {\cf23 '1'}) \{\par
00141                 height_line = cfm_data_.small_tick[0];\par
00142             \}\par
00143             {\cf19 if} (cfm_data_.tick_mask[j] == {\cf23 '2'}) \{\par
00144                 height_line = cfm_data_.big_tick[0];\par
00145             \}\par
00146             {\cf19 if} (cfm_data_.tick_mask[j] == {\cf23 '3'}) \{\par
00147                 height_line = cfm_data_.digital_tick[0];\par
00148             \}\par
00149 \par
00150             x2 = point_data_.coordinates[point_tbl[blank] - 1].first + (radius - height_line) * cos(angle);\par
00151             y2 = point_data_.coordinates[point_tbl[blank] - 1].second + (radius - height_line) * sin(angle);\par
00152 \par
00153             draw_line(page, x1, y1, x2, y2);\par
00154         \}\par
00155     \}\par
00156 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_acbc9c679d623723340171bd56c5575cb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_acbc9c679d623723340171bd56c5575cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawCircle\:RenderPDF}
{\xe \v RenderPDF\:drawCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::drawCircle (HPDF_Page  {\i page}, double  {\i x}, double  {\i y}, double  {\i radius}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'EA\'F0\'F3\'E3 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'ED\'E0 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'E1\'F3\'E4\'E5\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED \'EA\'F0\'F3\'E3. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 X \'F6\'E5\'ED\'F2\'F0\'E0 \'EA\'F0\'F3\'E3\'E0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 Y \'F6\'E5\'ED\'F2\'F0\'E0 \'EA\'F0\'F3\'E3\'E0. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i radius} \cell }{\'D0\'E0\'E4\'E8\'F3\'F1 \'EA\'F0\'F3\'E3\'E0. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 24}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00024                                                                             \{\par
00025     HPDF_Page_Circle(page, x, y, radius);\par
00026     HPDF_Page_Stroke(page);\par
00027 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a50a4d487307986751eb5087f25961c27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawDigitIndices\:RenderPDF}
{\xe \v RenderPDF\:drawDigitIndices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::drawDigitIndices (HPDF_Page  {\i page}, size_t  {\i blank}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'E8\'ED\'E4\'E5\'EA\'F1\'FB (\'F6\'E8\'F4\'F0\'FB) \'ED\'E0 PDF \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'ED\'E0 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'F3\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED\'FB \'E8\'ED\'E4\'E5\'EA\'F1\'FB. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blank} \cell }{\'D0\'E0\'E7\'EC\'E5\'F0 \'EF\'F3\'F1\'F2\'EE\'E3\'EE \'EF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b digit.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 9}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00009                                                              \{\par
00010     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E4\'EB\'FF \'E8\'ED\'E4\'E5\'EA\'F1\'EE\'E2}\par
00011     setFontSize(page, cfm_data_.digit_height);\par
00012 \par
00013     {\cf20 // \'D6\'E8\'EA\'EB \'EF\'EE \'E2\'F1\'E5\'EC \'EC\'E5\'F2\'EA\'E0\'EC}\par
00014     {\cf19 for} ({\cf18 int} i = 0; i < marks.size(); i++) \{\par
00015         {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'F3\'E3\'EB\'E0 \'E4\'EB\'FF \'EA\'E0\'E6\'E4\'EE\'E9 \'EC\'E5\'F2\'EA\'E8}\par
00016         HPDF_REAL angle = 4.71239 - marks[i];\par
00017 \par
00018         {\cf20 // \'D4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'E5 \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8}\par
00019         {\cf17 auto} text = formatText(i);\par
00020 \par
00021         {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'F8\'E8\'F0\'E8\'ED\'FB \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8}\par
00022         {\cf17 auto} textWidth = HPDF_Page_TextWidth(page, text.c_str());\par
00023 \par
00024         {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 x \'E8 y \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8}\par
00025         HPDF_REAL x = calculateXCoordinate(angle, textWidth, blank);\par
00026         HPDF_REAL y = calculateYCoordinate(angle, blank);\par
00027 \par
00028         {\cf20 // \'D0\'E8\'F1\'EE\'E2\'E0\'ED\'E8\'E5 \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5}\par
00029         drawText(page, text, x, y);\par
00030     \}\par
00031 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_abaccfd0526f13c8d8c5d9f74ceb31f52_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_abaccfd0526f13c8d8c5d9f74ceb31f52_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawMainLines\:RenderPDF}
{\xe \v RenderPDF\:drawMainLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::drawMainLines (HPDF_Page  {\i page}, size_t  {\i blank}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'EE\'F1\'ED\'EE\'E2\'ED\'FB\'E5 \'EB\'E8\'ED\'E8\'E8 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'ED\'E0 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'E1\'F3\'E4\'F3\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED\'FB \'EE\'F1\'ED\'EE\'E2\'ED\'FB\'E5 \'EB\'E8\'ED\'E8\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blank} \cell }{\'C8\'ED\'E4\'E5\'EA\'F1 \'F1\'F2\'F0\'EE\'EA\'E8 \'E2 \'F2\'E0\'E1\'EB\'E8\'F6\'E5 \'E4\'E0\'ED\'ED\'FB\'F5, \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'F1\'EB\'E5\'E4\'F3\'E5\'F2 \'F0\'E8\'F1\'EE\'E2\'E0\'F2\'FC \'EB\'E8\'ED\'E8\'E8. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Line.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00052                                                           \{\par
00053     {\cf20 //\'D0\'E8\'F1\'F3\'E5\'EC \'EB\'E8\'ED\'E8\'E8 \'E3\'EB\'E0\'E2\'ED\'FB\'E5}\par
00054     {\cf18 double} radius = cfm_data_.diameter / 2.0;\par
00055     {\cf18 size_t} i = 0;\par
00056     {\cf19 for} ({\cf18 double} angle: marks) \{\par
00057         angle = 4.71239 - angle;\par
00058 \par
00059         {\cf18 double} sinAngle = sin(angle);\par
00060         {\cf18 double} cosAngle = cos(angle);\par
00061         HPDF_REAL x1, x2, y1, y2;\par
00062 \par
00063         x1 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00064              (radius - cfm_data_.digital_tick[0]) * cosAngle;\par
00065         y1 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00066              (radius - cfm_data_.digital_tick[0]) * sinAngle;\par
00067 \par
00068         {\cf19 if} (i == 0) \{ {\cf20 // \'C5\'F1\'EB\'E8 \'FD\'F2\'EE \'EF\'E5\'F0\'E2\'E0\'FF \'E8\'F2\'E5\'F0\'E0\'F6\'E8\'FF, \'F1\'EC\'E5\'F1\'F2\'E8\'F2\'FC \'E2\'E5\'F0\'F5\'ED\'FE\'FE \'EB\'E8\'ED\'E8\'FE \'ED\'E0 90 \'E3\'F0\'E0\'E4\'F3\'F1\'EE\'E2}\par
00069             {\cf18 double} shift_angle = angle + 1.5708; {\cf20 // \'D1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 \'ED\'E0 90 \'E3\'F0\'E0\'E4\'F3\'F1\'EE\'E2 \'E2\'EF\'F0\'E0\'E2\'EE}\par
00070             {\cf18 double} center_offset = cfm_data_.digital_tick[2] / 2; {\cf20 // \'D0\'E0\'E7\'EC\'E5\'F0 \'F6\'E5\'ED\'F2\'F0\'E0}\par
00071 \par
00072             x1 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00073                  (radius - cfm_data_.digital_tick[0]) * cosAngle;\par
00074             y1 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00075                  (radius - cfm_data_.digital_tick[0]) * sinAngle;\par
00076 \par
00077             x1 -= center_offset * cos(shift_angle); {\cf20 // \'D1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 x \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB}\par
00078             y1 -= center_offset * sin(shift_angle); {\cf20 // \'D1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 y \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB}\par
00079 \par
00080             x2 = x1 + (cfm_data_.digital_tick[0] - cfm_data_.digital_tick[2]) *\par
00081                       cos(shift_angle); {\cf20 // \'CF\'F0\'E0\'E2\'E0\'FF \'F7\'E0\'F1\'F2\'FC \'EB\'E8\'ED\'E8\'E8}\par
00082             y2 = y1 + (cfm_data_.digital_tick[0] - cfm_data_.digital_tick[2]) *\par
00083                       sin(shift_angle); {\cf20 // \'CF\'F0\'E0\'E2\'E0\'FF \'F7\'E0\'F1\'F2\'FC \'EB\'E8\'ED\'E8\'E8}\par
00084         \} {\cf19 else} \{\par
00085             x2 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00086                  (radius - cfm_data_.digital_tick[2]) * cosAngle;\par
00087             y2 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00088                  (radius - cfm_data_.digital_tick[2]) * sinAngle;\par
00089         \}\par
00090 \par
00091         {\cf20 // \'C2\'E5\'F0\'ED\'FF\'FF \'EB\'E8\'ED\'E8\'FF}\par
00092         HPDF_Page_SetLineWidth(page, cfm_data_.digital_tick[3]);\par
00093 \par
00094         draw_line(page, x2, y2, x1, y1);\par
00095 \par
00096         {\cf20 // \'CD\'E8\'E6\'ED\'FF\'FF \'EB\'E8\'ED\'E8\'FF}\par
00097         x1 = point_data_.coordinates[point_tbl[blank] - 1].first + radius * cos(angle);\par
00098         y1 = point_data_.coordinates[point_tbl[blank] - 1].second + radius * sin(angle);\par
00099         x2 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00100              (radius - cfm_data_.digital_tick[2]) * cosAngle;\par
00101         y2 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00102              (radius - cfm_data_.digital_tick[2]) * sinAngle;\par
00103 \par
00104         {\cf19 if} (i == 0) \{\par
00105             x2 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00106                  (radius - cfm_data_.digital_tick[0]) * cosAngle;\par
00107             y2 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00108                  (radius - cfm_data_.digital_tick[0]) * sinAngle;\par
00109         \}\par
00110 \par
00111         HPDF_Page_SetLineWidth(page, cfm_data_.digital_tick[1]);\par
00112         draw_line(page, x2, y2, x1, y1);\par
00113 \par
00114         i++;\par
00115     \}\par
00116 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a518d3eb66cbcdb313c218dc8028c9673_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a518d3eb66cbcdb313c218dc8028c9673_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawText\:RenderPDF}
{\xe \v RenderPDF\:drawText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::drawText (HPDF_Page  {\i page}, const std::string &  {\i text}, HPDF_REAL  {\i x}, HPDF_REAL  {\i y}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E8\'F1\'F3\'E5\'F2 \'F2\'E5\'EA\'F1\'F2 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'ED\'E0 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'E1\'F3\'E4\'E5\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED \'F2\'E5\'EA\'F1\'F2. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i text} \cell }{\'D2\'E5\'EA\'F1\'F2 \'E4\'EB\'FF \'E2\'FB\'E2\'EE\'E4\'E0 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'F3. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 X, \'E3\'E4\'E5 \'E1\'F3\'E4\'E5\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED \'F2\'E5\'EA\'F1\'F2. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{\'CA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'E0 Y, \'E3\'E4\'E5 \'E1\'F3\'E4\'E5\'F2 \'ED\'E0\'F0\'E8\'F1\'EE\'E2\'E0\'ED \'F2\'E5\'EA\'F1\'F2. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 52}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00052                                                                                         \{\par
00053     HPDF_Page_BeginText(page);\par
00054     HPDF_Page_MoveTextPos(page, x, y);\par
00055     HPDF_Page_ShowText(page, text.c_str());\par
00056     HPDF_Page_EndText(page);\par
00057 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_af00237dc614fc46323aead1daae13a15_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v formatText\:RenderPDF}
{\xe \v RenderPDF\:formatText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string RenderPDF::formatText (int  {\i i}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'F3\'E5\'F2 \'F2\'E5\'EA\'F1\'F2 \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \'E7\'E0\'E4\'E0\'ED\'ED\'EE\'E9 \'F2\'EE\'F7\'ED\'EE\'F1\'F2\'E8. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{\'C8\'ED\'E4\'E5\'EA\'F1 \'EC\'E0\'F0\'EA\'E5\'F0\'E0, \'F2\'E5\'EA\'F1\'F2 \'E4\'EB\'FF \'EA\'EE\'F2\'EE\'F0\'EE\'E3\'EE \'ED\'F3\'E6\'ED\'EE \'EE\'F2\'F4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'F2\'FC. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'CE\'F2\'F4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'ED\'FB\'E9 \'F2\'E5\'EA\'F1\'F2. \par
}}}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 65}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00065                                      \{\par
00066     std::stringstream ss;\par
00067     ss.precision(cfm_data_.format[1]);\par
00068     ss << std::fixed << cfm_data_.marks[i];\par
00069     {\cf19 return} ss.str();\par
00070 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a87d9d5335c694603bf6686851879879a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generate_Marks\:RenderPDF}
{\xe \v RenderPDF\:generate_Marks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::generate_Marks (size_t  {\i blank}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C3\'E5\'ED\'E5\'F0\'E8\'F0\'F3\'E5\'F2 \'EC\'E0\'F0\'EA\'E5\'F0\'FB \'ED\'E0 \'EE\'F1\'ED\'EE\'E2\'E5 \'E8\'E7\'EC\'E5\'F0\'E5\'ED\'E8\'E9 \'E8\'E7 \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i blank} \cell }{\'C8\'ED\'E4\'E5\'EA\'F1 \'F1\'F2\'F0\'EE\'EA\'E8 \'E2 \'F2\'E0\'E1\'EB\'E8\'F6\'E5 \'E4\'E0\'ED\'ED\'FB\'F5, \'E8\'E7 \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'F1\'EB\'E5\'E4\'F3\'E5\'F2 \'F1\'E3\'E5\'ED\'E5\'F0\'E8\'F0\'EE\'E2\'E0\'F2\'FC \'EC\'E0\'F0\'EA\'E5\'F0\'FB. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Line.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00010                                            \{\par
00011     {\cf18 size_t} size = tbl_data_[blank].measurements.size();\par
00012     {\cf17 auto} a0 = (tbl_data_[blank].measurements[0][0] + tbl_data_[blank].measurements[0][1]) / 2.0;\par
00013     {\cf17 auto} an =\par
00014             (tbl_data_[blank].measurements[size - 1][0] + tbl_data_[blank].measurements[size - 1][1]) / 2.0;\par
00015     {\cf17 auto} aDelta = (an - a0) / size;\par
00016 \par
00017     {\cf19 for} ({\cf18 int} i = 0; i < size; i++) \{\par
00018         {\cf17 auto} asred = (tbl_data_[blank].measurements[i][0] + tbl_data_[blank].measurements[i][1]) / 2.0;\par
00019         marks.push_back(asred + aDelta);\par
00020     \}\par
00021     std::vector<double> angles_deg(marks.size());\par
00022 \par
00023     {\cf20 // \'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'FF \'F3\'E3\'EB\'EE\'E2 \'E8\'E7 \'F0\'E0\'E4\'E8\'E0\'ED \'E2 \'E3\'F0\'E0\'E4\'F3\'F1\'FB}\par
00024     {\cf19 for} ({\cf18 size_t} i = 0; i < marks.size(); i++) \{\par
00025         angles_deg[i] = marks[i] * (180.0 / PI);\par
00026     \}\par
00027 \par
00028     {\cf18 double} a0_deg = angles_deg.front();\par
00029     {\cf18 double} an_deg = angles_deg.back();\par
00030 \par
00031     {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'E4\'EE\'E1\'E0\'E2\'EE\'F7\'ED\'EE\'E3\'EE \'F3\'E3\'EB\'E0 \\Delta}\par
00032     {\cf18 double} delta = (360.0 - an_deg - a0_deg) / 2;\par
00033 \par
00034     {\cf20 // \'CF\'E5\'F0\'E5\'F1\'F7\'E5\'F2 \'F3\'E3\'EB\'EE\'E2 \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \\Delta}\par
00035     std::vector<double> new_angles_deg(angles_deg.size());\par
00036     {\cf19 for} ({\cf18 size_t} i = 0; i < angles_deg.size(); i++) \{\par
00037         new_angles_deg[i] = angles_deg[i] + delta;\par
00038     \}\par
00039 \par
00040     {\cf20 // \'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'FF \'F3\'E3\'EB\'EE\'E2 \'EE\'E1\'F0\'E0\'F2\'ED\'EE \'E2 \'F0\'E0\'E4\'E8\'E0\'ED\'FB}\par
00041     {\cf19 for} ({\cf18 size_t} i = 0; i < new_angles_deg.size(); i++) \{\par
00042         marks[i] = new_angles_deg[i] * (PI / 180.0);\par
00043     \}\par
00044 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a3f2e7a6479a84eaecbe8a07b17aaeb5e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generatePDF\:RenderPDF}
{\xe \v RenderPDF\:generatePDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::generatePDF (std::string &  {\i filename})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'E7\'E4\'E0\'E5\'F2 PDF-\'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2, \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FF \'E3\'F0\'E0\'F4\'E8\'F7\'E5\'F1\'EA\'E8\'E5 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'FB, \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'ED\'FB\'E5 \'E2 \'E4\'F0\'F3\'E3\'E8\'F5 \'EC\'E5\'F2\'EE\'E4\'E0\'F5 \'EA\'EB\'E0\'F1\'F1\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i filename} \cell }{\'D1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'F1\'F2\'F0\'EE\'EA\'F3, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'F3\'FE \'E8\'EC\'FF \'E1\'F3\'E4\'F3\'F9\'E5\'E3\'EE \'F4\'E0\'E9\'EB\'E0 PDF. \'C5\'F1\'EB\'E8 \'E1\'F3\'E4\'E5\'F2 \'F1\'EE\'E7\'E4\'E0\'ED\'EE \'ED\'E5\'F1\'EA\'EE\'EB\'FC\'EA\'EE \'F1\'F2\'F0\'E0\'ED\'E8\'F6, \'F2\'EE \'F4\'F3\'ED\'EA\'F6\'E8\'FF \'EC\'EE\'E4\'E8\'F4\'E8\'F6\'E8\'F0\'F3\'E5\'F2 \'FD\'F2\'F3 \'F1\'F2\'F0\'EE\'EA\'F3, \'E4\'EE\'E1\'E0\'E2\'EB\'FF\'FF \'ED\'EE\'EC\'E5\'F0 \'EA\'E0\'E6\'E4\'EE\'E9 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB.\cell }
{\row }
}
\'CE\'ED\'E0 \'F1\'EE\'E7\'E4\'E0\'E5\'F2 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB \'F4\'EE\'F0\'EC\'E0\'F2\'E0 A3 \'E8 \'ED\'E0 \'EA\'E0\'E6\'E4\'EE\'E9 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5 \'F0\'E8\'F1\'F3\'E5\'F2 \'ED\'E0\'E1\'EE\'F0 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2, \'F2\'E0\'EA\'E8\'F5 \'EA\'E0\'EA \'EE\'F1\'ED\'EE\'E2\'ED\'FB\'E5 \'EB\'E8\'ED\'E8\'E8, \'E8\'ED\'E4\'E5\'EA\'F1\'FB \'E8 \'E4\'EE\'EF\'EE\'EB\'ED\'E8\'F2\'E5\'EB\'FC\'ED\'FB\'E5 \'EE\'F2\'EC\'E5\'F2\'EA\'E8, \'E4\'EB\'FF \'EA\'E0\'E6\'E4\'EE\'E3\'EE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'E0 \'E2 \'F2\'E0\'E1\'EB\'E8\'F6\'E5 \'F2\'EE\'F7\'E5\'EA ({\f2 point_tbl} ). \'C3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'FF \'FD\'F2\'E8\'F5 \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2 \'EE\'F1\'F3\'F9\'E5\'F1\'F2\'E2\'EB\'FF\'E5\'F2\'F1\'FF \'F1 \'EF\'EE\'EC\'EE\'F9\'FC\'FE \'F4\'F3\'ED\'EA\'F6\'E8\'E9 {\f2 generate_Marks} , {\f2 drawMainLines} , {\f2 drawDigitIndices}  \'E8 {\f2 drawAdditionalTicks} . \'DD\'F2\'E8 \'F4\'F3\'ED\'EA\'F6\'E8\'E8 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'FE\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'E4\'F0\'F3\'E3\'E8\'F5 \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'E0, \'F2\'E0\'EA\'E8\'F5 \'EA\'E0\'EA {\f2 cfm_data_}  \'E8 {\f2 zgt_data_} . \'C2 \'EA\'EE\'ED\'F6\'E5, \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB \'F1 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'EC \'E8\'EC\'E5\'ED\'E5\'EC. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Print.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 12}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00012                                                \{\par
00013 \par
00014     HPDF_Page page;\par
00015     {\cf18 size_t} size_point_tbl = point_tbl.size();\par
00016     {\cf18 int} blank = 0;\par
00017     {\cf18 int} totalPage = 1;\par
00018     {\cf19 if}(new_page)\{\par
00019         size_point_tbl/=2;\par
00020         totalPage = 2;\par
00021     \}\par
00022 \par
00023     {\cf19 for}({\cf17 auto} page_list = 0; page_list < totalPage; ++page_list) \{\par
00024         {\cf19 if}(page_list == 1) \{\par
00025             pdf_ = HPDF_New({\cf17 nullptr}, {\cf17 nullptr});\par
00026             font_ = loadFont(fontPath_.string());\par
00027 \par
00028             size_point_tbl = point_tbl.size();\par
00029         \}\par
00030         createA3Page();\par
00031         page = HPDF_GetCurrentPage(pdf_);\par
00032         {\cf19 for} (; blank < size_point_tbl; blank++) \{\par
00033 \par
00034             HPDF_Page_SetLineWidth(page, cfm_data_.digital_tick[1]);\par
00035 \par
00036             {\cf20 //test \'D3\'E4\'E0\'EB\'E8\'F2\'FC \'E2 \'EA\'EE\'ED\'F6\'E5, \'ED\'E5 \'F0\'E8\'F1\'F3\'E5\'F2\'F1\'FF}\par
00037             {\cf19 if} ({\cf17 false}) \{\par
00038                 drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first,\par
00039                            point_data_.coordinates[point_tbl[blank] - 1].second, cfm_data_.diameter / 2.0f);\par
00040             \}\par
00041 \par
00042             {\cf20 // \'EE\'F2\'F0\'E8\'F1\'EE\'E2\'EA\'E0 \'EA\'F0\'F3\'E3\'E0}\par
00043             {\cf19 if} ({\cf17 false}) \{\par
00044                 drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first,\par
00045                            point_data_.coordinates[point_tbl[blank] - 1].second, zgt_data_.diameter / 2.0f);\par
00046             \}\par
00047 \par
00048             {\cf20 //\'D6\'E5\'ED\'F2\'F0\'E0\'EB\'FC\'ED\'FB\'E9 \'EE\'F2\'E2\'E5\'F0\'F1\'F2\'E8\'E5}\par
00049             {\cf19 if} ({\cf17 false}) \{\par
00050                 drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first,\par
00051                            point_data_.coordinates[point_tbl[blank] - 1].second,\par
00052                            zgt_data_.center_hole_diameter / 2.0f);\par
00053             \}\par
00054 \par
00055             {\cf20 // \'C8\'ED\'E4\'E5\'EA\'F1\'FB \'ED\'E5 \'E8\'E7\'EC\'E5\'ED\'FF\'FE\'F2\'F1\'FF (\'E8\'F1\'EF\'F0\'E0\'E2\'E8\'F2\'FC!!!)}\par
00056             {\cf19 if}({\cf17 false})\{\par
00057                 {\cf18 double} xy, yz, radius;\par
00058                 {\cf19 for} ({\cf18 int} i = 0; i < 2; ++i) \{\par
00059                     xy = zgt_data_.mounting_holes[i * 3];\par
00060                     yz = zgt_data_.mounting_holes[i * 3 + 1];\par
00061                     yz = (yz > 0) ? -yz : abs(yz);\par
00062                     radius = zgt_data_.mounting_holes[i * 3 + 2] / 2.0f;\par
00063 \par
00064                     drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first + xy,\par
00065                                point_data_.coordinates[point_tbl[blank] - 1].second + yz,\par
00066                                radius);\par
00067                 \}\par
00068             \}\par
00069 \par
00070             generate_Marks(blank);\par
00071             drawMainLines(page, blank);\par
00072 \par
00073             drawDigitIndices(page, blank);\par
00074             drawAdditionalTicks(page, blank);\par
00075             marks.clear();\par
00076 \par
00077             generate_Marks(blank);\par
00078             drawMainLines(page, blank);\par
00079 \par
00080             drawDigitIndices(page, blank);\par
00081             drawAdditionalTicks(page, blank);\par
00082             marks.clear();\par
00083         \}\par
00084         {\cf19 if}(page_list == 1)\{\par
00085             filename+= {\cf22 "("} + std::to_string(page_list + 1) + {\cf22 ")"};\par
00086         \}\par
00087         HPDF_SaveToFile(pdf_, (filename + {\cf22 ".pdf"}).c_str());\par
00088     \}\par
00089 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_ab38c3850e484ba597ae3be5dbac1f5b2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_ab38c3850e484ba597ae3be5dbac1f5b2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initializeData\:RenderPDF}
{\xe \v RenderPDF\:initializeData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::initializeData ({\b cfm}  {\i cfm_data}, {\b zgt}  {\i zgt_data}, const std::vector< {\b tbl} > &  {\i tbl_data}, {\b nbr}  {\i nbr_data}, {\b point}  {\i point_data}, std::filesystem::path  {\i fontPath}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cfm_data} \cell }{\'C4\'E0\'ED\'ED\'FB\'E5 \'E4\'EB\'FF cfm. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i zgt_data} \cell }{\'C4\'E0\'ED\'ED\'FB\'E5 \'E4\'EB\'FF zgt. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tbl_data} \cell }{\'C4\'E0\'ED\'ED\'FB\'E5 \'E4\'EB\'FF tbl. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nbr_data} \cell }{\'C4\'E0\'ED\'ED\'FB\'E5 \'E4\'EB\'FF nbr. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i point_data} \cell }{\'C4\'E0\'ED\'ED\'FB\'E5 \'E4\'EB\'FF \'F2\'EE\'F7\'EA\'E8. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontPath} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'F8\'F0\'E8\'F4\'F2\'E0. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 67}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00067                                                                                                                                                       \{\par
00068     cfm_data_ = std::move(cfm_data);\par
00069     zgt_data_ = std::move(zgt_data);\par
00070     tbl_data_ = tbl_data;\par
00071     nbr_data_ = std::move(nbr_data);\par
00072     point_data_ = std::move(point_data);\par
00073     fontPath_ = fontPath;\par
00074 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a6ac6011ccf3a8df169125c3d72b93c94_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initializePDF\:RenderPDF}
{\xe \v RenderPDF\:initializePDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::initializePDF (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 HPDF_Doc \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E5\'F1\'EB\'E8 \'ED\'E5 \'F3\'E4\'E0\'E5\'F2\'F1\'FF \'F1\'EE\'E7\'E4\'E0\'F2\'FC \'EE\'E1\'FA\'E5\'EA\'F2 PDF. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 80}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00080                                  \{\par
00081     pdf_ = HPDF_New({\cf17 nullptr}, {\cf17 nullptr});\par
00082     {\cf19 if}(!pdf_)\{\par
00083         {\cf19 throw} std::runtime_error({\cf22 "\'CD\'E5 \'F3\'E4\'E0\'EB\'EE\'F1\'FC \'F1\'EE\'E7\'E4\'E0\'F2\'FC PDF \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2."});\par
00084     \}\par
00085 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_aaaeb1e6ddb96e6404cdfd22ad557fe6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadFont\:RenderPDF}
{\xe \v RenderPDF\:loadFont}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HPDF_Font RenderPDF::loadFont (const std::string &  {\i fontPath}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'E3\'F0\'F3\'E6\'E0\'E5\'F2 \'F8\'F0\'E8\'F4\'F2 \'E8\'E7 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fontPath} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'F8\'F0\'E8\'F4\'F2\'E0. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C2\'EE\'E7\'E2\'F0\'E0\'F9\'E0\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 HPDF_Font. \par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E5\'F1\'EB\'E8 \'ED\'E5 \'F3\'E4\'E0\'E5\'F2\'F1\'FF \'E7\'E0\'E3\'F0\'F3\'E7\'E8\'F2\'FC \'F8\'F0\'E8\'F4\'F2. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00019                                                        \{\par
00020     {\cf17 auto} font_name = HPDF_LoadTTFontFromFile(pdf_, fontPath.c_str(), HPDF_TRUE);\par
00021     {\cf17 auto} font = HPDF_GetFont(pdf_, font_name, {\cf22 "CP1251"});\par
00022 \par
00023     {\cf19 if}(!font)\{\par
00024         {\cf19 throw} std::runtime_error({\cf22 "\'CD\'E5 \'F3\'E4\'E0\'EB\'EE\'F1\'FC \'E7\'E0\'E3\'F0\'F3\'E7\'E8\'F2\'FC \'F8\'F0\'E8\'F4\'F2."});\par
00025     \}\par
00026 \par
00027     {\cf19 return} font;\par
00028 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_ac3ba6c62b21e04dbe57cedf12b3f06c0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v populatePointTbl\:RenderPDF}
{\xe \v RenderPDF\:populatePointTbl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::populatePointTbl (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'E0\'EF\'EE\'EB\'ED\'FF\'E5\'F2 point_tbl \'E4\'E0\'ED\'ED\'FB\'EC\'E8 \'E8\'E7 tbl_data_. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DD\'F2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'FF \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'F2\'F1\'FF \'E4\'EB\'FF \'EA\'EE\'EF\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'EE \'EF\'EE\'E7\'E8\'F6\'E8\'FF\'F5 \'E8\'E7 tbl_data_ \'E2 point_tbl. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Processor.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 39}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00039                                  \{\par
00040     {\cf19 for}({\cf17 auto} i : tbl_data_)\{\par
00041         point_tbl.push_back(i.position);\par
00042     \}\par
00043 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a1b6a4f2724661a30f767d37d2bf041b3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setFontSize\:RenderPDF}
{\xe \v RenderPDF\:setFontSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::setFontSize (HPDF_Page  {\i page}, double  {\i size}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'F1\'F2\'E0\'ED\'E0\'E2\'EB\'E8\'E2\'E0\'E5\'F2 \'F0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E8 \'F0\'E0\'E7\'EC\'E5\'F0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB PDF. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i page} \cell }{\'D1\'F2\'F0\'E0\'ED\'E8\'F6\'E0 PDF, \'E4\'EB\'FF \'EA\'EE\'F2\'EE\'F0\'EE\'E9 \'ED\'F3\'E6\'ED\'EE \'F3\'F1\'F2\'E0\'ED\'EE\'E2\'E8\'F2\'FC \'F0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E8 \'F0\'E0\'E7\'EC\'E5\'F0\'FB \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size} \cell }{\'D0\'E0\'E7\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E4\'EB\'FF \'F3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E8. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b draw.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 10}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00010                                                        \{\par
00011     HPDF_Page_SetFontAndSize(page, font_, size);\par
00012     HPDF_Page_SetHeight(page, 420);\par
00013     HPDF_Page_SetWidth(page, 297);\par
00014 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_a0c2cb9d669fedf5910e7be20e7bb4b36_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sortTblData\:RenderPDF}
{\xe \v RenderPDF\:sortTblData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RenderPDF::sortTblData (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'EE\'F0\'F2\'E8\'F0\'F3\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E2 tbl_data_ \'EF\'EE \'EF\'EE\'EB\'EE\'E6\'E5\'ED\'E8\'FE \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DD\'F2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'FF \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'F2 \'F1\'F2\'E0\'ED\'E4\'E0\'F0\'F2\'ED\'F3\'FE \'F4\'F3\'ED\'EA\'F6\'E8\'FE \'F1\'EE\'F0\'F2\'E8\'F0\'EE\'E2\'EA\'E8 \'E8\'E7 \'E1\'E8\'E1\'EB\'E8\'EE\'F2\'E5\'EA\'E8 \'E0\'EB\'E3\'EE\'F0\'E8\'F2\'EC\'EE\'E2 STL \'E8 \'EB\'FF\'EC\'E1\'E4\'E0-\'F4\'F3\'ED\'EA\'F6\'E8\'FE \'E4\'EB\'FF \'F1\'F0\'E0\'E2\'ED\'E5\'ED\'E8\'FF \'EF\'EE\'EB\'EE\'E6\'E5\'ED\'E8\'FF \'FD\'EB\'E5\'EC\'E5\'ED\'F2\'EE\'E2. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b Processor.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 25}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00025                             \{\par
00026     {\cf17 auto} compare_position = []({\cf17 const} tbl& a, {\cf17 const} tbl& b) \{\par
00027         {\cf19 return} a.position < b.position;\par
00028     \};\par
00029 \par
00030     {\cf20 // \'D1\'EE\'F0\'F2\'E8\'F0\'EE\'E2\'EA\'E0 \'E2\'E5\'EA\'F2\'EE\'F0\'E0 tbl_data_ \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \'F4\'F3\'ED\'EA\'F6\'E8\'E8 \'F1\'F0\'E0\'E2\'ED\'E5\'ED\'E8\'FF}\par
00031     std::sort(tbl_data_.begin(), tbl_data_.end(), compare_position);\par
00032 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_render_p_d_f_ae8716d07394557fb0434e419be24d04f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v cfm_data_\:RenderPDF}
{\xe \v RenderPDF\:cfm_data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b cfm} RenderPDF::cfm_data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 cfm \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 68}}\par
}
{\xe \v font_\:RenderPDF}
{\xe \v RenderPDF\:font_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HPDF_Font RenderPDF::font_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D8\'F0\'E8\'F4\'F2 PDF \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 66}}\par
}
{\xe \v fontPath_\:RenderPDF}
{\xe \v RenderPDF\:fontPath_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::filesystem::path RenderPDF::fontPath_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'F8\'F0\'E8\'F4\'F2\'E0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 63}}\par
}
{\xe \v margitText\:RenderPDF}
{\xe \v RenderPDF\:margitText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RenderPDF::margitText = 1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'F1\'F2\'F3\'EF \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 61}}\par
}
{\xe \v marks\:RenderPDF}
{\xe \v RenderPDF\:marks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> RenderPDF::marks{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E5\'F2\'EA\'E8 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 74}}\par
}
{\xe \v nbr_data_\:RenderPDF}
{\xe \v RenderPDF\:nbr_data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b nbr} RenderPDF::nbr_data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 nbr \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 70}}\par
}
{\xe \v new_page\:RenderPDF}
{\xe \v RenderPDF\:new_page}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool RenderPDF::new_page = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'EB\'E0\'E3 \'ED\'EE\'E2\'EE\'E9 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'FB \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 62}}\par
}
{\xe \v pdf_\:RenderPDF}
{\xe \v RenderPDF\:pdf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HPDF_Doc RenderPDF::pdf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'EE\'EA\'F3\'EC\'E5\'ED\'F2 PDF \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 65}}\par
}
{\xe \v PI\:RenderPDF}
{\xe \v RenderPDF\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double RenderPDF::PI = 3.14159265358979323846{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C7\'ED\'E0\'F7\'E5\'ED\'E8\'E5 \'F7\'E8\'F1\'EB\'E0 \'CF\'E8 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 60}}\par
}
{\xe \v point_data_\:RenderPDF}
{\xe \v RenderPDF\:point_data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b point} RenderPDF::point_data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 point \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 71}}\par
}
{\xe \v point_tbl\:RenderPDF}
{\xe \v RenderPDF\:point_tbl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<size_t> RenderPDF::point_tbl{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'E0\'E1\'EB\'E8\'F6\'E0 \'F2\'EE\'F7\'E5\'EA \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 73}}\par
}
{\xe \v tbl_data_\:RenderPDF}
{\xe \v RenderPDF\:tbl_data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b tbl}> RenderPDF::tbl_data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'E5\'EA\'F2\'EE\'F0 \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 tbl \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 72}}\par
}
{\xe \v zgt_data_\:RenderPDF}
{\xe \v RenderPDF\:zgt_data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b zgt} RenderPDF::zgt_data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 zgt \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b RenderPDF.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 69}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RenderPDF.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b digit.cpp}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b draw.cpp}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Line.cpp}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Print.cpp}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Processor.cpp}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RenderPDF.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 tbl\par \pard\plain 
{\tc\tcl2 \v tbl}
{\xe \v tbl}
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB. }}\par
{
{\f2 #include "tbl.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 tbl:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtbl__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB \'E2 \'F1\'F2\'E0\'ED\'E4\'E0\'F0\'F2\'ED\'FB\'E9 \'E2\'FB\'E2\'EE\'E4. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'E0\'F2\'F0\'E8\'E1\'F3\'F2\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b model}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< double > > {\b measurements}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{\'CF\'EE\'E7\'E8\'F6\'E8\'FF \'E2 \'F2\'E0\'E1\'EB\'E8\'F6\'E5. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i model} \cell }{\'CC\'EE\'E4\'E5\'EB\'FC \'E8\'E7 \'F2\'E0\'E1\'EB\'E8\'F6\'FB. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i measurements} \cell }{\'C8\'E7\'EC\'E5\'F0\'E5\'ED\'E8\'FF, \'F1\'E2\'FF\'E7\'E0\'ED\'ED\'FB\'E5 \'F1 \'F2\'E0\'E1\'EB\'E8\'F6\'E5\'E9. \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tbl.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v display\:tbl}
{\xe \v tbl\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void tbl::display () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB \'E2 \'F1\'F2\'E0\'ED\'E4\'E0\'F0\'F2\'ED\'FB\'E9 \'E2\'FB\'E2\'EE\'E4. }}\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tbl.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 23}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00023                          \{\par
00024         std::cout << {\cf22 "Position: "} << position << {\cf22 "\\n"};\par
00025         std::cout << {\cf22 "Model: "} << model << {\cf22 "\\n"};\par
00026 \par
00027         std::cout << {\cf22 "Measurements:\\n"};\par
00028         {\cf19 for} ({\cf17 const} {\cf17 auto}& row : measurements) \{\par
00029             {\cf19 for} ({\cf17 const} {\cf17 auto}& value : row) \{\par
00030                 std::cout << value << {\cf22 " "};\par
00031             \}\par
00032             std::cout << {\cf22 "\\n"};\par
00033         \}\par
00034     \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtbl_a1656f3d8341995db3e9711ecf583cc94_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v measurements\:tbl}
{\xe \v tbl\:measurements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::vector<double> > tbl::measurements}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tbl.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v model\:tbl}
{\xe \v tbl\:model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string tbl::model}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tbl.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v position\:tbl}
{\xe \v tbl\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tbl::position}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b tbl.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tbl.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CA\'EB\'E0\'F1\'F1 textReader\par \pard\plain 
{\tc\tcl2 \v textReader}
{\xe \v textReader}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }}\par
{
{\f2 #include "textReader.h"}}\par
\'C3\'F0\'E0\'F4 \'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'E8\'FF:textReader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 textReader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b textReader} (const std::filesystem::path &file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b textReader}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_nbr} ({\b nbr} &data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 nbr \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_point} ({\b point} &data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 point \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_tbl} ({\b tbl} &data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 tbl \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_cfm} ({\b cfm} &data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 cfm \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_zgt} ({\b zgt} &data)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 zgt \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB \'F3\'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'ED\'FB\'E5 \'EE\'F2 {\b FileReader}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FileReader} (std::filesystem::path file_path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b FileReader}. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'EE\'EF\'EE\'EB\'ED\'E8\'F2\'E5\'EB\'FC\'ED\'FB\'E5 \'F3\'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'ED\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C7\'E0\'F9\'E8\'F9\'E5\'ED\'ED\'FB\'E5 \'F1\'F2\'E0\'F2\'E8\'F7\'E5\'F1\'EA\'E8\'E5 \'F7\'EB\'E5\'ED\'FB \'F3\'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'ED\'FB\'E5 \'EE\'F2 {\b FileReader}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b readLineString} (std::ifstream &file)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'F1\'F2\'F0\'EE\'EA\'F3 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::string {\b trim} (const std::string &s)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'E4\'E0\'EB\'FF\'E5\'F2 \'E2\'E5\'E4\'F3\'F9\'E8\'E5 \'E8 \'E7\'E0\'E2\'E5\'F0\'F8\'E0\'FE\'F9\'E8\'E5 \'EF\'F0\'EE\'E1\'E5\'EB\'FB \'E8\'E7 \'F1\'F2\'F0\'EE\'EA\'E8. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C7\'E0\'F9\'E8\'F9\'E5\'ED\'ED\'FB\'E5 \'E4\'E0\'ED\'ED\'FB\'E5 \'F3\'ED\'E0\'F1\'EB\'E5\'E4\'EE\'E2\'E0\'ED\'ED\'FB\'E5 \'EE\'F2 {\b FileReader}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::filesystem::path {\b file_path_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 {\b textReader} \'ED\'E0\'F1\'EB\'E5\'E4\'F3\'E5\'F2\'F1\'FF \'EE\'F2 \'EA\'EB\'E0\'F1\'F1\'E0 {\b FileReader} \'E8 \'EF\'F0\'E5\'E4\'EE\'F1\'F2\'E0\'E2\'EB\'FF\'E5\'F2 \'F4\'F3\'ED\'EA\'F6\'E8\'EE\'ED\'E0\'EB\'FC\'ED\'EE\'F1\'F2\'FC \'F7\'F2\'E5\'ED\'E8\'FF \'F0\'E0\'E7\'EB\'E8\'F7\'ED\'FB\'F5 \'F2\'E8\'EF\'EE\'E2 \'E4\'E0\'ED\'ED\'FB\'F5 \'E8\'E7 \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0(\'FB)\par
\pard\plain 
{\xe \v textReader\:textReader}
{\xe \v textReader\:textReader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
textReader::textReader (const std::filesystem::path &  {\i file_path}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'EA\'EB\'E0\'F1\'F1\'E0 {\b textReader}. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_path} \cell }{\'CF\'F3\'F2\'FC \'EA \'F4\'E0\'E9\'EB\'F3 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF.\cell }
{\row }
}
\'CA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'E8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E8\'F0\'F3\'E5\'F2 \'EE\'E1\'FA\'E5\'EA\'F2 {\b textReader} \'F1 \'F3\'EA\'E0\'E7\'E0\'ED\'ED\'FB\'EC \'EF\'F3\'F2\'E5\'EC \'EA \'F4\'E0\'E9\'EB\'F3 file_path \'E8 \'E2\'FB\'E7\'FB\'E2\'E0\'E5\'F2 \'EA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 \'E1\'E0\'E7\'EE\'E2\'EE\'E3\'EE \'EA\'EB\'E0\'F1\'F1\'E0 {\b FileReader}. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 27}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00027 : FileReader(file_path) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v read_cfm\:textReader}
{\xe \v textReader\:read_cfm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void textReader::read_cfm ({\b cfm} &  {\i data})}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 cfm \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 CFM.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'D1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'EE\'E1\'FA\'E5\'EA\'F2 \'F2\'E8\'EF\'E0 cfm \'E4\'EB\'FF \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EF\'F0\'EE\'F7\'E8\'F2\'E0\'ED\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b read_cfm()} \'F7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 cfm \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'E8\'F5 \'E2 \'EE\'E1\'FA\'E5\'EA\'F2\'E5 data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'F1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 cfm, \'E2 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'F3\'F2 \'E7\'E0\'EF\'E8\'F1\'E0\'ED\'FB \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E2 \'F1\'EB\'F3\'F7\'E0\'E5 \'EE\'F8\'E8\'E1\'EA\'E8 \'EE\'F2\'EA\'F0\'FB\'F2\'E8\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00011                                    \{\par
00012     std::ifstream file(file_path_);\par
00013     {\cf19 if} (!file.is_open()) \{\par
00014         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00015     \}\par
00016 \par
00017     std::string line;\par
00018     {\cf18 size_t} count = 1;\par
00019     {\cf19 while} (std::getline(file, line)) \{\par
00020         {\cf19 if} (count == 1) \{\par
00021             data.header = trim(line);\par
00022         \} {\cf19 else} {\cf19 if} (count == 3) \{\par
00023             data.blank = trim(line);\par
00024         \} {\cf19 else} {\cf19 if} (count == 6) \{\par
00025             std::istringstream iss(line);\par
00026             {\cf18 double} temp;\par
00027             {\cf19 while} (iss >> temp) \{\par
00028                 data.marks.push_back(temp);\par
00029             \}\par
00030         \} {\cf19 else} {\cf19 if} (count == 8) \{\par
00031             std::istringstream(line) >> data.format[0] >> data.format[1];\par
00032         \} {\cf19 else} {\cf19 if} (count == 10) \{\par
00033             std::istringstream(line) >> data.diameter;\par
00034         \} {\cf19 else} {\cf19 if} (count == 12) \{\par
00035             std::istringstream(line) >> data.small_tick[0] >> data.small_tick[1];\par
00036         \} {\cf19 else} {\cf19 if} (count == 14) \{\par
00037             std::istringstream(line) >> data.big_tick[0] >> data.big_tick[1];\par
00038         \} {\cf19 else} {\cf19 if} (count == 16) \{\par
00039             std::istringstream(line) >> data.digital_tick[0] >> data.digital_tick[1] >> data.digital_tick[2] >> data.digital_tick[3];\par
00040         \} {\cf19 else} {\cf19 if} (count == 18) \{\par
00041             std::istringstream(line) >> data.digit_height >> data.label_height;\par
00042         \} {\cf19 else} {\cf19 if} (count == 20) \{\par
00043             data.tick_mask = trim(line);\par
00044         \}\par
00045         count++;\par
00046     \}\par
00047 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader_a5cd4eeebf53787a1434d037c54993071_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader_a5cd4eeebf53787a1434d037c54993071_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read_nbr\:textReader}
{\xe \v textReader\:read_nbr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void textReader::read_nbr ({\b nbr} &  {\i data})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 nbr \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 NBR.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'D1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'EE\'E1\'FA\'E5\'EA\'F2 \'F2\'E8\'EF\'E0 nbr \'E4\'EB\'FF \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EF\'F0\'EE\'F7\'E8\'F2\'E0\'ED\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b read_nbr()} \'F7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 nbr \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'E8\'F5 \'E2 \'EE\'E1\'FA\'E5\'EA\'F2\'E5 data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'F1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 nbr, \'E2 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'F3\'F2 \'E7\'E0\'EF\'E8\'F1\'E0\'ED\'FB \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E2 \'F1\'EB\'F3\'F7\'E0\'E5 \'EE\'F8\'E8\'E1\'EA\'E8 \'EE\'F2\'EA\'F0\'FB\'F2\'E8\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 163}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00163                                    \{\par
00164     std::ifstream file(file_path_);\par
00165     {\cf19 if} (!file.is_open()) \{\par
00166         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00167     \}\par
00168 \par
00169     std::string line;\par
00170     {\cf18 size_t} line_number = 1;\par
00171     {\cf19 while} (std::getline(file, line)) \{\par
00172         data.icon.insert(std::make_pair(line_number, line));\par
00173         line_number++;\par
00174     \}\par
00175 \}\par
}
}
{\xe \v read_point\:textReader}
{\xe \v textReader\:read_point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void textReader::read_point ({\b point} &  {\i data})}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 point \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 \'F2\'EE\'F7\'EA\'E8\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'D1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'EE\'E1\'FA\'E5\'EA\'F2 \'F2\'E8\'EF\'E0 point \'E4\'EB\'FF \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EF\'F0\'EE\'F7\'E8\'F2\'E0\'ED\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b read_point()} \'F7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 point \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'E8\'F5 \'E2 \'EE\'E1\'FA\'E5\'EA\'F2\'E5 data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'F1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 point, \'E2 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'F3\'F2 \'E7\'E0\'EF\'E8\'F1\'E0\'ED\'FB \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E2 \'F1\'EB\'F3\'F7\'E0\'E5 \'EE\'F8\'E8\'E1\'EA\'E8 \'EE\'F2\'EA\'F0\'FB\'F2\'E8\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 145}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00145                                        \{\par
00146     std::ifstream file(file_path_);\par
00147     {\cf19 if} (!file.is_open()) \{\par
00148         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00149     \}\par
00150 \par
00151     {\cf18 double} x, y;\par
00152     {\cf19 while} (file >> x >> y) \{\par
00153         data.coordinates.emplace_back(x, y);\par
00154     \}\par
00155 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader_a9f261ea0ff26bf191afd61212c0a79e5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read_tbl\:textReader}
{\xe \v textReader\:read_tbl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void textReader::read_tbl ({\b tbl} &  {\i data})}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 tbl \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 TBL.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'D1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'EE\'E1\'FA\'E5\'EA\'F2 \'F2\'E8\'EF\'E0 tbl \'E4\'EB\'FF \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EF\'F0\'EE\'F7\'E8\'F2\'E0\'ED\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b read_tbl()} \'F7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 tbl \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'E8\'F5 \'E2 \'EE\'E1\'FA\'E5\'EA\'F2\'E5 data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'F1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 tbl, \'E2 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'F3\'F2 \'E7\'E0\'EF\'E8\'F1\'E0\'ED\'FB \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E2 \'F1\'EB\'F3\'F7\'E0\'E5 \'EE\'F8\'E8\'E1\'EA\'E8 \'EE\'F2\'EA\'F0\'FB\'F2\'E8\'FF \'F4\'E0\'E9\'EB\'E0 \'E8\'EB\'E8 \'E5\'F1\'EB\'E8 \'ED\'E5 \'F3\'E4\'E0\'E5\'F2\'F1\'FF \'E8\'E7\'E2\'EB\'E5\'F7\'FC \'F7\'E8\'F1\'EB\'EE \'E8\'E7 \'E8\'EC\'E5\'ED\'E8 \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 95}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00095                                    \{\par
00096     std::ifstream file(file_path_);\par
00097     {\cf19 if} (!file.is_open()) \{\par
00098         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00099     \}\par
00100 \par
00101     std::string file_name = file_path_.filename().string();\par
00102 \par
00103     std::string prefix = {\cf22 "scale"};\par
00104     std::string suffix = {\cf22 ".tbl"};\par
00105 \par
00106     {\cf17 auto} start = file_name.find(prefix);\par
00107     {\cf17 auto} end = file_name.find(suffix);\par
00108 \par
00109     {\cf19 if} (start == std::string::npos || end == std::string::npos || start >= end) \{\par
00110         {\cf19 throw} std::runtime_error({\cf22 "Could not extract number from file name"});\par
00111     \}\par
00112 \par
00113     start += prefix.length();\par
00114     std::string number_str = file_name.substr(start, end - start);\par
00115 \par
00116     {\cf19 try} \{\par
00117         data.position = std::stoi(number_str);\par
00118     \} {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
00119         {\cf19 throw} std::runtime_error({\cf22 "Invalid number in file name: "} + number_str);\par
00120     \} {\cf19 catch} ({\cf17 const} std::out_of_range& e) \{\par
00121         {\cf19 throw} std::runtime_error({\cf22 "Number in file name is out of range: "} + number_str);\par
00122     \}\par
00123 \par
00124     std::string line;\par
00125     readLineString(file);\par
00126     data.model = readLineString(file);\par
00127 \par
00128     data.measurements.reserve(20);\par
00129     {\cf19 while} (std::getline(file, line)) \{\par
00130         {\cf18 double} temp;\par
00131         {\cf18 double} col2;\par
00132         {\cf18 double} col3;\par
00133         {\cf19 if} (std::istringstream(line) >> temp >> col2 >> col3) \{\par
00134             data.measurements.push_back(\{col2, col3\});\par
00135         \}\par
00136     \}\par
00137 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader_ac9b23d5e5a58431fb114f221098a2640_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader_ac9b23d5e5a58431fb114f221098a2640_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read_zgt\:textReader}
{\xe \v textReader\:read_zgt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void textReader::read_zgt ({\b zgt} &  {\i data})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 zgt \'E8\'E7 \'F4\'E0\'E9\'EB\'E0. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E2 \'F4\'EE\'F0\'EC\'E0\'F2\'E5 ZGT.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'D1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'EE\'E1\'FA\'E5\'EA\'F2 \'F2\'E8\'EF\'E0 zgt \'E4\'EB\'FF \'F1\'EE\'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EF\'F0\'EE\'F7\'E8\'F2\'E0\'ED\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5.\cell }
{\row }
}
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b read_zgt()} \'F7\'E8\'F2\'E0\'E5\'F2 \'E4\'E0\'ED\'ED\'FB\'E5 \'F2\'E8\'EF\'E0 zgt \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \'E8 \'F1\'EE\'F5\'F0\'E0\'ED\'FF\'E5\'F2 \'E8\'F5 \'E2 \'EE\'E1\'FA\'E5\'EA\'F2\'E5 data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'FB\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i data} \cell }{\'F1\'F1\'FB\'EB\'EA\'E0 \'ED\'E0 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'F3 zgt, \'E2 \'EA\'EE\'F2\'EE\'F0\'F3\'FE \'E1\'F3\'E4\'F3\'F2 \'E7\'E0\'EF\'E8\'F1\'E0\'ED\'FB \'E4\'E0\'ED\'ED\'FB\'E5 \'E8\'E7 \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C8\'F1\'EA\'EB\'FE\'F7\'E5\'ED\'E8\'FF\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{\'E2 \'F1\'EB\'F3\'F7\'E0\'E5 \'EE\'F8\'E8\'E1\'EA\'E8 \'EE\'F2\'EA\'F0\'FB\'F2\'E8\'FF \'F4\'E0\'E9\'EB\'E0 \cell }
{\row }
}
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b textReader.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 55}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00055                                    \{\par
00056     std::ifstream file(file_path_);\par
00057     {\cf19 if} (!file.is_open()) \{\par
00058         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00059     \}\par
00060 \par
00061     {\cf18 size_t} count = 1;\par
00062     std::string line;\par
00063     {\cf19 while} (std::getline(file, line)) \{\par
00064         {\cf19 if} (count == 2) \{\par
00065             std::istringstream(line) >> data.diameter;\par
00066         \} {\cf19 else} {\cf19 if} (count == 4) \{\par
00067             std::istringstream(line) >> data.center_hole_diameter;\par
00068         \} {\cf19 else} {\cf19 if} (count == 6) \{\par
00069             std::istringstream iss(line);\par
00070             {\cf18 double} temp;\par
00071             {\cf19 while} (iss >> temp) \{\par
00072                 data.mounting_holes.push_back(temp);\par
00073             \}\par
00074         \} {\cf19 else} {\cf19 if} (count == 8) \{\par
00075             std::istringstream iss(line);\par
00076             {\cf18 double} temp;\par
00077             {\cf19 while} (iss >> temp) \{\par
00078                 data.marker_position.push_back(temp);\par
00079             \}\par
00080         \} {\cf19 else} {\cf19 if} (count == 10) \{\par
00081             std::istringstream(line) >> data.font_serial_number[0] >> data.font_serial_number[1];\par
00082         \} {\cf19 else} {\cf19 if} (count == 12) \{\par
00083             std::istringstream(line) >> data.stop_position[0] >> data.stop_position[1] >> data.stop_position[2];\par
00084         \}\par
00085         count++;\par
00086     \}\par
00087 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtext_reader_af98fb017c822ba0f17c58a1dda32a787_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'EA\'EB\'E0\'F1\'F1\'EE\'E2 \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E0\'F5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b textReader.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b textReader.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 zgt\par \pard\plain 
{\tc\tcl2 \v zgt}
{\xe \v zgt}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 zgt. }}\par
{
{\f2 #include "zgt.h"}}\par
\'C3\'F0\'E0\'F4 \'F1\'E2\'FF\'E7\'E5\'E9 \'EA\'EB\'E0\'F1\'F1\'E0 zgt:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structzgt__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'F7\'EB\'E5\'ED\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB zgt \'ED\'E0 \'EA\'EE\'ED\'F1\'EE\'EB\'FC. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CE\'F2\'EA\'F0\'FB\'F2\'FB\'E5 \'E0\'F2\'F0\'E8\'E1\'F3\'F2\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b diameter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b center_hole_diameter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b mounting_holes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b marker_position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::array< double, 2 > {\b font_serial_number} \{\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::array< double, 3 > {\b stop_position} \{\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EE\'E4\'F0\'EE\'E1\'ED\'EE\'E5 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'E5\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 zgt. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 zgt \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'F2 \'EF\'EE\'EB\'FF \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'F0\'E0\'E7\'EB\'E8\'F7\'ED\'FB\'F5 \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 zgt, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F2 \'EF\'E0\'F0\'E0\'EC\'E5\'F2\'F0\'FB \'E4\'EB\'FF \'E7\'F3\'E1\'F7\'E0\'F2\'EE\'E9 \'EF\'E5\'F0\'E5\'E4\'E0\'F7\'E8. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 15}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E5\'F2\'EE\'E4\'FB\par
\pard\plain 
{\xe \v display\:zgt}
{\xe \v zgt\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zgt::display () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C2\'FB\'E2\'EE\'E4\'E8\'F2 \'F1\'EE\'E4\'E5\'F0\'E6\'E8\'EC\'EE\'E5 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB zgt \'ED\'E0 \'EA\'EE\'ED\'F1\'EE\'EB\'FC. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'FF {\b display()} \'E2\'FB\'E2\'EE\'E4\'E8\'F2 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'FF \'EA\'E0\'E6\'E4\'EE\'E3\'EE \'EF\'EE\'EB\'FF \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB zgt \'ED\'E0 \'EA\'EE\'ED\'F1\'EE\'EB\'FC. \'C7\'E0\'F2\'E5\'EC \'E2\'FB\'E2\'EE\'E4\'E8\'F2 \'E7\'ED\'E0\'F7\'E5\'ED\'E8\'FF \'EE\'F2\'E2\'E5\'F0\'F1\'F2\'E8\'E9 \'E4\'EB\'FF \'EA\'F0\'E5\'EF\'EB\'E5\'ED\'E8\'FF, \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'EC\'E0\'F0\'EA\'E5\'F0\'E0, \'F1\'E5\'F0\'E8\'E9\'ED\'FB\'E9 \'ED\'EE\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E8 \'EF\'EE\'E7\'E8\'F6\'E8\'FE \'F1\'F2\'EE\'EF\'EE\'F0\'E0. \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 30}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00030                          \{\par
00031         std::cout << {\cf22 "Diameter: "} << diameter << {\cf22 "\\n"};\par
00032         std::cout << {\cf22 "Center Hole Diameter: "} << center_hole_diameter << {\cf22 "\\n"};\par
00033 \par
00034         std::cout << {\cf22 "Mounting Holes: "};\par
00035         {\cf19 for} ({\cf17 auto} val : mounting_holes)\par
00036             std::cout << val << {\cf22 " "};\par
00037         std::cout << {\cf22 "\\n"};\par
00038 \par
00039         std::cout << {\cf22 "Marker Position: "};\par
00040         {\cf19 for} ({\cf17 auto} val : marker_position)\par
00041             std::cout << val << {\cf22 " "};\par
00042         std::cout << {\cf22 "\\n"};\par
00043 \par
00044         std::cout << {\cf22 "Font Serial Number: "} << font_serial_number[0] << {\cf22 " "} << font_serial_number[1] << {\cf22 "\\n"};\par
00045 \par
00046         std::cout << {\cf22 "Stop Position: "} << stop_position[0] << {\cf22 " "} << stop_position[1] << {\cf22 " "} << stop_position[2] << {\cf22 "\\n"};\par
00047     \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structzgt_a54f8b1de8e8e339540ddddd0e7503ac2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C4\'E0\'ED\'ED\'FB\'E5 \'EA\'EB\'E0\'F1\'F1\'E0\par
\pard\plain 
{\xe \v center_hole_diameter\:zgt}
{\xe \v zgt\:center_hole_diameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zgt::center_hole_diameter}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E8\'E0\'EC\'E5\'F2\'F0 \'F6\'E5\'ED\'F2\'F0\'E0\'EB\'FC\'ED\'EE\'E3\'EE \'EE\'F2\'E2\'E5\'F0\'F1\'F2\'E8\'FF \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v diameter\:zgt}
{\xe \v zgt\:diameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double zgt::diameter}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'E8\'E0\'EC\'E5\'F2\'F0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 16}}\par
}
{\xe \v font_serial_number\:zgt}
{\xe \v zgt\:font_serial_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::array<double, 2> zgt::font_serial_number \{\}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'E5\'F0\'E8\'E9\'ED\'FB\'E9 \'ED\'EE\'EC\'E5\'F0 \'F8\'F0\'E8\'F4\'F2\'E0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 20}}\par
}
{\xe \v marker_position\:zgt}
{\xe \v zgt\:marker_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> zgt::marker_position}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E7\'E8\'F6\'E8\'FF \'EC\'E0\'F0\'EA\'E5\'F0\'E0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
}
{\xe \v mounting_holes\:zgt}
{\xe \v zgt\:mounting_holes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> zgt::mounting_holes}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F2\'E2\'E5\'F0\'F1\'F2\'E8\'FF \'E4\'EB\'FF \'EA\'F0\'E5\'EF\'EB\'E5\'ED\'E8\'FF \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 18}}\par
}
{\xe \v stop_position\:zgt}
{\xe \v zgt\:stop_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::array<double, 3> zgt::stop_position \{\}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CF\'EE\'E7\'E8\'F6\'E8\'FF \'F1\'F2\'EE\'EF\'EE\'F0\'E0 \par
}{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b zgt.h} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 21}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'CE\'E1\'FA\'FF\'E2\'EB\'E5\'ED\'E8\'FF \'E8 \'EE\'EF\'E8\'F1\'E0\'ED\'E8\'FF \'F7\'EB\'E5\'ED\'EE\'E2 \'F1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'FB \'ED\'E0\'F5\'EE\'E4\'FF\'F2\'F1\'FF \'E2 \'F4\'E0\'E9\'EB\'E5:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zgt.h}}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'D4\'E0\'E9\'EB\'FB{\tc \v \'D4\'E0\'E9\'EB\'FB}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB CMakeCCompilerId.c\par \pard\plain 
{\tc\tcl2 \v CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b C_VERSION}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_standard_default}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_extensions_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 
{\xe \v __has_include\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v ARCHITECTURE_ID\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 718}}\par
}
{\xe \v C_VERSION\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:C_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define C_VERSION}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 807}}\par
}
{\xe \v COMPILER_ID\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 429}}\par
}
{\xe \v DEC\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 722}}\par
}
{\xe \v HEX\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 733}}\par
}
{\xe \v PLATFORM_ID\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 560}}\par
}
{\xe \v STRINGIFY\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 450}}\par
}
{\xe \v STRINGIFY_HELPER\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 449}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v main\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 841}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00843 \{\par
00844   {\cf18 int} require = 0;\par
00845   require += info_compiler[argc];\par
00846   require += info_platform[argc];\par
00847   require += info_arch[argc];\par
00848 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00849   require += info_version[argc];\par
00850 {\cf21 #endif}\par
00851 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00852   require += info_version_internal[argc];\par
00853 {\cf21 #endif}\par
00854 {\cf21 #ifdef SIMULATE_ID}\par
00855   require += info_simulate[argc];\par
00856 {\cf21 #endif}\par
00857 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00858   require += info_simulate_version[argc];\par
00859 {\cf21 #endif}\par
00860 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00861   require += info_cray[argc];\par
00862 {\cf21 #endif}\par
00863   require += info_language_standard_default[argc];\par
00864   require += info_language_extensions_default[argc];\par
00865   (void)argv;\par
00866   {\cf19 return} require;\par
00867 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v info_arch\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 799}}\par
}
{\xe \v info_compiler\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 436}}\par
}
{\xe \v info_language_extensions_default\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_language_extensions_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_extensions_default}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
\par
\par
\par
\par
\par
  {\cf22 "OFF"}\par
\par
{\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 823}}\par
}
{\xe \v info_language_standard_default\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_language_standard_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_standard_default}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
  {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["} C_VERSION {\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 820}}\par
}
{\xe \v info_platform\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 798}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmake-build-debug/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\par \pard\plain 
{\tc\tcl2 \v CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifdef __cplusplus}\par
00002 {\cf21 # error "A C++ compiler has been selected for C."}\par
00003 {\cf21 #endif}\par
00004 \par
00005 {\cf21 #if defined(__18CXX)}\par
00006 {\cf21 # define ID_VOID_MAIN}\par
00007 {\cf21 #endif}\par
00008 {\cf21 #if defined(__CLASSIC_C__)}\par
00009 {\cf20 /* cv-qualifiers did not exist in K&R C */}\par
00010 {\cf21 # define const}\par
00011 {\cf21 # define volatile}\par
00012 {\cf21 #endif}\par
00013 \par
00014 {\cf21 #if !defined(__has_include)}\par
00015 {\cf20 /* If the compiler does not have __has_include, pretend the answer is}\par
00016 {\cf20    always no.  */}\par
00017 {\cf21 #  define __has_include(x) 0}\par
00018 {\cf21 #endif}\par
00019 \par
00020 \par
00021 {\cf20 /* Version number components: V=Version, R=Revision, P=Patch}\par
00022 {\cf20    Version date components:   YYYY=Year, MM=Month,   DD=Day  */}\par
00023 \par
00024 {\cf21 #if defined(__INTEL_COMPILER) || defined(__ICC)}\par
00025 {\cf21 # define COMPILER_ID "Intel"}\par
00026 {\cf21 # if defined(_MSC_VER)}\par
00027 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00028 {\cf21 # endif}\par
00029 {\cf21 # if defined(__GNUC__)}\par
00030 {\cf21 #  define SIMULATE_ID "GNU"}\par
00031 {\cf21 # endif}\par
00032   {\cf20 /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,}\par
00033 {\cf20      except that a few beta releases use the old format with V=2021.  */}\par
00034 {\cf21 # if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111}\par
00035 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)}\par
00036 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)}\par
00037 {\cf21 #  if defined(__INTEL_COMPILER_UPDATE)}\par
00038 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)}\par
00039 {\cf21 #  else}\par
00040 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)}\par
00041 {\cf21 #  endif}\par
00042 {\cf21 # else}\par
00043 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)}\par
00044 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)}\par
00045    {\cf20 /* The third version component from --version is an update index,}\par
00046 {\cf20       but no macro is provided for it.  */}\par
00047 {\cf21 #  define COMPILER_VERSION_PATCH DEC(0)}\par
00048 {\cf21 # endif}\par
00049 {\cf21 # if defined(__INTEL_COMPILER_BUILD_DATE)}\par
00050    {\cf20 /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */}\par
00051 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)}\par
00052 {\cf21 # endif}\par
00053 {\cf21 # if defined(_MSC_VER)}\par
00054    {\cf20 /* _MSC_VER = VVRR */}\par
00055 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00056 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00057 {\cf21 # endif}\par
00058 {\cf21 # if defined(__GNUC__)}\par
00059 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00060 {\cf21 # elif defined(__GNUG__)}\par
00061 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00062 {\cf21 # endif}\par
00063 {\cf21 # if defined(__GNUC_MINOR__)}\par
00064 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00065 {\cf21 # endif}\par
00066 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00067 {\cf21 #  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00068 {\cf21 # endif}\par
00069 \par
00070 {\cf21 #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)}\par
00071 {\cf21 # define COMPILER_ID "IntelLLVM"}\par
00072 {\cf21 #if defined(_MSC_VER)}\par
00073 {\cf21 # define SIMULATE_ID "MSVC"}\par
00074 {\cf21 #endif}\par
00075 {\cf21 #if defined(__GNUC__)}\par
00076 {\cf21 # define SIMULATE_ID "GNU"}\par
00077 {\cf21 #endif}\par
00078 {\cf20 /* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and}\par
00079 {\cf20  * later.  Look for 6 digit vs. 8 digit version number to decide encoding.}\par
00080 {\cf20  * VVVV is no smaller than the current year when a version is released.}\par
00081 {\cf20  */}\par
00082 {\cf21 #if __INTEL_LLVM_COMPILER < 1000000L}\par
00083 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)}\par
00084 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)}\par
00085 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)}\par
00086 {\cf21 #else}\par
00087 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)}\par
00088 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)}\par
00089 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)}\par
00090 {\cf21 #endif}\par
00091 {\cf21 #if defined(_MSC_VER)}\par
00092   {\cf20 /* _MSC_VER = VVRR */}\par
00093 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00094 {\cf21 # define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00095 {\cf21 #endif}\par
00096 {\cf21 #if defined(__GNUC__)}\par
00097 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00098 {\cf21 #elif defined(__GNUG__)}\par
00099 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00100 {\cf21 #endif}\par
00101 {\cf21 #if defined(__GNUC_MINOR__)}\par
00102 {\cf21 # define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00103 {\cf21 #endif}\par
00104 {\cf21 #if defined(__GNUC_PATCHLEVEL__)}\par
00105 {\cf21 # define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00106 {\cf21 #endif}\par
00107 \par
00108 {\cf21 #elif defined(__PATHCC__)}\par
00109 {\cf21 # define COMPILER_ID "PathScale"}\par
00110 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PATHCC__)}\par
00111 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)}\par
00112 {\cf21 # if defined(__PATHCC_PATCHLEVEL__)}\par
00113 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)}\par
00114 {\cf21 # endif}\par
00115 \par
00116 {\cf21 #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)}\par
00117 {\cf21 # define COMPILER_ID "Embarcadero"}\par
00118 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)}\par
00119 {\cf21 # define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)}\par
00120 {\cf21 # define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)}\par
00121 \par
00122 {\cf21 #elif defined(__BORLANDC__)}\par
00123 {\cf21 # define COMPILER_ID "Borland"}\par
00124   {\cf20 /* __BORLANDC__ = 0xVRR */}\par
00125 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)}\par
00126 {\cf21 # define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)}\par
00127 \par
00128 {\cf21 #elif defined(__WATCOMC__) && __WATCOMC__ < 1200}\par
00129 {\cf21 # define COMPILER_ID "Watcom"}\par
00130    {\cf20 /* __WATCOMC__ = VVRR */}\par
00131 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)}\par
00132 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00133 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00134 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00135 {\cf21 # endif}\par
00136 \par
00137 {\cf21 #elif defined(__WATCOMC__)}\par
00138 {\cf21 # define COMPILER_ID "OpenWatcom"}\par
00139    {\cf20 /* __WATCOMC__ = VVRP + 1100 */}\par
00140 {\cf21 # define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)}\par
00141 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00142 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00143 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00144 {\cf21 # endif}\par
00145 \par
00146 {\cf21 #elif defined(__SUNPRO_C)}\par
00147 {\cf21 # define COMPILER_ID "SunPro"}\par
00148 {\cf21 # if __SUNPRO_C >= 0x5100}\par
00149    {\cf20 /* __SUNPRO_C = 0xVRRP */}\par
00150 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)}\par
00151 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)}\par
00152 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)}\par
00153 {\cf21 # else}\par
00154    {\cf20 /* __SUNPRO_CC = 0xVRP */}\par
00155 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)}\par
00156 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)}\par
00157 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)}\par
00158 {\cf21 # endif}\par
00159 \par
00160 {\cf21 #elif defined(__HP_cc)}\par
00161 {\cf21 # define COMPILER_ID "HP"}\par
00162   {\cf20 /* __HP_cc = VVRRPP */}\par
00163 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)}\par
00164 {\cf21 # define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)}\par
00165 {\cf21 # define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)}\par
00166 \par
00167 {\cf21 #elif defined(__DECC)}\par
00168 {\cf21 # define COMPILER_ID "Compaq"}\par
00169   {\cf20 /* __DECC_VER = VVRRTPPPP */}\par
00170 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)}\par
00171 {\cf21 # define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)}\par
00172 {\cf21 # define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)}\par
00173 \par
00174 {\cf21 #elif defined(__IBMC__) && defined(__COMPILER_VER__)}\par
00175 {\cf21 # define COMPILER_ID "zOS"}\par
00176   {\cf20 /* __IBMC__ = VRP */}\par
00177 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00178 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00179 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00180 \par
00181 {\cf21 #elif defined(__open_xl__) && defined(__clang__)}\par
00182 {\cf21 # define COMPILER_ID "IBMClang"}\par
00183 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)}\par
00184 {\cf21 # define COMPILER_VERSION_MINOR DEC(__open_xl_release__)}\par
00185 {\cf21 # define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)}\par
00186 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)}\par
00187 \par
00188 \par
00189 {\cf21 #elif defined(__ibmxl__) && defined(__clang__)}\par
00190 {\cf21 # define COMPILER_ID "XLClang"}\par
00191 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)}\par
00192 {\cf21 # define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)}\par
00193 {\cf21 # define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)}\par
00194 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)}\par
00195 \par
00196 \par
00197 {\cf21 #elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800}\par
00198 {\cf21 # define COMPILER_ID "XL"}\par
00199   {\cf20 /* __IBMC__ = VRP */}\par
00200 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00201 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00202 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00203 \par
00204 {\cf21 #elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800}\par
00205 {\cf21 # define COMPILER_ID "VisualAge"}\par
00206   {\cf20 /* __IBMC__ = VRP */}\par
00207 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00208 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00209 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00210 \par
00211 {\cf21 #elif defined(__NVCOMPILER)}\par
00212 {\cf21 # define COMPILER_ID "NVHPC"}\par
00213 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)}\par
00214 {\cf21 # define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)}\par
00215 {\cf21 # if defined(__NVCOMPILER_PATCHLEVEL__)}\par
00216 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)}\par
00217 {\cf21 # endif}\par
00218 \par
00219 {\cf21 #elif defined(__PGI)}\par
00220 {\cf21 # define COMPILER_ID "PGI"}\par
00221 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PGIC__)}\par
00222 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)}\par
00223 {\cf21 # if defined(__PGIC_PATCHLEVEL__)}\par
00224 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)}\par
00225 {\cf21 # endif}\par
00226 \par
00227 {\cf21 #elif defined(_CRAYC)}\par
00228 {\cf21 # define COMPILER_ID "Cray"}\par
00229 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)}\par
00230 {\cf21 # define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)}\par
00231 \par
00232 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00233 {\cf21 # define COMPILER_ID "TI"}\par
00234   {\cf20 /* __TI_COMPILER_VERSION__ = VVVRRRPPP */}\par
00235 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)}\par
00236 {\cf21 # define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)}\par
00237 {\cf21 # define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)}\par
00238 \par
00239 {\cf21 #elif defined(__CLANG_FUJITSU)}\par
00240 {\cf21 # define COMPILER_ID "FujitsuClang"}\par
00241 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00242 {\cf21 # define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00243 {\cf21 # define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00244 {\cf21 # define COMPILER_VERSION_INTERNAL_STR __clang_version__}\par
00245 \par
00246 \par
00247 {\cf21 #elif defined(__FUJITSU)}\par
00248 {\cf21 # define COMPILER_ID "Fujitsu"}\par
00249 {\cf21 # if defined(__FCC_version__)}\par
00250 {\cf21 #   define COMPILER_VERSION __FCC_version__}\par
00251 {\cf21 # elif defined(__FCC_major__)}\par
00252 {\cf21 #   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00253 {\cf21 #   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00254 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00255 {\cf21 # endif}\par
00256 {\cf21 # if defined(__fcc_version)}\par
00257 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)}\par
00258 {\cf21 # elif defined(__FCC_VERSION)}\par
00259 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)}\par
00260 {\cf21 # endif}\par
00261 \par
00262 \par
00263 {\cf21 #elif defined(__ghs__)}\par
00264 {\cf21 # define COMPILER_ID "GHS"}\par
00265 {\cf20 /* __GHS_VERSION_NUMBER = VVVVRP */}\par
00266 {\cf21 # ifdef __GHS_VERSION_NUMBER}\par
00267 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)}\par
00268 {\cf21 # define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)}\par
00269 {\cf21 # define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)}\par
00270 {\cf21 # endif}\par
00271 \par
00272 {\cf21 #elif defined(__TASKING__)}\par
00273 {\cf21 # define COMPILER_ID "Tasking"}\par
00274 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)}\par
00275 {\cf21   # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)}\par
00276 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__VERSION__)}\par
00277 \par
00278 {\cf21 #elif defined(__TINYC__)}\par
00279 {\cf21 # define COMPILER_ID "TinyCC"}\par
00280 \par
00281 {\cf21 #elif defined(__BCC__)}\par
00282 {\cf21 # define COMPILER_ID "Bruce"}\par
00283 \par
00284 {\cf21 #elif defined(__SCO_VERSION__)}\par
00285 {\cf21 # define COMPILER_ID "SCO"}\par
00286 \par
00287 {\cf21 #elif defined(__ARMCC_VERSION) && !defined(__clang__)}\par
00288 {\cf21 # define COMPILER_ID "ARMCC"}\par
00289 {\cf21 #if __ARMCC_VERSION >= 1000000}\par
00290   {\cf20 /* __ARMCC_VERSION = VRRPPPP */}\par
00291 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)}\par
00292 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)}\par
00293 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)}\par
00294 {\cf21 #else}\par
00295   {\cf20 /* __ARMCC_VERSION = VRPPPP */}\par
00296 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)}\par
00297 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)}\par
00298 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)}\par
00299 {\cf21 #endif}\par
00300 \par
00301 \par
00302 {\cf21 #elif defined(__clang__) && defined(__apple_build_version__)}\par
00303 {\cf21 # define COMPILER_ID "AppleClang"}\par
00304 {\cf21 # if defined(_MSC_VER)}\par
00305 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00306 {\cf21 # endif}\par
00307 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00308 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00309 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00310 {\cf21 # if defined(_MSC_VER)}\par
00311    {\cf20 /* _MSC_VER = VVRR */}\par
00312 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00313 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00314 {\cf21 # endif}\par
00315 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)}\par
00316 \par
00317 {\cf21 #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)}\par
00318 {\cf21 # define COMPILER_ID "ARMClang"}\par
00319 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)}\par
00320 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)}\par
00321 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)}\par
00322 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)}\par
00323 \par
00324 {\cf21 #elif defined(__clang__)}\par
00325 {\cf21 # define COMPILER_ID "Clang"}\par
00326 {\cf21 # if defined(_MSC_VER)}\par
00327 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00328 {\cf21 # endif}\par
00329 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00330 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00331 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00332 {\cf21 # if defined(_MSC_VER)}\par
00333    {\cf20 /* _MSC_VER = VVRR */}\par
00334 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00335 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00336 {\cf21 # endif}\par
00337 \par
00338 {\cf21 #elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))}\par
00339 {\cf21 # define COMPILER_ID "LCC"}\par
00340 {\cf21 # define COMPILER_VERSION_MAJOR DEC(1)}\par
00341 {\cf21 # if defined(__LCC__)}\par
00342 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__LCC__- 100)}\par
00343 {\cf21 # endif}\par
00344 {\cf21 # if defined(__LCC_MINOR__)}\par
00345 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)}\par
00346 {\cf21 # endif}\par
00347 {\cf21 # if defined(__GNUC__) && defined(__GNUC_MINOR__)}\par
00348 {\cf21 #  define SIMULATE_ID "GNU"}\par
00349 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00350 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00351 {\cf21 #  if defined(__GNUC_PATCHLEVEL__)}\par
00352 {\cf21 #   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00353 {\cf21 #  endif}\par
00354 {\cf21 # endif}\par
00355 \par
00356 {\cf21 #elif defined(__GNUC__)}\par
00357 {\cf21 # define COMPILER_ID "GNU"}\par
00358 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GNUC__)}\par
00359 {\cf21 # if defined(__GNUC_MINOR__)}\par
00360 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00361 {\cf21 # endif}\par
00362 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00363 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00364 {\cf21 # endif}\par
00365 \par
00366 {\cf21 #elif defined(_MSC_VER)}\par
00367 {\cf21 # define COMPILER_ID "MSVC"}\par
00368   {\cf20 /* _MSC_VER = VVRR */}\par
00369 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00370 {\cf21 # define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00371 {\cf21 # if defined(_MSC_FULL_VER)}\par
00372 {\cf21 #  if _MSC_VER >= 1400}\par
00373     {\cf20 /* _MSC_FULL_VER = VVRRPPPPP */}\par
00374 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)}\par
00375 {\cf21 #  else}\par
00376     {\cf20 /* _MSC_FULL_VER = VVRRPPPP */}\par
00377 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)}\par
00378 {\cf21 #  endif}\par
00379 {\cf21 # endif}\par
00380 {\cf21 # if defined(_MSC_BUILD)}\par
00381 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)}\par
00382 {\cf21 # endif}\par
00383 \par
00384 {\cf21 #elif defined(_ADI_COMPILER)}\par
00385 {\cf21 # define COMPILER_ID "ADSP"}\par
00386 {\cf21 #if defined(__VERSIONNUM__)}\par
00387   {\cf20 /* __VERSIONNUM__ = 0xVVRRPPTT */}\par
00388 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)}\par
00389 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)}\par
00390 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)}\par
00391 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)}\par
00392 {\cf21 #endif}\par
00393 \par
00394 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00395 {\cf21 # define COMPILER_ID "IAR"}\par
00396 {\cf21 # if defined(__VER__) && defined(__ICCARM__)}\par
00397 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)}\par
00398 {\cf21 #  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)}\par
00399 {\cf21 #  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)}\par
00400 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00401 {\cf21 # elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))}\par
00402 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)}\par
00403 {\cf21 #  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))}\par
00404 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)}\par
00405 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00406 {\cf21 # endif}\par
00407 \par
00408 {\cf21 #elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)}\par
00409 {\cf21 # define COMPILER_ID "SDCC"}\par
00410 {\cf21 # if defined(__SDCC_VERSION_MAJOR)}\par
00411 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)}\par
00412 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)}\par
00413 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)}\par
00414 {\cf21 # else}\par
00415   {\cf20 /* SDCC = VRP */}\par
00416 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(SDCC/100)}\par
00417 {\cf21 #  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)}\par
00418 {\cf21 #  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)}\par
00419 {\cf21 # endif}\par
00420 \par
00421 \par
00422 {\cf20 /* These compilers are either not known or too old to define an}\par
00423 {\cf20   identification macro.  Try to identify the platform and guess that}\par
00424 {\cf20   it is the native compiler.  */}\par
00425 {\cf21 #elif defined(__hpux) || defined(__hpua)}\par
00426 {\cf21 # define COMPILER_ID "HP"}\par
00427 \par
00428 {\cf21 #else }{\cf20 /* unknown compiler */}{\cf21 }\par
00429 {\cf21 # define COMPILER_ID ""}\par
00430 {\cf21 #endif}\par
00431 \par
00432 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00433 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00434 {\cf20    because some compilers will just produce instructions to fill the}\par
00435 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00436 {\cf18 char} {\cf17 const}* info_compiler = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler["} COMPILER_ID {\cf22 "]"};\par
00437 {\cf21 #ifdef SIMULATE_ID}\par
00438 {\cf18 char} {\cf17 const}* info_simulate = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "simulate["} SIMULATE_ID {\cf22 "]"};\par
00439 {\cf21 #endif}\par
00440 \par
00441 {\cf21 #ifdef __QNXNTO__}\par
00442 {\cf18 char} {\cf17 const}* qnxnto = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "qnxnto[]"};\par
00443 {\cf21 #endif}\par
00444 \par
00445 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00446 {\cf18 char} {\cf17 const} *info_cray = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_wrapper[CrayPrgEnv]"};\par
00447 {\cf21 #endif}\par
00448 \par
00449 {\cf21 #define STRINGIFY_HELPER(X) #X}\par
00450 {\cf21 #define STRINGIFY(X) STRINGIFY_HELPER(X)}\par
00451 \par
00452 {\cf20 /* Identify known platforms by name.  */}\par
00453 {\cf21 #if defined(__linux) || defined(__linux__) || defined(linux)}\par
00454 {\cf21 # define PLATFORM_ID "Linux"}\par
00455 \par
00456 {\cf21 #elif defined(__MSYS__)}\par
00457 {\cf21 # define PLATFORM_ID "MSYS"}\par
00458 \par
00459 {\cf21 #elif defined(__CYGWIN__)}\par
00460 {\cf21 # define PLATFORM_ID "Cygwin"}\par
00461 \par
00462 {\cf21 #elif defined(__MINGW32__)}\par
00463 {\cf21 # define PLATFORM_ID "MinGW"}\par
00464 \par
00465 {\cf21 #elif defined(__APPLE__)}\par
00466 {\cf21 # define PLATFORM_ID "Darwin"}\par
00467 \par
00468 {\cf21 #elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)}\par
00469 {\cf21 # define PLATFORM_ID "Windows"}\par
00470 \par
00471 {\cf21 #elif defined(__FreeBSD__) || defined(__FreeBSD)}\par
00472 {\cf21 # define PLATFORM_ID "FreeBSD"}\par
00473 \par
00474 {\cf21 #elif defined(__NetBSD__) || defined(__NetBSD)}\par
00475 {\cf21 # define PLATFORM_ID "NetBSD"}\par
00476 \par
00477 {\cf21 #elif defined(__OpenBSD__) || defined(__OPENBSD)}\par
00478 {\cf21 # define PLATFORM_ID "OpenBSD"}\par
00479 \par
00480 {\cf21 #elif defined(__sun) || defined(sun)}\par
00481 {\cf21 # define PLATFORM_ID "SunOS"}\par
00482 \par
00483 {\cf21 #elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)}\par
00484 {\cf21 # define PLATFORM_ID "AIX"}\par
00485 \par
00486 {\cf21 #elif defined(__hpux) || defined(__hpux__)}\par
00487 {\cf21 # define PLATFORM_ID "HP-UX"}\par
00488 \par
00489 {\cf21 #elif defined(__HAIKU__)}\par
00490 {\cf21 # define PLATFORM_ID "Haiku"}\par
00491 \par
00492 {\cf21 #elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)}\par
00493 {\cf21 # define PLATFORM_ID "BeOS"}\par
00494 \par
00495 {\cf21 #elif defined(__QNX__) || defined(__QNXNTO__)}\par
00496 {\cf21 # define PLATFORM_ID "QNX"}\par
00497 \par
00498 {\cf21 #elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)}\par
00499 {\cf21 # define PLATFORM_ID "Tru64"}\par
00500 \par
00501 {\cf21 #elif defined(__riscos) || defined(__riscos__)}\par
00502 {\cf21 # define PLATFORM_ID "RISCos"}\par
00503 \par
00504 {\cf21 #elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)}\par
00505 {\cf21 # define PLATFORM_ID "SINIX"}\par
00506 \par
00507 {\cf21 #elif defined(__UNIX_SV__)}\par
00508 {\cf21 # define PLATFORM_ID "UNIX_SV"}\par
00509 \par
00510 {\cf21 #elif defined(__bsdos__)}\par
00511 {\cf21 # define PLATFORM_ID "BSDOS"}\par
00512 \par
00513 {\cf21 #elif defined(_MPRAS) || defined(MPRAS)}\par
00514 {\cf21 # define PLATFORM_ID "MP-RAS"}\par
00515 \par
00516 {\cf21 #elif defined(__osf) || defined(__osf__)}\par
00517 {\cf21 # define PLATFORM_ID "OSF1"}\par
00518 \par
00519 {\cf21 #elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)}\par
00520 {\cf21 # define PLATFORM_ID "SCO_SV"}\par
00521 \par
00522 {\cf21 #elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)}\par
00523 {\cf21 # define PLATFORM_ID "ULTRIX"}\par
00524 \par
00525 {\cf21 #elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)}\par
00526 {\cf21 # define PLATFORM_ID "Xenix"}\par
00527 \par
00528 {\cf21 #elif defined(__WATCOMC__)}\par
00529 {\cf21 # if defined(__LINUX__)}\par
00530 {\cf21 #  define PLATFORM_ID "Linux"}\par
00531 \par
00532 {\cf21 # elif defined(__DOS__)}\par
00533 {\cf21 #  define PLATFORM_ID "DOS"}\par
00534 \par
00535 {\cf21 # elif defined(__OS2__)}\par
00536 {\cf21 #  define PLATFORM_ID "OS2"}\par
00537 \par
00538 {\cf21 # elif defined(__WINDOWS__)}\par
00539 {\cf21 #  define PLATFORM_ID "Windows3x"}\par
00540 \par
00541 {\cf21 # elif defined(__VXWORKS__)}\par
00542 {\cf21 #  define PLATFORM_ID "VxWorks"}\par
00543 \par
00544 {\cf21 # else }{\cf20 /* unknown platform */}{\cf21 }\par
00545 {\cf21 #  define PLATFORM_ID}\par
00546 {\cf21 # endif}\par
00547 \par
00548 {\cf21 #elif defined(__INTEGRITY)}\par
00549 {\cf21 # if defined(INT_178B)}\par
00550 {\cf21 #  define PLATFORM_ID "Integrity178"}\par
00551 \par
00552 {\cf21 # else }{\cf20 /* regular Integrity */}{\cf21 }\par
00553 {\cf21 #  define PLATFORM_ID "Integrity"}\par
00554 {\cf21 # endif}\par
00555 \par
00556 {\cf21 # elif defined(_ADI_COMPILER)}\par
00557 {\cf21 #  define PLATFORM_ID "ADSP"}\par
00558 \par
00559 {\cf21 #else }{\cf20 /* unknown platform */}{\cf21 }\par
00560 {\cf21 # define PLATFORM_ID}\par
00561 \par
00562 {\cf21 #endif}\par
00563 \par
00564 {\cf20 /* For windows compilers MSVC and Intel we can determine}\par
00565 {\cf20    the architecture of the compiler being used.  This is because}\par
00566 {\cf20    the compilers do not have flags that can change the architecture,}\par
00567 {\cf20    but rather depend on which compiler is being used}\par
00568 {\cf20 */}\par
00569 {\cf21 #if defined(_WIN32) && defined(_MSC_VER)}\par
00570 {\cf21 # if defined(_M_IA64)}\par
00571 {\cf21 #  define ARCHITECTURE_ID "IA64"}\par
00572 \par
00573 {\cf21 # elif defined(_M_ARM64EC)}\par
00574 {\cf21 #  define ARCHITECTURE_ID "ARM64EC"}\par
00575 \par
00576 {\cf21 # elif defined(_M_X64) || defined(_M_AMD64)}\par
00577 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00578 \par
00579 {\cf21 # elif defined(_M_IX86)}\par
00580 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00581 \par
00582 {\cf21 # elif defined(_M_ARM64)}\par
00583 {\cf21 #  define ARCHITECTURE_ID "ARM64"}\par
00584 \par
00585 {\cf21 # elif defined(_M_ARM)}\par
00586 {\cf21 #  if _M_ARM == 4}\par
00587 {\cf21 #   define ARCHITECTURE_ID "ARMV4I"}\par
00588 {\cf21 #  elif _M_ARM == 5}\par
00589 {\cf21 #   define ARCHITECTURE_ID "ARMV5I"}\par
00590 {\cf21 #  else}\par
00591 {\cf21 #   define ARCHITECTURE_ID "ARMV"} STRINGIFY(_M_ARM)\par
00592 {\cf21 #  endif}\par
00593 \par
00594 {\cf21 # elif defined(_M_MIPS)}\par
00595 {\cf21 #  define ARCHITECTURE_ID "MIPS"}\par
00596 \par
00597 {\cf21 # elif defined(_M_SH)}\par
00598 {\cf21 #  define ARCHITECTURE_ID "SHx"}\par
00599 \par
00600 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00601 {\cf21 #  define ARCHITECTURE_ID ""}\par
00602 {\cf21 # endif}\par
00603 \par
00604 {\cf21 #elif defined(__WATCOMC__)}\par
00605 {\cf21 # if defined(_M_I86)}\par
00606 {\cf21 #  define ARCHITECTURE_ID "I86"}\par
00607 \par
00608 {\cf21 # elif defined(_M_IX86)}\par
00609 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00610 \par
00611 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00612 {\cf21 #  define ARCHITECTURE_ID ""}\par
00613 {\cf21 # endif}\par
00614 \par
00615 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00616 {\cf21 # if defined(__ICCARM__)}\par
00617 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00618 \par
00619 {\cf21 # elif defined(__ICCRX__)}\par
00620 {\cf21 #  define ARCHITECTURE_ID "RX"}\par
00621 \par
00622 {\cf21 # elif defined(__ICCRH850__)}\par
00623 {\cf21 #  define ARCHITECTURE_ID "RH850"}\par
00624 \par
00625 {\cf21 # elif defined(__ICCRL78__)}\par
00626 {\cf21 #  define ARCHITECTURE_ID "RL78"}\par
00627 \par
00628 {\cf21 # elif defined(__ICCRISCV__)}\par
00629 {\cf21 #  define ARCHITECTURE_ID "RISCV"}\par
00630 \par
00631 {\cf21 # elif defined(__ICCAVR__)}\par
00632 {\cf21 #  define ARCHITECTURE_ID "AVR"}\par
00633 \par
00634 {\cf21 # elif defined(__ICC430__)}\par
00635 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00636 \par
00637 {\cf21 # elif defined(__ICCV850__)}\par
00638 {\cf21 #  define ARCHITECTURE_ID "V850"}\par
00639 \par
00640 {\cf21 # elif defined(__ICC8051__)}\par
00641 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00642 \par
00643 {\cf21 # elif defined(__ICCSTM8__)}\par
00644 {\cf21 #  define ARCHITECTURE_ID "STM8"}\par
00645 \par
00646 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00647 {\cf21 #  define ARCHITECTURE_ID ""}\par
00648 {\cf21 # endif}\par
00649 \par
00650 {\cf21 #elif defined(__ghs__)}\par
00651 {\cf21 # if defined(__PPC64__)}\par
00652 {\cf21 #  define ARCHITECTURE_ID "PPC64"}\par
00653 \par
00654 {\cf21 # elif defined(__ppc__)}\par
00655 {\cf21 #  define ARCHITECTURE_ID "PPC"}\par
00656 \par
00657 {\cf21 # elif defined(__ARM__)}\par
00658 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00659 \par
00660 {\cf21 # elif defined(__x86_64__)}\par
00661 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00662 \par
00663 {\cf21 # elif defined(__i386__)}\par
00664 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00665 \par
00666 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00667 {\cf21 #  define ARCHITECTURE_ID ""}\par
00668 {\cf21 # endif}\par
00669 \par
00670 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00671 {\cf21 # if defined(__TI_ARM__)}\par
00672 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00673 \par
00674 {\cf21 # elif defined(__MSP430__)}\par
00675 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00676 \par
00677 {\cf21 # elif defined(__TMS320C28XX__)}\par
00678 {\cf21 #  define ARCHITECTURE_ID "TMS320C28x"}\par
00679 \par
00680 {\cf21 # elif defined(__TMS320C6X__) || defined(_TMS320C6X)}\par
00681 {\cf21 #  define ARCHITECTURE_ID "TMS320C6x"}\par
00682 \par
00683 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00684 {\cf21 #  define ARCHITECTURE_ID ""}\par
00685 {\cf21 # endif}\par
00686 \par
00687 {\cf21 # elif defined(__ADSPSHARC__)}\par
00688 {\cf21 #  define ARCHITECTURE_ID "SHARC"}\par
00689 \par
00690 {\cf21 # elif defined(__ADSPBLACKFIN__)}\par
00691 {\cf21 #  define ARCHITECTURE_ID "Blackfin"}\par
00692 \par
00693 {\cf21 #elif defined(__TASKING__)}\par
00694 \par
00695 {\cf21 # if defined(__CTC__) || defined(__CPTC__)}\par
00696 {\cf21 #  define ARCHITECTURE_ID "TriCore"}\par
00697 \par
00698 {\cf21 # elif defined(__CMCS__)}\par
00699 {\cf21 #  define ARCHITECTURE_ID "MCS"}\par
00700 \par
00701 {\cf21 # elif defined(__CARM__)}\par
00702 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00703 \par
00704 {\cf21 # elif defined(__CARC__)}\par
00705 {\cf21 #  define ARCHITECTURE_ID "ARC"}\par
00706 \par
00707 {\cf21 # elif defined(__C51__)}\par
00708 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00709 \par
00710 {\cf21 # elif defined(__CPCP__)}\par
00711 {\cf21 #  define ARCHITECTURE_ID "PCP"}\par
00712 \par
00713 {\cf21 # else}\par
00714 {\cf21 #  define ARCHITECTURE_ID ""}\par
00715 {\cf21 # endif}\par
00716 \par
00717 {\cf21 #else}\par
00718 {\cf21 #  define ARCHITECTURE_ID}\par
00719 {\cf21 #endif}\par
00720 \par
00721 {\cf20 /* Convert integer to decimal digit literals.  */}\par
00722 {\cf21 #define DEC(n)                   \\}\par
00723 {\cf21   ('0' + (((n) / 10000000)%10)), \\}\par
00724 {\cf21   ('0' + (((n) / 1000000)%10)),  \\}\par
00725 {\cf21   ('0' + (((n) / 100000)%10)),   \\}\par
00726 {\cf21   ('0' + (((n) / 10000)%10)),    \\}\par
00727 {\cf21   ('0' + (((n) / 1000)%10)),     \\}\par
00728 {\cf21   ('0' + (((n) / 100)%10)),      \\}\par
00729 {\cf21   ('0' + (((n) / 10)%10)),       \\}\par
00730 {\cf21   ('0' +  ((n) % 10))}\par
00731 \par
00732 {\cf20 /* Convert integer to hex digit literals.  */}\par
00733 {\cf21 #define HEX(n)             \\}\par
00734 {\cf21   ('0' + ((n)>>28 & 0xF)), \\}\par
00735 {\cf21   ('0' + ((n)>>24 & 0xF)), \\}\par
00736 {\cf21   ('0' + ((n)>>20 & 0xF)), \\}\par
00737 {\cf21   ('0' + ((n)>>16 & 0xF)), \\}\par
00738 {\cf21   ('0' + ((n)>>12 & 0xF)), \\}\par
00739 {\cf21   ('0' + ((n)>>8  & 0xF)), \\}\par
00740 {\cf21   ('0' + ((n)>>4  & 0xF)), \\}\par
00741 {\cf21   ('0' + ((n)     & 0xF))}\par
00742 \par
00743 {\cf20 /* Construct a string literal encoding the version number. */}\par
00744 {\cf21 #ifdef COMPILER_VERSION}\par
00745 {\cf18 char} {\cf17 const}* info_version = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version["} COMPILER_VERSION {\cf22 "]"};\par
00746 \par
00747 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00748 {\cf21 #elif defined(COMPILER_VERSION_MAJOR)}\par
00749 {\cf18 char} {\cf17 const} info_version[] = \{\par
00750   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00751   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00752   COMPILER_VERSION_MAJOR,\par
00753 {\cf21 # ifdef COMPILER_VERSION_MINOR}\par
00754   {\cf23 '.'}, COMPILER_VERSION_MINOR,\par
00755 {\cf21 #  ifdef COMPILER_VERSION_PATCH}\par
00756    {\cf23 '.'}, COMPILER_VERSION_PATCH,\par
00757 {\cf21 #   ifdef COMPILER_VERSION_TWEAK}\par
00758     {\cf23 '.'}, COMPILER_VERSION_TWEAK,\par
00759 {\cf21 #   endif}\par
00760 {\cf21 #  endif}\par
00761 {\cf21 # endif}\par
00762   {\cf23 ']'},{\cf23 '\\0'}\};\par
00763 {\cf21 #endif}\par
00764 \par
00765 {\cf20 /* Construct a string literal encoding the internal version number. */}\par
00766 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00767 {\cf18 char} {\cf17 const} info_version_internal[] = \{\par
00768   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00769   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '_'},\par
00770   {\cf23 'i'},{\cf23 'n'},{\cf23 't'},{\cf23 'e'},{\cf23 'r'},{\cf23 'n'},{\cf23 'a'},{\cf23 'l'},{\cf23 '['},\par
00771   COMPILER_VERSION_INTERNAL,{\cf23 ']'},{\cf23 '\\0'}\};\par
00772 {\cf21 #elif defined(COMPILER_VERSION_INTERNAL_STR)}\par
00773 {\cf18 char} {\cf17 const}* info_version_internal = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version_internal["} COMPILER_VERSION_INTERNAL_STR {\cf22 "]"};\par
00774 {\cf21 #endif}\par
00775 \par
00776 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00777 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00778 {\cf18 char} {\cf17 const} info_simulate_version[] = \{\par
00779   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00780   {\cf23 's'},{\cf23 'i'},{\cf23 'm'},{\cf23 'u'},{\cf23 'l'},{\cf23 'a'},{\cf23 't'},{\cf23 'e'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00781   SIMULATE_VERSION_MAJOR,\par
00782 {\cf21 # ifdef SIMULATE_VERSION_MINOR}\par
00783   {\cf23 '.'}, SIMULATE_VERSION_MINOR,\par
00784 {\cf21 #  ifdef SIMULATE_VERSION_PATCH}\par
00785    {\cf23 '.'}, SIMULATE_VERSION_PATCH,\par
00786 {\cf21 #   ifdef SIMULATE_VERSION_TWEAK}\par
00787     {\cf23 '.'}, SIMULATE_VERSION_TWEAK,\par
00788 {\cf21 #   endif}\par
00789 {\cf21 #  endif}\par
00790 {\cf21 # endif}\par
00791   {\cf23 ']'},{\cf23 '\\0'}\};\par
00792 {\cf21 #endif}\par
00793 \par
00794 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00795 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00796 {\cf20    because some compilers will just produce instructions to fill the}\par
00797 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00798 {\cf18 char} {\cf17 const}* info_platform = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "platform["} PLATFORM_ID {\cf22 "]"};\par
00799 {\cf18 char} {\cf17 const}* info_arch = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "arch["} ARCHITECTURE_ID {\cf22 "]"};\par
00800 \par
00801 \par
00802 \par
00803 {\cf21 #if !defined(__STDC__) && !defined(__clang__)}\par
00804 {\cf21 # if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)}\par
00805 {\cf21 #  define C_VERSION "90"}\par
00806 {\cf21 # else}\par
00807 {\cf21 #  define C_VERSION}\par
00808 {\cf21 # endif}\par
00809 {\cf21 #elif __STDC_VERSION__ > 201710L}\par
00810 {\cf21 # define C_VERSION "23"}\par
00811 {\cf21 #elif __STDC_VERSION__ >= 201710L}\par
00812 {\cf21 # define C_VERSION "17"}\par
00813 {\cf21 #elif __STDC_VERSION__ >= 201000L}\par
00814 {\cf21 # define C_VERSION "11"}\par
00815 {\cf21 #elif __STDC_VERSION__ >= 199901L}\par
00816 {\cf21 # define C_VERSION "99"}\par
00817 {\cf21 #else}\par
00818 {\cf21 # define C_VERSION "90"}\par
00819 {\cf21 #endif}\par
00820 {\cf17 const} {\cf18 char}* info_language_standard_default =\par
00821   {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["} C_VERSION {\cf22 "]"};\par
00822 \par
00823 {\cf17 const} {\cf18 char}* info_language_extensions_default = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
00824 {\cf21 #if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \\}\par
00825 {\cf21      defined(__TI_COMPILER_VERSION__)) &&                                     \\}\par
00826 {\cf21   !defined(__STRICT_ANSI__)}\par
00827   {\cf22 "ON"}\par
00828 {\cf21 #else}\par
00829   {\cf22 "OFF"}\par
00830 {\cf21 #endif}\par
00831 {\cf22 "]"};\par
00832 \par
00833 {\cf20 /*--------------------------------------------------------------------------*/}\par
00834 \par
00835 {\cf21 #ifdef ID_VOID_MAIN}\par
00836 {\cf18 void} main() \{\}\par
00837 {\cf21 #else}\par
00838 {\cf21 # if defined(__CLASSIC_C__)}\par
00839 {\cf18 int} main(argc, argv) {\cf18 int} argc; {\cf18 char} *argv[];\par
00840 {\cf21 # else}\par
00841 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
00842 {\cf21 # endif}\par
00843 \{\par
00844   {\cf18 int} require = 0;\par
00845   require += info_compiler[argc];\par
00846   require += info_platform[argc];\par
00847   require += info_arch[argc];\par
00848 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00849   require += info_version[argc];\par
00850 {\cf21 #endif}\par
00851 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00852   require += info_version_internal[argc];\par
00853 {\cf21 #endif}\par
00854 {\cf21 #ifdef SIMULATE_ID}\par
00855   require += info_simulate[argc];\par
00856 {\cf21 #endif}\par
00857 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00858   require += info_simulate_version[argc];\par
00859 {\cf21 #endif}\par
00860 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00861   require += info_cray[argc];\par
00862 {\cf21 #endif}\par
00863   require += info_language_standard_default[argc];\par
00864   require += info_language_extensions_default[argc];\par
00865   (void)argv;\par
00866   {\cf19 return} require;\par
00867 \}\par
00868 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB CMakeCCompilerId.c\par \pard\plain 
{\tc\tcl2 \v CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b C_VERSION}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_standard_default}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_extensions_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 
{\xe \v __has_include\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 17}}\par
}
{\xe \v ARCHITECTURE_ID\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 718}}\par
}
{\xe \v C_VERSION\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:C_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define C_VERSION}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 807}}\par
}
{\xe \v COMPILER_ID\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 429}}\par
}
{\xe \v DEC\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 722}}\par
}
{\xe \v HEX\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 733}}\par
}
{\xe \v PLATFORM_ID\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 560}}\par
}
{\xe \v STRINGIFY\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 450}}\par
}
{\xe \v STRINGIFY_HELPER\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 449}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v main\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 841}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00843 \{\par
00844   {\cf18 int} require = 0;\par
00845   require += info_compiler[argc];\par
00846   require += info_platform[argc];\par
00847   require += info_arch[argc];\par
00848 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00849   require += info_version[argc];\par
00850 {\cf21 #endif}\par
00851 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00852   require += info_version_internal[argc];\par
00853 {\cf21 #endif}\par
00854 {\cf21 #ifdef SIMULATE_ID}\par
00855   require += info_simulate[argc];\par
00856 {\cf21 #endif}\par
00857 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00858   require += info_simulate_version[argc];\par
00859 {\cf21 #endif}\par
00860 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00861   require += info_cray[argc];\par
00862 {\cf21 #endif}\par
00863   require += info_language_standard_default[argc];\par
00864   require += info_language_extensions_default[argc];\par
00865   (void)argv;\par
00866   {\cf19 return} require;\par
00867 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v info_arch\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 799}}\par
}
{\xe \v info_compiler\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 436}}\par
}
{\xe \v info_language_extensions_default\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_language_extensions_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_extensions_default}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
\par
\par
\par
\par
\par
  {\cf22 "OFF"}\par
\par
{\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 823}}\par
}
{\xe \v info_language_standard_default\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_language_standard_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_standard_default}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
  {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["} C_VERSION {\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 820}}\par
}
{\xe \v info_platform\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 798}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdC/CMakeCCompilerId.c\par \pard\plain 
{\tc\tcl2 \v CMakeCCompilerId.c}
{\xe \v CMakeCCompilerId.c}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifdef __cplusplus}\par
00002 {\cf21 # error "A C++ compiler has been selected for C."}\par
00003 {\cf21 #endif}\par
00004 \par
00005 {\cf21 #if defined(__18CXX)}\par
00006 {\cf21 # define ID_VOID_MAIN}\par
00007 {\cf21 #endif}\par
00008 {\cf21 #if defined(__CLASSIC_C__)}\par
00009 {\cf20 /* cv-qualifiers did not exist in K&R C */}\par
00010 {\cf21 # define const}\par
00011 {\cf21 # define volatile}\par
00012 {\cf21 #endif}\par
00013 \par
00014 {\cf21 #if !defined(__has_include)}\par
00015 {\cf20 /* If the compiler does not have __has_include, pretend the answer is}\par
00016 {\cf20    always no.  */}\par
00017 {\cf21 #  define __has_include(x) 0}\par
00018 {\cf21 #endif}\par
00019 \par
00020 \par
00021 {\cf20 /* Version number components: V=Version, R=Revision, P=Patch}\par
00022 {\cf20    Version date components:   YYYY=Year, MM=Month,   DD=Day  */}\par
00023 \par
00024 {\cf21 #if defined(__INTEL_COMPILER) || defined(__ICC)}\par
00025 {\cf21 # define COMPILER_ID "Intel"}\par
00026 {\cf21 # if defined(_MSC_VER)}\par
00027 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00028 {\cf21 # endif}\par
00029 {\cf21 # if defined(__GNUC__)}\par
00030 {\cf21 #  define SIMULATE_ID "GNU"}\par
00031 {\cf21 # endif}\par
00032   {\cf20 /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,}\par
00033 {\cf20      except that a few beta releases use the old format with V=2021.  */}\par
00034 {\cf21 # if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111}\par
00035 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)}\par
00036 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)}\par
00037 {\cf21 #  if defined(__INTEL_COMPILER_UPDATE)}\par
00038 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)}\par
00039 {\cf21 #  else}\par
00040 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)}\par
00041 {\cf21 #  endif}\par
00042 {\cf21 # else}\par
00043 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)}\par
00044 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)}\par
00045    {\cf20 /* The third version component from --version is an update index,}\par
00046 {\cf20       but no macro is provided for it.  */}\par
00047 {\cf21 #  define COMPILER_VERSION_PATCH DEC(0)}\par
00048 {\cf21 # endif}\par
00049 {\cf21 # if defined(__INTEL_COMPILER_BUILD_DATE)}\par
00050    {\cf20 /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */}\par
00051 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)}\par
00052 {\cf21 # endif}\par
00053 {\cf21 # if defined(_MSC_VER)}\par
00054    {\cf20 /* _MSC_VER = VVRR */}\par
00055 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00056 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00057 {\cf21 # endif}\par
00058 {\cf21 # if defined(__GNUC__)}\par
00059 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00060 {\cf21 # elif defined(__GNUG__)}\par
00061 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00062 {\cf21 # endif}\par
00063 {\cf21 # if defined(__GNUC_MINOR__)}\par
00064 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00065 {\cf21 # endif}\par
00066 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00067 {\cf21 #  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00068 {\cf21 # endif}\par
00069 \par
00070 {\cf21 #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)}\par
00071 {\cf21 # define COMPILER_ID "IntelLLVM"}\par
00072 {\cf21 #if defined(_MSC_VER)}\par
00073 {\cf21 # define SIMULATE_ID "MSVC"}\par
00074 {\cf21 #endif}\par
00075 {\cf21 #if defined(__GNUC__)}\par
00076 {\cf21 # define SIMULATE_ID "GNU"}\par
00077 {\cf21 #endif}\par
00078 {\cf20 /* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and}\par
00079 {\cf20  * later.  Look for 6 digit vs. 8 digit version number to decide encoding.}\par
00080 {\cf20  * VVVV is no smaller than the current year when a version is released.}\par
00081 {\cf20  */}\par
00082 {\cf21 #if __INTEL_LLVM_COMPILER < 1000000L}\par
00083 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)}\par
00084 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)}\par
00085 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)}\par
00086 {\cf21 #else}\par
00087 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)}\par
00088 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)}\par
00089 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)}\par
00090 {\cf21 #endif}\par
00091 {\cf21 #if defined(_MSC_VER)}\par
00092   {\cf20 /* _MSC_VER = VVRR */}\par
00093 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00094 {\cf21 # define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00095 {\cf21 #endif}\par
00096 {\cf21 #if defined(__GNUC__)}\par
00097 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00098 {\cf21 #elif defined(__GNUG__)}\par
00099 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00100 {\cf21 #endif}\par
00101 {\cf21 #if defined(__GNUC_MINOR__)}\par
00102 {\cf21 # define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00103 {\cf21 #endif}\par
00104 {\cf21 #if defined(__GNUC_PATCHLEVEL__)}\par
00105 {\cf21 # define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00106 {\cf21 #endif}\par
00107 \par
00108 {\cf21 #elif defined(__PATHCC__)}\par
00109 {\cf21 # define COMPILER_ID "PathScale"}\par
00110 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PATHCC__)}\par
00111 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)}\par
00112 {\cf21 # if defined(__PATHCC_PATCHLEVEL__)}\par
00113 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)}\par
00114 {\cf21 # endif}\par
00115 \par
00116 {\cf21 #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)}\par
00117 {\cf21 # define COMPILER_ID "Embarcadero"}\par
00118 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)}\par
00119 {\cf21 # define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)}\par
00120 {\cf21 # define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)}\par
00121 \par
00122 {\cf21 #elif defined(__BORLANDC__)}\par
00123 {\cf21 # define COMPILER_ID "Borland"}\par
00124   {\cf20 /* __BORLANDC__ = 0xVRR */}\par
00125 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)}\par
00126 {\cf21 # define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)}\par
00127 \par
00128 {\cf21 #elif defined(__WATCOMC__) && __WATCOMC__ < 1200}\par
00129 {\cf21 # define COMPILER_ID "Watcom"}\par
00130    {\cf20 /* __WATCOMC__ = VVRR */}\par
00131 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)}\par
00132 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00133 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00134 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00135 {\cf21 # endif}\par
00136 \par
00137 {\cf21 #elif defined(__WATCOMC__)}\par
00138 {\cf21 # define COMPILER_ID "OpenWatcom"}\par
00139    {\cf20 /* __WATCOMC__ = VVRP + 1100 */}\par
00140 {\cf21 # define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)}\par
00141 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00142 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00143 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00144 {\cf21 # endif}\par
00145 \par
00146 {\cf21 #elif defined(__SUNPRO_C)}\par
00147 {\cf21 # define COMPILER_ID "SunPro"}\par
00148 {\cf21 # if __SUNPRO_C >= 0x5100}\par
00149    {\cf20 /* __SUNPRO_C = 0xVRRP */}\par
00150 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)}\par
00151 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)}\par
00152 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)}\par
00153 {\cf21 # else}\par
00154    {\cf20 /* __SUNPRO_CC = 0xVRP */}\par
00155 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)}\par
00156 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)}\par
00157 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)}\par
00158 {\cf21 # endif}\par
00159 \par
00160 {\cf21 #elif defined(__HP_cc)}\par
00161 {\cf21 # define COMPILER_ID "HP"}\par
00162   {\cf20 /* __HP_cc = VVRRPP */}\par
00163 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)}\par
00164 {\cf21 # define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)}\par
00165 {\cf21 # define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)}\par
00166 \par
00167 {\cf21 #elif defined(__DECC)}\par
00168 {\cf21 # define COMPILER_ID "Compaq"}\par
00169   {\cf20 /* __DECC_VER = VVRRTPPPP */}\par
00170 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)}\par
00171 {\cf21 # define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)}\par
00172 {\cf21 # define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)}\par
00173 \par
00174 {\cf21 #elif defined(__IBMC__) && defined(__COMPILER_VER__)}\par
00175 {\cf21 # define COMPILER_ID "zOS"}\par
00176   {\cf20 /* __IBMC__ = VRP */}\par
00177 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00178 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00179 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00180 \par
00181 {\cf21 #elif defined(__open_xl__) && defined(__clang__)}\par
00182 {\cf21 # define COMPILER_ID "IBMClang"}\par
00183 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)}\par
00184 {\cf21 # define COMPILER_VERSION_MINOR DEC(__open_xl_release__)}\par
00185 {\cf21 # define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)}\par
00186 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)}\par
00187 \par
00188 \par
00189 {\cf21 #elif defined(__ibmxl__) && defined(__clang__)}\par
00190 {\cf21 # define COMPILER_ID "XLClang"}\par
00191 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)}\par
00192 {\cf21 # define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)}\par
00193 {\cf21 # define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)}\par
00194 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)}\par
00195 \par
00196 \par
00197 {\cf21 #elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800}\par
00198 {\cf21 # define COMPILER_ID "XL"}\par
00199   {\cf20 /* __IBMC__ = VRP */}\par
00200 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00201 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00202 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00203 \par
00204 {\cf21 #elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800}\par
00205 {\cf21 # define COMPILER_ID "VisualAge"}\par
00206   {\cf20 /* __IBMC__ = VRP */}\par
00207 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)}\par
00208 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)}\par
00209 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)}\par
00210 \par
00211 {\cf21 #elif defined(__NVCOMPILER)}\par
00212 {\cf21 # define COMPILER_ID "NVHPC"}\par
00213 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)}\par
00214 {\cf21 # define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)}\par
00215 {\cf21 # if defined(__NVCOMPILER_PATCHLEVEL__)}\par
00216 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)}\par
00217 {\cf21 # endif}\par
00218 \par
00219 {\cf21 #elif defined(__PGI)}\par
00220 {\cf21 # define COMPILER_ID "PGI"}\par
00221 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PGIC__)}\par
00222 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)}\par
00223 {\cf21 # if defined(__PGIC_PATCHLEVEL__)}\par
00224 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)}\par
00225 {\cf21 # endif}\par
00226 \par
00227 {\cf21 #elif defined(_CRAYC)}\par
00228 {\cf21 # define COMPILER_ID "Cray"}\par
00229 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)}\par
00230 {\cf21 # define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)}\par
00231 \par
00232 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00233 {\cf21 # define COMPILER_ID "TI"}\par
00234   {\cf20 /* __TI_COMPILER_VERSION__ = VVVRRRPPP */}\par
00235 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)}\par
00236 {\cf21 # define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)}\par
00237 {\cf21 # define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)}\par
00238 \par
00239 {\cf21 #elif defined(__CLANG_FUJITSU)}\par
00240 {\cf21 # define COMPILER_ID "FujitsuClang"}\par
00241 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00242 {\cf21 # define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00243 {\cf21 # define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00244 {\cf21 # define COMPILER_VERSION_INTERNAL_STR __clang_version__}\par
00245 \par
00246 \par
00247 {\cf21 #elif defined(__FUJITSU)}\par
00248 {\cf21 # define COMPILER_ID "Fujitsu"}\par
00249 {\cf21 # if defined(__FCC_version__)}\par
00250 {\cf21 #   define COMPILER_VERSION __FCC_version__}\par
00251 {\cf21 # elif defined(__FCC_major__)}\par
00252 {\cf21 #   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00253 {\cf21 #   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00254 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00255 {\cf21 # endif}\par
00256 {\cf21 # if defined(__fcc_version)}\par
00257 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)}\par
00258 {\cf21 # elif defined(__FCC_VERSION)}\par
00259 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)}\par
00260 {\cf21 # endif}\par
00261 \par
00262 \par
00263 {\cf21 #elif defined(__ghs__)}\par
00264 {\cf21 # define COMPILER_ID "GHS"}\par
00265 {\cf20 /* __GHS_VERSION_NUMBER = VVVVRP */}\par
00266 {\cf21 # ifdef __GHS_VERSION_NUMBER}\par
00267 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)}\par
00268 {\cf21 # define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)}\par
00269 {\cf21 # define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)}\par
00270 {\cf21 # endif}\par
00271 \par
00272 {\cf21 #elif defined(__TASKING__)}\par
00273 {\cf21 # define COMPILER_ID "Tasking"}\par
00274 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)}\par
00275 {\cf21   # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)}\par
00276 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__VERSION__)}\par
00277 \par
00278 {\cf21 #elif defined(__TINYC__)}\par
00279 {\cf21 # define COMPILER_ID "TinyCC"}\par
00280 \par
00281 {\cf21 #elif defined(__BCC__)}\par
00282 {\cf21 # define COMPILER_ID "Bruce"}\par
00283 \par
00284 {\cf21 #elif defined(__SCO_VERSION__)}\par
00285 {\cf21 # define COMPILER_ID "SCO"}\par
00286 \par
00287 {\cf21 #elif defined(__ARMCC_VERSION) && !defined(__clang__)}\par
00288 {\cf21 # define COMPILER_ID "ARMCC"}\par
00289 {\cf21 #if __ARMCC_VERSION >= 1000000}\par
00290   {\cf20 /* __ARMCC_VERSION = VRRPPPP */}\par
00291 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)}\par
00292 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)}\par
00293 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)}\par
00294 {\cf21 #else}\par
00295   {\cf20 /* __ARMCC_VERSION = VRPPPP */}\par
00296 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)}\par
00297 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)}\par
00298 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)}\par
00299 {\cf21 #endif}\par
00300 \par
00301 \par
00302 {\cf21 #elif defined(__clang__) && defined(__apple_build_version__)}\par
00303 {\cf21 # define COMPILER_ID "AppleClang"}\par
00304 {\cf21 # if defined(_MSC_VER)}\par
00305 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00306 {\cf21 # endif}\par
00307 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00308 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00309 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00310 {\cf21 # if defined(_MSC_VER)}\par
00311    {\cf20 /* _MSC_VER = VVRR */}\par
00312 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00313 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00314 {\cf21 # endif}\par
00315 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)}\par
00316 \par
00317 {\cf21 #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)}\par
00318 {\cf21 # define COMPILER_ID "ARMClang"}\par
00319 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)}\par
00320 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)}\par
00321 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)}\par
00322 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)}\par
00323 \par
00324 {\cf21 #elif defined(__clang__)}\par
00325 {\cf21 # define COMPILER_ID "Clang"}\par
00326 {\cf21 # if defined(_MSC_VER)}\par
00327 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00328 {\cf21 # endif}\par
00329 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00330 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00331 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00332 {\cf21 # if defined(_MSC_VER)}\par
00333    {\cf20 /* _MSC_VER = VVRR */}\par
00334 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00335 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00336 {\cf21 # endif}\par
00337 \par
00338 {\cf21 #elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))}\par
00339 {\cf21 # define COMPILER_ID "LCC"}\par
00340 {\cf21 # define COMPILER_VERSION_MAJOR DEC(1)}\par
00341 {\cf21 # if defined(__LCC__)}\par
00342 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__LCC__- 100)}\par
00343 {\cf21 # endif}\par
00344 {\cf21 # if defined(__LCC_MINOR__)}\par
00345 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)}\par
00346 {\cf21 # endif}\par
00347 {\cf21 # if defined(__GNUC__) && defined(__GNUC_MINOR__)}\par
00348 {\cf21 #  define SIMULATE_ID "GNU"}\par
00349 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00350 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00351 {\cf21 #  if defined(__GNUC_PATCHLEVEL__)}\par
00352 {\cf21 #   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00353 {\cf21 #  endif}\par
00354 {\cf21 # endif}\par
00355 \par
00356 {\cf21 #elif defined(__GNUC__)}\par
00357 {\cf21 # define COMPILER_ID "GNU"}\par
00358 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GNUC__)}\par
00359 {\cf21 # if defined(__GNUC_MINOR__)}\par
00360 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00361 {\cf21 # endif}\par
00362 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00363 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00364 {\cf21 # endif}\par
00365 \par
00366 {\cf21 #elif defined(_MSC_VER)}\par
00367 {\cf21 # define COMPILER_ID "MSVC"}\par
00368   {\cf20 /* _MSC_VER = VVRR */}\par
00369 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00370 {\cf21 # define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00371 {\cf21 # if defined(_MSC_FULL_VER)}\par
00372 {\cf21 #  if _MSC_VER >= 1400}\par
00373     {\cf20 /* _MSC_FULL_VER = VVRRPPPPP */}\par
00374 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)}\par
00375 {\cf21 #  else}\par
00376     {\cf20 /* _MSC_FULL_VER = VVRRPPPP */}\par
00377 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)}\par
00378 {\cf21 #  endif}\par
00379 {\cf21 # endif}\par
00380 {\cf21 # if defined(_MSC_BUILD)}\par
00381 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)}\par
00382 {\cf21 # endif}\par
00383 \par
00384 {\cf21 #elif defined(_ADI_COMPILER)}\par
00385 {\cf21 # define COMPILER_ID "ADSP"}\par
00386 {\cf21 #if defined(__VERSIONNUM__)}\par
00387   {\cf20 /* __VERSIONNUM__ = 0xVVRRPPTT */}\par
00388 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)}\par
00389 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)}\par
00390 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)}\par
00391 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)}\par
00392 {\cf21 #endif}\par
00393 \par
00394 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00395 {\cf21 # define COMPILER_ID "IAR"}\par
00396 {\cf21 # if defined(__VER__) && defined(__ICCARM__)}\par
00397 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)}\par
00398 {\cf21 #  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)}\par
00399 {\cf21 #  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)}\par
00400 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00401 {\cf21 # elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))}\par
00402 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)}\par
00403 {\cf21 #  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))}\par
00404 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)}\par
00405 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00406 {\cf21 # endif}\par
00407 \par
00408 {\cf21 #elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)}\par
00409 {\cf21 # define COMPILER_ID "SDCC"}\par
00410 {\cf21 # if defined(__SDCC_VERSION_MAJOR)}\par
00411 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)}\par
00412 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)}\par
00413 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)}\par
00414 {\cf21 # else}\par
00415   {\cf20 /* SDCC = VRP */}\par
00416 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(SDCC/100)}\par
00417 {\cf21 #  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)}\par
00418 {\cf21 #  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)}\par
00419 {\cf21 # endif}\par
00420 \par
00421 \par
00422 {\cf20 /* These compilers are either not known or too old to define an}\par
00423 {\cf20   identification macro.  Try to identify the platform and guess that}\par
00424 {\cf20   it is the native compiler.  */}\par
00425 {\cf21 #elif defined(__hpux) || defined(__hpua)}\par
00426 {\cf21 # define COMPILER_ID "HP"}\par
00427 \par
00428 {\cf21 #else }{\cf20 /* unknown compiler */}{\cf21 }\par
00429 {\cf21 # define COMPILER_ID ""}\par
00430 {\cf21 #endif}\par
00431 \par
00432 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00433 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00434 {\cf20    because some compilers will just produce instructions to fill the}\par
00435 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00436 {\cf18 char} {\cf17 const}* info_compiler = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler["} COMPILER_ID {\cf22 "]"};\par
00437 {\cf21 #ifdef SIMULATE_ID}\par
00438 {\cf18 char} {\cf17 const}* info_simulate = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "simulate["} SIMULATE_ID {\cf22 "]"};\par
00439 {\cf21 #endif}\par
00440 \par
00441 {\cf21 #ifdef __QNXNTO__}\par
00442 {\cf18 char} {\cf17 const}* qnxnto = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "qnxnto[]"};\par
00443 {\cf21 #endif}\par
00444 \par
00445 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00446 {\cf18 char} {\cf17 const} *info_cray = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_wrapper[CrayPrgEnv]"};\par
00447 {\cf21 #endif}\par
00448 \par
00449 {\cf21 #define STRINGIFY_HELPER(X) #X}\par
00450 {\cf21 #define STRINGIFY(X) STRINGIFY_HELPER(X)}\par
00451 \par
00452 {\cf20 /* Identify known platforms by name.  */}\par
00453 {\cf21 #if defined(__linux) || defined(__linux__) || defined(linux)}\par
00454 {\cf21 # define PLATFORM_ID "Linux"}\par
00455 \par
00456 {\cf21 #elif defined(__MSYS__)}\par
00457 {\cf21 # define PLATFORM_ID "MSYS"}\par
00458 \par
00459 {\cf21 #elif defined(__CYGWIN__)}\par
00460 {\cf21 # define PLATFORM_ID "Cygwin"}\par
00461 \par
00462 {\cf21 #elif defined(__MINGW32__)}\par
00463 {\cf21 # define PLATFORM_ID "MinGW"}\par
00464 \par
00465 {\cf21 #elif defined(__APPLE__)}\par
00466 {\cf21 # define PLATFORM_ID "Darwin"}\par
00467 \par
00468 {\cf21 #elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)}\par
00469 {\cf21 # define PLATFORM_ID "Windows"}\par
00470 \par
00471 {\cf21 #elif defined(__FreeBSD__) || defined(__FreeBSD)}\par
00472 {\cf21 # define PLATFORM_ID "FreeBSD"}\par
00473 \par
00474 {\cf21 #elif defined(__NetBSD__) || defined(__NetBSD)}\par
00475 {\cf21 # define PLATFORM_ID "NetBSD"}\par
00476 \par
00477 {\cf21 #elif defined(__OpenBSD__) || defined(__OPENBSD)}\par
00478 {\cf21 # define PLATFORM_ID "OpenBSD"}\par
00479 \par
00480 {\cf21 #elif defined(__sun) || defined(sun)}\par
00481 {\cf21 # define PLATFORM_ID "SunOS"}\par
00482 \par
00483 {\cf21 #elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)}\par
00484 {\cf21 # define PLATFORM_ID "AIX"}\par
00485 \par
00486 {\cf21 #elif defined(__hpux) || defined(__hpux__)}\par
00487 {\cf21 # define PLATFORM_ID "HP-UX"}\par
00488 \par
00489 {\cf21 #elif defined(__HAIKU__)}\par
00490 {\cf21 # define PLATFORM_ID "Haiku"}\par
00491 \par
00492 {\cf21 #elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)}\par
00493 {\cf21 # define PLATFORM_ID "BeOS"}\par
00494 \par
00495 {\cf21 #elif defined(__QNX__) || defined(__QNXNTO__)}\par
00496 {\cf21 # define PLATFORM_ID "QNX"}\par
00497 \par
00498 {\cf21 #elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)}\par
00499 {\cf21 # define PLATFORM_ID "Tru64"}\par
00500 \par
00501 {\cf21 #elif defined(__riscos) || defined(__riscos__)}\par
00502 {\cf21 # define PLATFORM_ID "RISCos"}\par
00503 \par
00504 {\cf21 #elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)}\par
00505 {\cf21 # define PLATFORM_ID "SINIX"}\par
00506 \par
00507 {\cf21 #elif defined(__UNIX_SV__)}\par
00508 {\cf21 # define PLATFORM_ID "UNIX_SV"}\par
00509 \par
00510 {\cf21 #elif defined(__bsdos__)}\par
00511 {\cf21 # define PLATFORM_ID "BSDOS"}\par
00512 \par
00513 {\cf21 #elif defined(_MPRAS) || defined(MPRAS)}\par
00514 {\cf21 # define PLATFORM_ID "MP-RAS"}\par
00515 \par
00516 {\cf21 #elif defined(__osf) || defined(__osf__)}\par
00517 {\cf21 # define PLATFORM_ID "OSF1"}\par
00518 \par
00519 {\cf21 #elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)}\par
00520 {\cf21 # define PLATFORM_ID "SCO_SV"}\par
00521 \par
00522 {\cf21 #elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)}\par
00523 {\cf21 # define PLATFORM_ID "ULTRIX"}\par
00524 \par
00525 {\cf21 #elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)}\par
00526 {\cf21 # define PLATFORM_ID "Xenix"}\par
00527 \par
00528 {\cf21 #elif defined(__WATCOMC__)}\par
00529 {\cf21 # if defined(__LINUX__)}\par
00530 {\cf21 #  define PLATFORM_ID "Linux"}\par
00531 \par
00532 {\cf21 # elif defined(__DOS__)}\par
00533 {\cf21 #  define PLATFORM_ID "DOS"}\par
00534 \par
00535 {\cf21 # elif defined(__OS2__)}\par
00536 {\cf21 #  define PLATFORM_ID "OS2"}\par
00537 \par
00538 {\cf21 # elif defined(__WINDOWS__)}\par
00539 {\cf21 #  define PLATFORM_ID "Windows3x"}\par
00540 \par
00541 {\cf21 # elif defined(__VXWORKS__)}\par
00542 {\cf21 #  define PLATFORM_ID "VxWorks"}\par
00543 \par
00544 {\cf21 # else }{\cf20 /* unknown platform */}{\cf21 }\par
00545 {\cf21 #  define PLATFORM_ID}\par
00546 {\cf21 # endif}\par
00547 \par
00548 {\cf21 #elif defined(__INTEGRITY)}\par
00549 {\cf21 # if defined(INT_178B)}\par
00550 {\cf21 #  define PLATFORM_ID "Integrity178"}\par
00551 \par
00552 {\cf21 # else }{\cf20 /* regular Integrity */}{\cf21 }\par
00553 {\cf21 #  define PLATFORM_ID "Integrity"}\par
00554 {\cf21 # endif}\par
00555 \par
00556 {\cf21 # elif defined(_ADI_COMPILER)}\par
00557 {\cf21 #  define PLATFORM_ID "ADSP"}\par
00558 \par
00559 {\cf21 #else }{\cf20 /* unknown platform */}{\cf21 }\par
00560 {\cf21 # define PLATFORM_ID}\par
00561 \par
00562 {\cf21 #endif}\par
00563 \par
00564 {\cf20 /* For windows compilers MSVC and Intel we can determine}\par
00565 {\cf20    the architecture of the compiler being used.  This is because}\par
00566 {\cf20    the compilers do not have flags that can change the architecture,}\par
00567 {\cf20    but rather depend on which compiler is being used}\par
00568 {\cf20 */}\par
00569 {\cf21 #if defined(_WIN32) && defined(_MSC_VER)}\par
00570 {\cf21 # if defined(_M_IA64)}\par
00571 {\cf21 #  define ARCHITECTURE_ID "IA64"}\par
00572 \par
00573 {\cf21 # elif defined(_M_ARM64EC)}\par
00574 {\cf21 #  define ARCHITECTURE_ID "ARM64EC"}\par
00575 \par
00576 {\cf21 # elif defined(_M_X64) || defined(_M_AMD64)}\par
00577 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00578 \par
00579 {\cf21 # elif defined(_M_IX86)}\par
00580 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00581 \par
00582 {\cf21 # elif defined(_M_ARM64)}\par
00583 {\cf21 #  define ARCHITECTURE_ID "ARM64"}\par
00584 \par
00585 {\cf21 # elif defined(_M_ARM)}\par
00586 {\cf21 #  if _M_ARM == 4}\par
00587 {\cf21 #   define ARCHITECTURE_ID "ARMV4I"}\par
00588 {\cf21 #  elif _M_ARM == 5}\par
00589 {\cf21 #   define ARCHITECTURE_ID "ARMV5I"}\par
00590 {\cf21 #  else}\par
00591 {\cf21 #   define ARCHITECTURE_ID "ARMV"} STRINGIFY(_M_ARM)\par
00592 {\cf21 #  endif}\par
00593 \par
00594 {\cf21 # elif defined(_M_MIPS)}\par
00595 {\cf21 #  define ARCHITECTURE_ID "MIPS"}\par
00596 \par
00597 {\cf21 # elif defined(_M_SH)}\par
00598 {\cf21 #  define ARCHITECTURE_ID "SHx"}\par
00599 \par
00600 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00601 {\cf21 #  define ARCHITECTURE_ID ""}\par
00602 {\cf21 # endif}\par
00603 \par
00604 {\cf21 #elif defined(__WATCOMC__)}\par
00605 {\cf21 # if defined(_M_I86)}\par
00606 {\cf21 #  define ARCHITECTURE_ID "I86"}\par
00607 \par
00608 {\cf21 # elif defined(_M_IX86)}\par
00609 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00610 \par
00611 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00612 {\cf21 #  define ARCHITECTURE_ID ""}\par
00613 {\cf21 # endif}\par
00614 \par
00615 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00616 {\cf21 # if defined(__ICCARM__)}\par
00617 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00618 \par
00619 {\cf21 # elif defined(__ICCRX__)}\par
00620 {\cf21 #  define ARCHITECTURE_ID "RX"}\par
00621 \par
00622 {\cf21 # elif defined(__ICCRH850__)}\par
00623 {\cf21 #  define ARCHITECTURE_ID "RH850"}\par
00624 \par
00625 {\cf21 # elif defined(__ICCRL78__)}\par
00626 {\cf21 #  define ARCHITECTURE_ID "RL78"}\par
00627 \par
00628 {\cf21 # elif defined(__ICCRISCV__)}\par
00629 {\cf21 #  define ARCHITECTURE_ID "RISCV"}\par
00630 \par
00631 {\cf21 # elif defined(__ICCAVR__)}\par
00632 {\cf21 #  define ARCHITECTURE_ID "AVR"}\par
00633 \par
00634 {\cf21 # elif defined(__ICC430__)}\par
00635 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00636 \par
00637 {\cf21 # elif defined(__ICCV850__)}\par
00638 {\cf21 #  define ARCHITECTURE_ID "V850"}\par
00639 \par
00640 {\cf21 # elif defined(__ICC8051__)}\par
00641 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00642 \par
00643 {\cf21 # elif defined(__ICCSTM8__)}\par
00644 {\cf21 #  define ARCHITECTURE_ID "STM8"}\par
00645 \par
00646 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00647 {\cf21 #  define ARCHITECTURE_ID ""}\par
00648 {\cf21 # endif}\par
00649 \par
00650 {\cf21 #elif defined(__ghs__)}\par
00651 {\cf21 # if defined(__PPC64__)}\par
00652 {\cf21 #  define ARCHITECTURE_ID "PPC64"}\par
00653 \par
00654 {\cf21 # elif defined(__ppc__)}\par
00655 {\cf21 #  define ARCHITECTURE_ID "PPC"}\par
00656 \par
00657 {\cf21 # elif defined(__ARM__)}\par
00658 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00659 \par
00660 {\cf21 # elif defined(__x86_64__)}\par
00661 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00662 \par
00663 {\cf21 # elif defined(__i386__)}\par
00664 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00665 \par
00666 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00667 {\cf21 #  define ARCHITECTURE_ID ""}\par
00668 {\cf21 # endif}\par
00669 \par
00670 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00671 {\cf21 # if defined(__TI_ARM__)}\par
00672 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00673 \par
00674 {\cf21 # elif defined(__MSP430__)}\par
00675 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00676 \par
00677 {\cf21 # elif defined(__TMS320C28XX__)}\par
00678 {\cf21 #  define ARCHITECTURE_ID "TMS320C28x"}\par
00679 \par
00680 {\cf21 # elif defined(__TMS320C6X__) || defined(_TMS320C6X)}\par
00681 {\cf21 #  define ARCHITECTURE_ID "TMS320C6x"}\par
00682 \par
00683 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00684 {\cf21 #  define ARCHITECTURE_ID ""}\par
00685 {\cf21 # endif}\par
00686 \par
00687 {\cf21 # elif defined(__ADSPSHARC__)}\par
00688 {\cf21 #  define ARCHITECTURE_ID "SHARC"}\par
00689 \par
00690 {\cf21 # elif defined(__ADSPBLACKFIN__)}\par
00691 {\cf21 #  define ARCHITECTURE_ID "Blackfin"}\par
00692 \par
00693 {\cf21 #elif defined(__TASKING__)}\par
00694 \par
00695 {\cf21 # if defined(__CTC__) || defined(__CPTC__)}\par
00696 {\cf21 #  define ARCHITECTURE_ID "TriCore"}\par
00697 \par
00698 {\cf21 # elif defined(__CMCS__)}\par
00699 {\cf21 #  define ARCHITECTURE_ID "MCS"}\par
00700 \par
00701 {\cf21 # elif defined(__CARM__)}\par
00702 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00703 \par
00704 {\cf21 # elif defined(__CARC__)}\par
00705 {\cf21 #  define ARCHITECTURE_ID "ARC"}\par
00706 \par
00707 {\cf21 # elif defined(__C51__)}\par
00708 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00709 \par
00710 {\cf21 # elif defined(__CPCP__)}\par
00711 {\cf21 #  define ARCHITECTURE_ID "PCP"}\par
00712 \par
00713 {\cf21 # else}\par
00714 {\cf21 #  define ARCHITECTURE_ID ""}\par
00715 {\cf21 # endif}\par
00716 \par
00717 {\cf21 #else}\par
00718 {\cf21 #  define ARCHITECTURE_ID}\par
00719 {\cf21 #endif}\par
00720 \par
00721 {\cf20 /* Convert integer to decimal digit literals.  */}\par
00722 {\cf21 #define DEC(n)                   \\}\par
00723 {\cf21   ('0' + (((n) / 10000000)%10)), \\}\par
00724 {\cf21   ('0' + (((n) / 1000000)%10)),  \\}\par
00725 {\cf21   ('0' + (((n) / 100000)%10)),   \\}\par
00726 {\cf21   ('0' + (((n) / 10000)%10)),    \\}\par
00727 {\cf21   ('0' + (((n) / 1000)%10)),     \\}\par
00728 {\cf21   ('0' + (((n) / 100)%10)),      \\}\par
00729 {\cf21   ('0' + (((n) / 10)%10)),       \\}\par
00730 {\cf21   ('0' +  ((n) % 10))}\par
00731 \par
00732 {\cf20 /* Convert integer to hex digit literals.  */}\par
00733 {\cf21 #define HEX(n)             \\}\par
00734 {\cf21   ('0' + ((n)>>28 & 0xF)), \\}\par
00735 {\cf21   ('0' + ((n)>>24 & 0xF)), \\}\par
00736 {\cf21   ('0' + ((n)>>20 & 0xF)), \\}\par
00737 {\cf21   ('0' + ((n)>>16 & 0xF)), \\}\par
00738 {\cf21   ('0' + ((n)>>12 & 0xF)), \\}\par
00739 {\cf21   ('0' + ((n)>>8  & 0xF)), \\}\par
00740 {\cf21   ('0' + ((n)>>4  & 0xF)), \\}\par
00741 {\cf21   ('0' + ((n)     & 0xF))}\par
00742 \par
00743 {\cf20 /* Construct a string literal encoding the version number. */}\par
00744 {\cf21 #ifdef COMPILER_VERSION}\par
00745 {\cf18 char} {\cf17 const}* info_version = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version["} COMPILER_VERSION {\cf22 "]"};\par
00746 \par
00747 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00748 {\cf21 #elif defined(COMPILER_VERSION_MAJOR)}\par
00749 {\cf18 char} {\cf17 const} info_version[] = \{\par
00750   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00751   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00752   COMPILER_VERSION_MAJOR,\par
00753 {\cf21 # ifdef COMPILER_VERSION_MINOR}\par
00754   {\cf23 '.'}, COMPILER_VERSION_MINOR,\par
00755 {\cf21 #  ifdef COMPILER_VERSION_PATCH}\par
00756    {\cf23 '.'}, COMPILER_VERSION_PATCH,\par
00757 {\cf21 #   ifdef COMPILER_VERSION_TWEAK}\par
00758     {\cf23 '.'}, COMPILER_VERSION_TWEAK,\par
00759 {\cf21 #   endif}\par
00760 {\cf21 #  endif}\par
00761 {\cf21 # endif}\par
00762   {\cf23 ']'},{\cf23 '\\0'}\};\par
00763 {\cf21 #endif}\par
00764 \par
00765 {\cf20 /* Construct a string literal encoding the internal version number. */}\par
00766 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00767 {\cf18 char} {\cf17 const} info_version_internal[] = \{\par
00768   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00769   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '_'},\par
00770   {\cf23 'i'},{\cf23 'n'},{\cf23 't'},{\cf23 'e'},{\cf23 'r'},{\cf23 'n'},{\cf23 'a'},{\cf23 'l'},{\cf23 '['},\par
00771   COMPILER_VERSION_INTERNAL,{\cf23 ']'},{\cf23 '\\0'}\};\par
00772 {\cf21 #elif defined(COMPILER_VERSION_INTERNAL_STR)}\par
00773 {\cf18 char} {\cf17 const}* info_version_internal = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version_internal["} COMPILER_VERSION_INTERNAL_STR {\cf22 "]"};\par
00774 {\cf21 #endif}\par
00775 \par
00776 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00777 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00778 {\cf18 char} {\cf17 const} info_simulate_version[] = \{\par
00779   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00780   {\cf23 's'},{\cf23 'i'},{\cf23 'm'},{\cf23 'u'},{\cf23 'l'},{\cf23 'a'},{\cf23 't'},{\cf23 'e'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00781   SIMULATE_VERSION_MAJOR,\par
00782 {\cf21 # ifdef SIMULATE_VERSION_MINOR}\par
00783   {\cf23 '.'}, SIMULATE_VERSION_MINOR,\par
00784 {\cf21 #  ifdef SIMULATE_VERSION_PATCH}\par
00785    {\cf23 '.'}, SIMULATE_VERSION_PATCH,\par
00786 {\cf21 #   ifdef SIMULATE_VERSION_TWEAK}\par
00787     {\cf23 '.'}, SIMULATE_VERSION_TWEAK,\par
00788 {\cf21 #   endif}\par
00789 {\cf21 #  endif}\par
00790 {\cf21 # endif}\par
00791   {\cf23 ']'},{\cf23 '\\0'}\};\par
00792 {\cf21 #endif}\par
00793 \par
00794 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00795 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00796 {\cf20    because some compilers will just produce instructions to fill the}\par
00797 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00798 {\cf18 char} {\cf17 const}* info_platform = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "platform["} PLATFORM_ID {\cf22 "]"};\par
00799 {\cf18 char} {\cf17 const}* info_arch = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "arch["} ARCHITECTURE_ID {\cf22 "]"};\par
00800 \par
00801 \par
00802 \par
00803 {\cf21 #if !defined(__STDC__) && !defined(__clang__)}\par
00804 {\cf21 # if defined(_MSC_VER) || defined(__ibmxl__) || defined(__IBMC__)}\par
00805 {\cf21 #  define C_VERSION "90"}\par
00806 {\cf21 # else}\par
00807 {\cf21 #  define C_VERSION}\par
00808 {\cf21 # endif}\par
00809 {\cf21 #elif __STDC_VERSION__ > 201710L}\par
00810 {\cf21 # define C_VERSION "23"}\par
00811 {\cf21 #elif __STDC_VERSION__ >= 201710L}\par
00812 {\cf21 # define C_VERSION "17"}\par
00813 {\cf21 #elif __STDC_VERSION__ >= 201000L}\par
00814 {\cf21 # define C_VERSION "11"}\par
00815 {\cf21 #elif __STDC_VERSION__ >= 199901L}\par
00816 {\cf21 # define C_VERSION "99"}\par
00817 {\cf21 #else}\par
00818 {\cf21 # define C_VERSION "90"}\par
00819 {\cf21 #endif}\par
00820 {\cf17 const} {\cf18 char}* info_language_standard_default =\par
00821   {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["} C_VERSION {\cf22 "]"};\par
00822 \par
00823 {\cf17 const} {\cf18 char}* info_language_extensions_default = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
00824 {\cf21 #if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \\}\par
00825 {\cf21      defined(__TI_COMPILER_VERSION__)) &&                                     \\}\par
00826 {\cf21   !defined(__STRICT_ANSI__)}\par
00827   {\cf22 "ON"}\par
00828 {\cf21 #else}\par
00829   {\cf22 "OFF"}\par
00830 {\cf21 #endif}\par
00831 {\cf22 "]"};\par
00832 \par
00833 {\cf20 /*--------------------------------------------------------------------------*/}\par
00834 \par
00835 {\cf21 #ifdef ID_VOID_MAIN}\par
00836 {\cf18 void} main() \{\}\par
00837 {\cf21 #else}\par
00838 {\cf21 # if defined(__CLASSIC_C__)}\par
00839 {\cf18 int} main(argc, argv) {\cf18 int} argc; {\cf18 char} *argv[];\par
00840 {\cf21 # else}\par
00841 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
00842 {\cf21 # endif}\par
00843 \{\par
00844   {\cf18 int} require = 0;\par
00845   require += info_compiler[argc];\par
00846   require += info_platform[argc];\par
00847   require += info_arch[argc];\par
00848 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00849   require += info_version[argc];\par
00850 {\cf21 #endif}\par
00851 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00852   require += info_version_internal[argc];\par
00853 {\cf21 #endif}\par
00854 {\cf21 #ifdef SIMULATE_ID}\par
00855   require += info_simulate[argc];\par
00856 {\cf21 #endif}\par
00857 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00858   require += info_simulate_version[argc];\par
00859 {\cf21 #endif}\par
00860 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00861   require += info_cray[argc];\par
00862 {\cf21 #endif}\par
00863   require += info_language_standard_default[argc];\par
00864   require += info_language_extensions_default[argc];\par
00865   (void)argv;\par
00866   {\cf19 return} require;\par
00867 \}\par
00868 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB CMakeCXXCompilerId.cpp\par \pard\plain 
{\tc\tcl2 \v CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CXX_STD}\~ __cplusplus\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_standard_default}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_extensions_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 
{\xe \v __has_include\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\xe \v ARCHITECTURE_ID\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 703}}\par
}
{\xe \v COMPILER_ID\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 414}}\par
}
{\xe \v CXX_STD\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:CXX_STD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CXX_STD\~ __cplusplus}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 801}}\par
}
{\xe \v DEC\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 707}}\par
}
{\xe \v HEX\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 718}}\par
}
{\xe \v PLATFORM_ID\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 545}}\par
}
{\xe \v STRINGIFY\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 435}}\par
}
{\xe \v STRINGIFY_HELPER\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 434}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v main\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 832}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00833 \{\par
00834   {\cf18 int} require = 0;\par
00835   require += info_compiler[argc];\par
00836   require += info_platform[argc];\par
00837   require += info_arch[argc];\par
00838 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00839   require += info_version[argc];\par
00840 {\cf21 #endif}\par
00841 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00842   require += info_version_internal[argc];\par
00843 {\cf21 #endif}\par
00844 {\cf21 #ifdef SIMULATE_ID}\par
00845   require += info_simulate[argc];\par
00846 {\cf21 #endif}\par
00847 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00848   require += info_simulate_version[argc];\par
00849 {\cf21 #endif}\par
00850 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00851   require += info_cray[argc];\par
00852 {\cf21 #endif}\par
00853   require += info_language_standard_default[argc];\par
00854   require += info_language_extensions_default[argc];\par
00855   (void)argv;\par
00856   {\cf19 return} require;\par
00857 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v info_arch\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 784}}\par
}
{\xe \v info_compiler\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 421}}\par
}
{\xe \v info_language_extensions_default\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_language_extensions_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_extensions_default}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
\par
\par
\par
\par
\par
  {\cf22 "OFF"}\par
\par
{\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 820}}\par
}
{\xe \v info_language_standard_default\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_language_standard_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_standard_default}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["}\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
  {\cf22 "98"}\par
\par
{\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 804}}\par
}
{\xe \v info_platform\:cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 783}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmake-build-debug/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\par \pard\plain 
{\tc\tcl2 \v CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* This source file must have a .cpp extension so that all C++ compilers}\par
00002 {\cf20    recognize the extension without flags.  Borland does not know .cxx for}\par
00003 {\cf20    example.  */}\par
00004 {\cf21 #ifndef __cplusplus}\par
00005 {\cf21 # error "A C compiler has been selected for C++."}\par
00006 {\cf21 #endif}\par
00007 \par
00008 {\cf21 #if !defined(__has_include)}\par
00009 {\cf20 /* If the compiler does not have __has_include, pretend the answer is}\par
00010 {\cf20    always no.  */}\par
00011 {\cf21 #  define __has_include(x) 0}\par
00012 {\cf21 #endif}\par
00013 \par
00014 \par
00015 {\cf20 /* Version number components: V=Version, R=Revision, P=Patch}\par
00016 {\cf20    Version date components:   YYYY=Year, MM=Month,   DD=Day  */}\par
00017 \par
00018 {\cf21 #if defined(__COMO__)}\par
00019 {\cf21 # define COMPILER_ID "Comeau"}\par
00020   {\cf20 /* __COMO_VERSION__ = VRR */}\par
00021 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)}\par
00022 {\cf21 # define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)}\par
00023 \par
00024 {\cf21 #elif defined(__INTEL_COMPILER) || defined(__ICC)}\par
00025 {\cf21 # define COMPILER_ID "Intel"}\par
00026 {\cf21 # if defined(_MSC_VER)}\par
00027 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00028 {\cf21 # endif}\par
00029 {\cf21 # if defined(__GNUC__)}\par
00030 {\cf21 #  define SIMULATE_ID "GNU"}\par
00031 {\cf21 # endif}\par
00032   {\cf20 /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,}\par
00033 {\cf20      except that a few beta releases use the old format with V=2021.  */}\par
00034 {\cf21 # if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111}\par
00035 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)}\par
00036 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)}\par
00037 {\cf21 #  if defined(__INTEL_COMPILER_UPDATE)}\par
00038 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)}\par
00039 {\cf21 #  else}\par
00040 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)}\par
00041 {\cf21 #  endif}\par
00042 {\cf21 # else}\par
00043 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)}\par
00044 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)}\par
00045    {\cf20 /* The third version component from --version is an update index,}\par
00046 {\cf20       but no macro is provided for it.  */}\par
00047 {\cf21 #  define COMPILER_VERSION_PATCH DEC(0)}\par
00048 {\cf21 # endif}\par
00049 {\cf21 # if defined(__INTEL_COMPILER_BUILD_DATE)}\par
00050    {\cf20 /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */}\par
00051 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)}\par
00052 {\cf21 # endif}\par
00053 {\cf21 # if defined(_MSC_VER)}\par
00054    {\cf20 /* _MSC_VER = VVRR */}\par
00055 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00056 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00057 {\cf21 # endif}\par
00058 {\cf21 # if defined(__GNUC__)}\par
00059 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00060 {\cf21 # elif defined(__GNUG__)}\par
00061 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00062 {\cf21 # endif}\par
00063 {\cf21 # if defined(__GNUC_MINOR__)}\par
00064 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00065 {\cf21 # endif}\par
00066 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00067 {\cf21 #  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00068 {\cf21 # endif}\par
00069 \par
00070 {\cf21 #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)}\par
00071 {\cf21 # define COMPILER_ID "IntelLLVM"}\par
00072 {\cf21 #if defined(_MSC_VER)}\par
00073 {\cf21 # define SIMULATE_ID "MSVC"}\par
00074 {\cf21 #endif}\par
00075 {\cf21 #if defined(__GNUC__)}\par
00076 {\cf21 # define SIMULATE_ID "GNU"}\par
00077 {\cf21 #endif}\par
00078 {\cf20 /* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and}\par
00079 {\cf20  * later.  Look for 6 digit vs. 8 digit version number to decide encoding.}\par
00080 {\cf20  * VVVV is no smaller than the current year when a version is released.}\par
00081 {\cf20  */}\par
00082 {\cf21 #if __INTEL_LLVM_COMPILER < 1000000L}\par
00083 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)}\par
00084 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)}\par
00085 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)}\par
00086 {\cf21 #else}\par
00087 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)}\par
00088 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)}\par
00089 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)}\par
00090 {\cf21 #endif}\par
00091 {\cf21 #if defined(_MSC_VER)}\par
00092   {\cf20 /* _MSC_VER = VVRR */}\par
00093 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00094 {\cf21 # define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00095 {\cf21 #endif}\par
00096 {\cf21 #if defined(__GNUC__)}\par
00097 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00098 {\cf21 #elif defined(__GNUG__)}\par
00099 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00100 {\cf21 #endif}\par
00101 {\cf21 #if defined(__GNUC_MINOR__)}\par
00102 {\cf21 # define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00103 {\cf21 #endif}\par
00104 {\cf21 #if defined(__GNUC_PATCHLEVEL__)}\par
00105 {\cf21 # define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00106 {\cf21 #endif}\par
00107 \par
00108 {\cf21 #elif defined(__PATHCC__)}\par
00109 {\cf21 # define COMPILER_ID "PathScale"}\par
00110 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PATHCC__)}\par
00111 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)}\par
00112 {\cf21 # if defined(__PATHCC_PATCHLEVEL__)}\par
00113 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)}\par
00114 {\cf21 # endif}\par
00115 \par
00116 {\cf21 #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)}\par
00117 {\cf21 # define COMPILER_ID "Embarcadero"}\par
00118 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)}\par
00119 {\cf21 # define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)}\par
00120 {\cf21 # define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)}\par
00121 \par
00122 {\cf21 #elif defined(__BORLANDC__)}\par
00123 {\cf21 # define COMPILER_ID "Borland"}\par
00124   {\cf20 /* __BORLANDC__ = 0xVRR */}\par
00125 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)}\par
00126 {\cf21 # define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)}\par
00127 \par
00128 {\cf21 #elif defined(__WATCOMC__) && __WATCOMC__ < 1200}\par
00129 {\cf21 # define COMPILER_ID "Watcom"}\par
00130    {\cf20 /* __WATCOMC__ = VVRR */}\par
00131 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)}\par
00132 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00133 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00134 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00135 {\cf21 # endif}\par
00136 \par
00137 {\cf21 #elif defined(__WATCOMC__)}\par
00138 {\cf21 # define COMPILER_ID "OpenWatcom"}\par
00139    {\cf20 /* __WATCOMC__ = VVRP + 1100 */}\par
00140 {\cf21 # define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)}\par
00141 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00142 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00143 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00144 {\cf21 # endif}\par
00145 \par
00146 {\cf21 #elif defined(__SUNPRO_CC)}\par
00147 {\cf21 # define COMPILER_ID "SunPro"}\par
00148 {\cf21 # if __SUNPRO_CC >= 0x5100}\par
00149    {\cf20 /* __SUNPRO_CC = 0xVRRP */}\par
00150 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)}\par
00151 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)}\par
00152 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)}\par
00153 {\cf21 # else}\par
00154    {\cf20 /* __SUNPRO_CC = 0xVRP */}\par
00155 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)}\par
00156 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)}\par
00157 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)}\par
00158 {\cf21 # endif}\par
00159 \par
00160 {\cf21 #elif defined(__HP_aCC)}\par
00161 {\cf21 # define COMPILER_ID "HP"}\par
00162   {\cf20 /* __HP_aCC = VVRRPP */}\par
00163 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)}\par
00164 {\cf21 # define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)}\par
00165 {\cf21 # define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)}\par
00166 \par
00167 {\cf21 #elif defined(__DECCXX)}\par
00168 {\cf21 # define COMPILER_ID "Compaq"}\par
00169   {\cf20 /* __DECCXX_VER = VVRRTPPPP */}\par
00170 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)}\par
00171 {\cf21 # define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)}\par
00172 {\cf21 # define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)}\par
00173 \par
00174 {\cf21 #elif defined(__IBMCPP__) && defined(__COMPILER_VER__)}\par
00175 {\cf21 # define COMPILER_ID "zOS"}\par
00176   {\cf20 /* __IBMCPP__ = VRP */}\par
00177 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)}\par
00178 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)}\par
00179 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)}\par
00180 \par
00181 {\cf21 #elif defined(__open_xl__) && defined(__clang__)}\par
00182 {\cf21 # define COMPILER_ID "IBMClang"}\par
00183 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)}\par
00184 {\cf21 # define COMPILER_VERSION_MINOR DEC(__open_xl_release__)}\par
00185 {\cf21 # define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)}\par
00186 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)}\par
00187 \par
00188 \par
00189 {\cf21 #elif defined(__ibmxl__) && defined(__clang__)}\par
00190 {\cf21 # define COMPILER_ID "XLClang"}\par
00191 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)}\par
00192 {\cf21 # define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)}\par
00193 {\cf21 # define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)}\par
00194 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)}\par
00195 \par
00196 \par
00197 {\cf21 #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800}\par
00198 {\cf21 # define COMPILER_ID "XL"}\par
00199   {\cf20 /* __IBMCPP__ = VRP */}\par
00200 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)}\par
00201 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)}\par
00202 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)}\par
00203 \par
00204 {\cf21 #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800}\par
00205 {\cf21 # define COMPILER_ID "VisualAge"}\par
00206   {\cf20 /* __IBMCPP__ = VRP */}\par
00207 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)}\par
00208 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)}\par
00209 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)}\par
00210 \par
00211 {\cf21 #elif defined(__NVCOMPILER)}\par
00212 {\cf21 # define COMPILER_ID "NVHPC"}\par
00213 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)}\par
00214 {\cf21 # define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)}\par
00215 {\cf21 # if defined(__NVCOMPILER_PATCHLEVEL__)}\par
00216 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)}\par
00217 {\cf21 # endif}\par
00218 \par
00219 {\cf21 #elif defined(__PGI)}\par
00220 {\cf21 # define COMPILER_ID "PGI"}\par
00221 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PGIC__)}\par
00222 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)}\par
00223 {\cf21 # if defined(__PGIC_PATCHLEVEL__)}\par
00224 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)}\par
00225 {\cf21 # endif}\par
00226 \par
00227 {\cf21 #elif defined(_CRAYC)}\par
00228 {\cf21 # define COMPILER_ID "Cray"}\par
00229 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)}\par
00230 {\cf21 # define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)}\par
00231 \par
00232 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00233 {\cf21 # define COMPILER_ID "TI"}\par
00234   {\cf20 /* __TI_COMPILER_VERSION__ = VVVRRRPPP */}\par
00235 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)}\par
00236 {\cf21 # define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)}\par
00237 {\cf21 # define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)}\par
00238 \par
00239 {\cf21 #elif defined(__CLANG_FUJITSU)}\par
00240 {\cf21 # define COMPILER_ID "FujitsuClang"}\par
00241 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00242 {\cf21 # define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00243 {\cf21 # define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00244 {\cf21 # define COMPILER_VERSION_INTERNAL_STR __clang_version__}\par
00245 \par
00246 \par
00247 {\cf21 #elif defined(__FUJITSU)}\par
00248 {\cf21 # define COMPILER_ID "Fujitsu"}\par
00249 {\cf21 # if defined(__FCC_version__)}\par
00250 {\cf21 #   define COMPILER_VERSION __FCC_version__}\par
00251 {\cf21 # elif defined(__FCC_major__)}\par
00252 {\cf21 #   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00253 {\cf21 #   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00254 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00255 {\cf21 # endif}\par
00256 {\cf21 # if defined(__fcc_version)}\par
00257 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)}\par
00258 {\cf21 # elif defined(__FCC_VERSION)}\par
00259 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)}\par
00260 {\cf21 # endif}\par
00261 \par
00262 \par
00263 {\cf21 #elif defined(__ghs__)}\par
00264 {\cf21 # define COMPILER_ID "GHS"}\par
00265 {\cf20 /* __GHS_VERSION_NUMBER = VVVVRP */}\par
00266 {\cf21 # ifdef __GHS_VERSION_NUMBER}\par
00267 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)}\par
00268 {\cf21 # define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)}\par
00269 {\cf21 # define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)}\par
00270 {\cf21 # endif}\par
00271 \par
00272 {\cf21 #elif defined(__TASKING__)}\par
00273 {\cf21 # define COMPILER_ID "Tasking"}\par
00274 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)}\par
00275 {\cf21   # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)}\par
00276 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__VERSION__)}\par
00277 \par
00278 {\cf21 #elif defined(__SCO_VERSION__)}\par
00279 {\cf21 # define COMPILER_ID "SCO"}\par
00280 \par
00281 {\cf21 #elif defined(__ARMCC_VERSION) && !defined(__clang__)}\par
00282 {\cf21 # define COMPILER_ID "ARMCC"}\par
00283 {\cf21 #if __ARMCC_VERSION >= 1000000}\par
00284   {\cf20 /* __ARMCC_VERSION = VRRPPPP */}\par
00285 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)}\par
00286 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)}\par
00287 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)}\par
00288 {\cf21 #else}\par
00289   {\cf20 /* __ARMCC_VERSION = VRPPPP */}\par
00290 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)}\par
00291 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)}\par
00292 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)}\par
00293 {\cf21 #endif}\par
00294 \par
00295 \par
00296 {\cf21 #elif defined(__clang__) && defined(__apple_build_version__)}\par
00297 {\cf21 # define COMPILER_ID "AppleClang"}\par
00298 {\cf21 # if defined(_MSC_VER)}\par
00299 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00300 {\cf21 # endif}\par
00301 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00302 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00303 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00304 {\cf21 # if defined(_MSC_VER)}\par
00305    {\cf20 /* _MSC_VER = VVRR */}\par
00306 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00307 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00308 {\cf21 # endif}\par
00309 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)}\par
00310 \par
00311 {\cf21 #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)}\par
00312 {\cf21 # define COMPILER_ID "ARMClang"}\par
00313 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)}\par
00314 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)}\par
00315 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)}\par
00316 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)}\par
00317 \par
00318 {\cf21 #elif defined(__clang__)}\par
00319 {\cf21 # define COMPILER_ID "Clang"}\par
00320 {\cf21 # if defined(_MSC_VER)}\par
00321 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00322 {\cf21 # endif}\par
00323 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00324 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00325 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00326 {\cf21 # if defined(_MSC_VER)}\par
00327    {\cf20 /* _MSC_VER = VVRR */}\par
00328 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00329 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00330 {\cf21 # endif}\par
00331 \par
00332 {\cf21 #elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))}\par
00333 {\cf21 # define COMPILER_ID "LCC"}\par
00334 {\cf21 # define COMPILER_VERSION_MAJOR DEC(1)}\par
00335 {\cf21 # if defined(__LCC__)}\par
00336 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__LCC__- 100)}\par
00337 {\cf21 # endif}\par
00338 {\cf21 # if defined(__LCC_MINOR__)}\par
00339 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)}\par
00340 {\cf21 # endif}\par
00341 {\cf21 # if defined(__GNUC__) && defined(__GNUC_MINOR__)}\par
00342 {\cf21 #  define SIMULATE_ID "GNU"}\par
00343 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00344 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00345 {\cf21 #  if defined(__GNUC_PATCHLEVEL__)}\par
00346 {\cf21 #   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00347 {\cf21 #  endif}\par
00348 {\cf21 # endif}\par
00349 \par
00350 {\cf21 #elif defined(__GNUC__) || defined(__GNUG__)}\par
00351 {\cf21 # define COMPILER_ID "GNU"}\par
00352 {\cf21 # if defined(__GNUC__)}\par
00353 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__GNUC__)}\par
00354 {\cf21 # else}\par
00355 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__GNUG__)}\par
00356 {\cf21 # endif}\par
00357 {\cf21 # if defined(__GNUC_MINOR__)}\par
00358 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00359 {\cf21 # endif}\par
00360 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00361 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00362 {\cf21 # endif}\par
00363 \par
00364 {\cf21 #elif defined(_MSC_VER)}\par
00365 {\cf21 # define COMPILER_ID "MSVC"}\par
00366   {\cf20 /* _MSC_VER = VVRR */}\par
00367 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00368 {\cf21 # define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00369 {\cf21 # if defined(_MSC_FULL_VER)}\par
00370 {\cf21 #  if _MSC_VER >= 1400}\par
00371     {\cf20 /* _MSC_FULL_VER = VVRRPPPPP */}\par
00372 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)}\par
00373 {\cf21 #  else}\par
00374     {\cf20 /* _MSC_FULL_VER = VVRRPPPP */}\par
00375 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)}\par
00376 {\cf21 #  endif}\par
00377 {\cf21 # endif}\par
00378 {\cf21 # if defined(_MSC_BUILD)}\par
00379 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)}\par
00380 {\cf21 # endif}\par
00381 \par
00382 {\cf21 #elif defined(_ADI_COMPILER)}\par
00383 {\cf21 # define COMPILER_ID "ADSP"}\par
00384 {\cf21 #if defined(__VERSIONNUM__)}\par
00385   {\cf20 /* __VERSIONNUM__ = 0xVVRRPPTT */}\par
00386 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)}\par
00387 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)}\par
00388 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)}\par
00389 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)}\par
00390 {\cf21 #endif}\par
00391 \par
00392 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00393 {\cf21 # define COMPILER_ID "IAR"}\par
00394 {\cf21 # if defined(__VER__) && defined(__ICCARM__)}\par
00395 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)}\par
00396 {\cf21 #  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)}\par
00397 {\cf21 #  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)}\par
00398 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00399 {\cf21 # elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))}\par
00400 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)}\par
00401 {\cf21 #  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))}\par
00402 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)}\par
00403 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00404 {\cf21 # endif}\par
00405 \par
00406 \par
00407 {\cf20 /* These compilers are either not known or too old to define an}\par
00408 {\cf20   identification macro.  Try to identify the platform and guess that}\par
00409 {\cf20   it is the native compiler.  */}\par
00410 {\cf21 #elif defined(__hpux) || defined(__hpua)}\par
00411 {\cf21 # define COMPILER_ID "HP"}\par
00412 \par
00413 {\cf21 #else }{\cf20 /* unknown compiler */}{\cf21 }\par
00414 {\cf21 # define COMPILER_ID ""}\par
00415 {\cf21 #endif}\par
00416 \par
00417 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00418 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00419 {\cf20    because some compilers will just produce instructions to fill the}\par
00420 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00421 {\cf18 char} {\cf17 const}* info_compiler = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler["} COMPILER_ID {\cf22 "]"};\par
00422 {\cf21 #ifdef SIMULATE_ID}\par
00423 {\cf18 char} {\cf17 const}* info_simulate = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "simulate["} SIMULATE_ID {\cf22 "]"};\par
00424 {\cf21 #endif}\par
00425 \par
00426 {\cf21 #ifdef __QNXNTO__}\par
00427 {\cf18 char} {\cf17 const}* qnxnto = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "qnxnto[]"};\par
00428 {\cf21 #endif}\par
00429 \par
00430 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00431 {\cf18 char} {\cf17 const} *info_cray = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_wrapper[CrayPrgEnv]"};\par
00432 {\cf21 #endif}\par
00433 \par
00434 {\cf21 #define STRINGIFY_HELPER(X) #X}\par
00435 {\cf21 #define STRINGIFY(X) STRINGIFY_HELPER(X)}\par
00436 \par
00437 {\cf20 /* Identify known platforms by name.  */}\par
00438 {\cf21 #if defined(__linux) || defined(__linux__) || defined(linux)}\par
00439 {\cf21 # define PLATFORM_ID "Linux"}\par
00440 \par
00441 {\cf21 #elif defined(__MSYS__)}\par
00442 {\cf21 # define PLATFORM_ID "MSYS"}\par
00443 \par
00444 {\cf21 #elif defined(__CYGWIN__)}\par
00445 {\cf21 # define PLATFORM_ID "Cygwin"}\par
00446 \par
00447 {\cf21 #elif defined(__MINGW32__)}\par
00448 {\cf21 # define PLATFORM_ID "MinGW"}\par
00449 \par
00450 {\cf21 #elif defined(__APPLE__)}\par
00451 {\cf21 # define PLATFORM_ID "Darwin"}\par
00452 \par
00453 {\cf21 #elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)}\par
00454 {\cf21 # define PLATFORM_ID "Windows"}\par
00455 \par
00456 {\cf21 #elif defined(__FreeBSD__) || defined(__FreeBSD)}\par
00457 {\cf21 # define PLATFORM_ID "FreeBSD"}\par
00458 \par
00459 {\cf21 #elif defined(__NetBSD__) || defined(__NetBSD)}\par
00460 {\cf21 # define PLATFORM_ID "NetBSD"}\par
00461 \par
00462 {\cf21 #elif defined(__OpenBSD__) || defined(__OPENBSD)}\par
00463 {\cf21 # define PLATFORM_ID "OpenBSD"}\par
00464 \par
00465 {\cf21 #elif defined(__sun) || defined(sun)}\par
00466 {\cf21 # define PLATFORM_ID "SunOS"}\par
00467 \par
00468 {\cf21 #elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)}\par
00469 {\cf21 # define PLATFORM_ID "AIX"}\par
00470 \par
00471 {\cf21 #elif defined(__hpux) || defined(__hpux__)}\par
00472 {\cf21 # define PLATFORM_ID "HP-UX"}\par
00473 \par
00474 {\cf21 #elif defined(__HAIKU__)}\par
00475 {\cf21 # define PLATFORM_ID "Haiku"}\par
00476 \par
00477 {\cf21 #elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)}\par
00478 {\cf21 # define PLATFORM_ID "BeOS"}\par
00479 \par
00480 {\cf21 #elif defined(__QNX__) || defined(__QNXNTO__)}\par
00481 {\cf21 # define PLATFORM_ID "QNX"}\par
00482 \par
00483 {\cf21 #elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)}\par
00484 {\cf21 # define PLATFORM_ID "Tru64"}\par
00485 \par
00486 {\cf21 #elif defined(__riscos) || defined(__riscos__)}\par
00487 {\cf21 # define PLATFORM_ID "RISCos"}\par
00488 \par
00489 {\cf21 #elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)}\par
00490 {\cf21 # define PLATFORM_ID "SINIX"}\par
00491 \par
00492 {\cf21 #elif defined(__UNIX_SV__)}\par
00493 {\cf21 # define PLATFORM_ID "UNIX_SV"}\par
00494 \par
00495 {\cf21 #elif defined(__bsdos__)}\par
00496 {\cf21 # define PLATFORM_ID "BSDOS"}\par
00497 \par
00498 {\cf21 #elif defined(_MPRAS) || defined(MPRAS)}\par
00499 {\cf21 # define PLATFORM_ID "MP-RAS"}\par
00500 \par
00501 {\cf21 #elif defined(__osf) || defined(__osf__)}\par
00502 {\cf21 # define PLATFORM_ID "OSF1"}\par
00503 \par
00504 {\cf21 #elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)}\par
00505 {\cf21 # define PLATFORM_ID "SCO_SV"}\par
00506 \par
00507 {\cf21 #elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)}\par
00508 {\cf21 # define PLATFORM_ID "ULTRIX"}\par
00509 \par
00510 {\cf21 #elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)}\par
00511 {\cf21 # define PLATFORM_ID "Xenix"}\par
00512 \par
00513 {\cf21 #elif defined(__WATCOMC__)}\par
00514 {\cf21 # if defined(__LINUX__)}\par
00515 {\cf21 #  define PLATFORM_ID "Linux"}\par
00516 \par
00517 {\cf21 # elif defined(__DOS__)}\par
00518 {\cf21 #  define PLATFORM_ID "DOS"}\par
00519 \par
00520 {\cf21 # elif defined(__OS2__)}\par
00521 {\cf21 #  define PLATFORM_ID "OS2"}\par
00522 \par
00523 {\cf21 # elif defined(__WINDOWS__)}\par
00524 {\cf21 #  define PLATFORM_ID "Windows3x"}\par
00525 \par
00526 {\cf21 # elif defined(__VXWORKS__)}\par
00527 {\cf21 #  define PLATFORM_ID "VxWorks"}\par
00528 \par
00529 {\cf21 # else }{\cf20 /* unknown platform */}{\cf21 }\par
00530 {\cf21 #  define PLATFORM_ID}\par
00531 {\cf21 # endif}\par
00532 \par
00533 {\cf21 #elif defined(__INTEGRITY)}\par
00534 {\cf21 # if defined(INT_178B)}\par
00535 {\cf21 #  define PLATFORM_ID "Integrity178"}\par
00536 \par
00537 {\cf21 # else }{\cf20 /* regular Integrity */}{\cf21 }\par
00538 {\cf21 #  define PLATFORM_ID "Integrity"}\par
00539 {\cf21 # endif}\par
00540 \par
00541 {\cf21 # elif defined(_ADI_COMPILER)}\par
00542 {\cf21 #  define PLATFORM_ID "ADSP"}\par
00543 \par
00544 {\cf21 #else }{\cf20 /* unknown platform */}{\cf21 }\par
00545 {\cf21 # define PLATFORM_ID}\par
00546 \par
00547 {\cf21 #endif}\par
00548 \par
00549 {\cf20 /* For windows compilers MSVC and Intel we can determine}\par
00550 {\cf20    the architecture of the compiler being used.  This is because}\par
00551 {\cf20    the compilers do not have flags that can change the architecture,}\par
00552 {\cf20    but rather depend on which compiler is being used}\par
00553 {\cf20 */}\par
00554 {\cf21 #if defined(_WIN32) && defined(_MSC_VER)}\par
00555 {\cf21 # if defined(_M_IA64)}\par
00556 {\cf21 #  define ARCHITECTURE_ID "IA64"}\par
00557 \par
00558 {\cf21 # elif defined(_M_ARM64EC)}\par
00559 {\cf21 #  define ARCHITECTURE_ID "ARM64EC"}\par
00560 \par
00561 {\cf21 # elif defined(_M_X64) || defined(_M_AMD64)}\par
00562 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00563 \par
00564 {\cf21 # elif defined(_M_IX86)}\par
00565 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00566 \par
00567 {\cf21 # elif defined(_M_ARM64)}\par
00568 {\cf21 #  define ARCHITECTURE_ID "ARM64"}\par
00569 \par
00570 {\cf21 # elif defined(_M_ARM)}\par
00571 {\cf21 #  if _M_ARM == 4}\par
00572 {\cf21 #   define ARCHITECTURE_ID "ARMV4I"}\par
00573 {\cf21 #  elif _M_ARM == 5}\par
00574 {\cf21 #   define ARCHITECTURE_ID "ARMV5I"}\par
00575 {\cf21 #  else}\par
00576 {\cf21 #   define ARCHITECTURE_ID "ARMV"} STRINGIFY(_M_ARM)\par
00577 {\cf21 #  endif}\par
00578 \par
00579 {\cf21 # elif defined(_M_MIPS)}\par
00580 {\cf21 #  define ARCHITECTURE_ID "MIPS"}\par
00581 \par
00582 {\cf21 # elif defined(_M_SH)}\par
00583 {\cf21 #  define ARCHITECTURE_ID "SHx"}\par
00584 \par
00585 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00586 {\cf21 #  define ARCHITECTURE_ID ""}\par
00587 {\cf21 # endif}\par
00588 \par
00589 {\cf21 #elif defined(__WATCOMC__)}\par
00590 {\cf21 # if defined(_M_I86)}\par
00591 {\cf21 #  define ARCHITECTURE_ID "I86"}\par
00592 \par
00593 {\cf21 # elif defined(_M_IX86)}\par
00594 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00595 \par
00596 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00597 {\cf21 #  define ARCHITECTURE_ID ""}\par
00598 {\cf21 # endif}\par
00599 \par
00600 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00601 {\cf21 # if defined(__ICCARM__)}\par
00602 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00603 \par
00604 {\cf21 # elif defined(__ICCRX__)}\par
00605 {\cf21 #  define ARCHITECTURE_ID "RX"}\par
00606 \par
00607 {\cf21 # elif defined(__ICCRH850__)}\par
00608 {\cf21 #  define ARCHITECTURE_ID "RH850"}\par
00609 \par
00610 {\cf21 # elif defined(__ICCRL78__)}\par
00611 {\cf21 #  define ARCHITECTURE_ID "RL78"}\par
00612 \par
00613 {\cf21 # elif defined(__ICCRISCV__)}\par
00614 {\cf21 #  define ARCHITECTURE_ID "RISCV"}\par
00615 \par
00616 {\cf21 # elif defined(__ICCAVR__)}\par
00617 {\cf21 #  define ARCHITECTURE_ID "AVR"}\par
00618 \par
00619 {\cf21 # elif defined(__ICC430__)}\par
00620 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00621 \par
00622 {\cf21 # elif defined(__ICCV850__)}\par
00623 {\cf21 #  define ARCHITECTURE_ID "V850"}\par
00624 \par
00625 {\cf21 # elif defined(__ICC8051__)}\par
00626 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00627 \par
00628 {\cf21 # elif defined(__ICCSTM8__)}\par
00629 {\cf21 #  define ARCHITECTURE_ID "STM8"}\par
00630 \par
00631 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00632 {\cf21 #  define ARCHITECTURE_ID ""}\par
00633 {\cf21 # endif}\par
00634 \par
00635 {\cf21 #elif defined(__ghs__)}\par
00636 {\cf21 # if defined(__PPC64__)}\par
00637 {\cf21 #  define ARCHITECTURE_ID "PPC64"}\par
00638 \par
00639 {\cf21 # elif defined(__ppc__)}\par
00640 {\cf21 #  define ARCHITECTURE_ID "PPC"}\par
00641 \par
00642 {\cf21 # elif defined(__ARM__)}\par
00643 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00644 \par
00645 {\cf21 # elif defined(__x86_64__)}\par
00646 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00647 \par
00648 {\cf21 # elif defined(__i386__)}\par
00649 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00650 \par
00651 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00652 {\cf21 #  define ARCHITECTURE_ID ""}\par
00653 {\cf21 # endif}\par
00654 \par
00655 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00656 {\cf21 # if defined(__TI_ARM__)}\par
00657 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00658 \par
00659 {\cf21 # elif defined(__MSP430__)}\par
00660 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00661 \par
00662 {\cf21 # elif defined(__TMS320C28XX__)}\par
00663 {\cf21 #  define ARCHITECTURE_ID "TMS320C28x"}\par
00664 \par
00665 {\cf21 # elif defined(__TMS320C6X__) || defined(_TMS320C6X)}\par
00666 {\cf21 #  define ARCHITECTURE_ID "TMS320C6x"}\par
00667 \par
00668 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00669 {\cf21 #  define ARCHITECTURE_ID ""}\par
00670 {\cf21 # endif}\par
00671 \par
00672 {\cf21 # elif defined(__ADSPSHARC__)}\par
00673 {\cf21 #  define ARCHITECTURE_ID "SHARC"}\par
00674 \par
00675 {\cf21 # elif defined(__ADSPBLACKFIN__)}\par
00676 {\cf21 #  define ARCHITECTURE_ID "Blackfin"}\par
00677 \par
00678 {\cf21 #elif defined(__TASKING__)}\par
00679 \par
00680 {\cf21 # if defined(__CTC__) || defined(__CPTC__)}\par
00681 {\cf21 #  define ARCHITECTURE_ID "TriCore"}\par
00682 \par
00683 {\cf21 # elif defined(__CMCS__)}\par
00684 {\cf21 #  define ARCHITECTURE_ID "MCS"}\par
00685 \par
00686 {\cf21 # elif defined(__CARM__)}\par
00687 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00688 \par
00689 {\cf21 # elif defined(__CARC__)}\par
00690 {\cf21 #  define ARCHITECTURE_ID "ARC"}\par
00691 \par
00692 {\cf21 # elif defined(__C51__)}\par
00693 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00694 \par
00695 {\cf21 # elif defined(__CPCP__)}\par
00696 {\cf21 #  define ARCHITECTURE_ID "PCP"}\par
00697 \par
00698 {\cf21 # else}\par
00699 {\cf21 #  define ARCHITECTURE_ID ""}\par
00700 {\cf21 # endif}\par
00701 \par
00702 {\cf21 #else}\par
00703 {\cf21 #  define ARCHITECTURE_ID}\par
00704 {\cf21 #endif}\par
00705 \par
00706 {\cf20 /* Convert integer to decimal digit literals.  */}\par
00707 {\cf21 #define DEC(n)                   \\}\par
00708 {\cf21   ('0' + (((n) / 10000000)%10)), \\}\par
00709 {\cf21   ('0' + (((n) / 1000000)%10)),  \\}\par
00710 {\cf21   ('0' + (((n) / 100000)%10)),   \\}\par
00711 {\cf21   ('0' + (((n) / 10000)%10)),    \\}\par
00712 {\cf21   ('0' + (((n) / 1000)%10)),     \\}\par
00713 {\cf21   ('0' + (((n) / 100)%10)),      \\}\par
00714 {\cf21   ('0' + (((n) / 10)%10)),       \\}\par
00715 {\cf21   ('0' +  ((n) % 10))}\par
00716 \par
00717 {\cf20 /* Convert integer to hex digit literals.  */}\par
00718 {\cf21 #define HEX(n)             \\}\par
00719 {\cf21   ('0' + ((n)>>28 & 0xF)), \\}\par
00720 {\cf21   ('0' + ((n)>>24 & 0xF)), \\}\par
00721 {\cf21   ('0' + ((n)>>20 & 0xF)), \\}\par
00722 {\cf21   ('0' + ((n)>>16 & 0xF)), \\}\par
00723 {\cf21   ('0' + ((n)>>12 & 0xF)), \\}\par
00724 {\cf21   ('0' + ((n)>>8  & 0xF)), \\}\par
00725 {\cf21   ('0' + ((n)>>4  & 0xF)), \\}\par
00726 {\cf21   ('0' + ((n)     & 0xF))}\par
00727 \par
00728 {\cf20 /* Construct a string literal encoding the version number. */}\par
00729 {\cf21 #ifdef COMPILER_VERSION}\par
00730 {\cf18 char} {\cf17 const}* info_version = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version["} COMPILER_VERSION {\cf22 "]"};\par
00731 \par
00732 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00733 {\cf21 #elif defined(COMPILER_VERSION_MAJOR)}\par
00734 {\cf18 char} {\cf17 const} info_version[] = \{\par
00735   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00736   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00737   COMPILER_VERSION_MAJOR,\par
00738 {\cf21 # ifdef COMPILER_VERSION_MINOR}\par
00739   {\cf23 '.'}, COMPILER_VERSION_MINOR,\par
00740 {\cf21 #  ifdef COMPILER_VERSION_PATCH}\par
00741    {\cf23 '.'}, COMPILER_VERSION_PATCH,\par
00742 {\cf21 #   ifdef COMPILER_VERSION_TWEAK}\par
00743     {\cf23 '.'}, COMPILER_VERSION_TWEAK,\par
00744 {\cf21 #   endif}\par
00745 {\cf21 #  endif}\par
00746 {\cf21 # endif}\par
00747   {\cf23 ']'},{\cf23 '\\0'}\};\par
00748 {\cf21 #endif}\par
00749 \par
00750 {\cf20 /* Construct a string literal encoding the internal version number. */}\par
00751 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00752 {\cf18 char} {\cf17 const} info_version_internal[] = \{\par
00753   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00754   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '_'},\par
00755   {\cf23 'i'},{\cf23 'n'},{\cf23 't'},{\cf23 'e'},{\cf23 'r'},{\cf23 'n'},{\cf23 'a'},{\cf23 'l'},{\cf23 '['},\par
00756   COMPILER_VERSION_INTERNAL,{\cf23 ']'},{\cf23 '\\0'}\};\par
00757 {\cf21 #elif defined(COMPILER_VERSION_INTERNAL_STR)}\par
00758 {\cf18 char} {\cf17 const}* info_version_internal = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version_internal["} COMPILER_VERSION_INTERNAL_STR {\cf22 "]"};\par
00759 {\cf21 #endif}\par
00760 \par
00761 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00762 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00763 {\cf18 char} {\cf17 const} info_simulate_version[] = \{\par
00764   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00765   {\cf23 's'},{\cf23 'i'},{\cf23 'm'},{\cf23 'u'},{\cf23 'l'},{\cf23 'a'},{\cf23 't'},{\cf23 'e'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00766   SIMULATE_VERSION_MAJOR,\par
00767 {\cf21 # ifdef SIMULATE_VERSION_MINOR}\par
00768   {\cf23 '.'}, SIMULATE_VERSION_MINOR,\par
00769 {\cf21 #  ifdef SIMULATE_VERSION_PATCH}\par
00770    {\cf23 '.'}, SIMULATE_VERSION_PATCH,\par
00771 {\cf21 #   ifdef SIMULATE_VERSION_TWEAK}\par
00772     {\cf23 '.'}, SIMULATE_VERSION_TWEAK,\par
00773 {\cf21 #   endif}\par
00774 {\cf21 #  endif}\par
00775 {\cf21 # endif}\par
00776   {\cf23 ']'},{\cf23 '\\0'}\};\par
00777 {\cf21 #endif}\par
00778 \par
00779 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00780 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00781 {\cf20    because some compilers will just produce instructions to fill the}\par
00782 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00783 {\cf18 char} {\cf17 const}* info_platform = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "platform["} PLATFORM_ID {\cf22 "]"};\par
00784 {\cf18 char} {\cf17 const}* info_arch = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "arch["} ARCHITECTURE_ID {\cf22 "]"};\par
00785 \par
00786 \par
00787 \par
00788 {\cf21 #if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L}\par
00789 {\cf21 #  if defined(__INTEL_CXX11_MODE__)}\par
00790 {\cf21 #    if defined(__cpp_aggregate_nsdmi)}\par
00791 {\cf21 #      define CXX_STD 201402L}\par
00792 {\cf21 #    else}\par
00793 {\cf21 #      define CXX_STD 201103L}\par
00794 {\cf21 #    endif}\par
00795 {\cf21 #  else}\par
00796 {\cf21 #    define CXX_STD 199711L}\par
00797 {\cf21 #  endif}\par
00798 {\cf21 #elif defined(_MSC_VER) && defined(_MSVC_LANG)}\par
00799 {\cf21 #  define CXX_STD _MSVC_LANG}\par
00800 {\cf21 #else}\par
00801 {\cf21 #  define CXX_STD __cplusplus}\par
00802 {\cf21 #endif}\par
00803 \par
00804 {\cf17 const} {\cf18 char}* info_language_standard_default = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["}\par
00805 {\cf21 #if CXX_STD > 202002L}\par
00806   {\cf22 "23"}\par
00807 {\cf21 #elif CXX_STD > 201703L}\par
00808   {\cf22 "20"}\par
00809 {\cf21 #elif CXX_STD >= 201703L}\par
00810   {\cf22 "17"}\par
00811 {\cf21 #elif CXX_STD >= 201402L}\par
00812   {\cf22 "14"}\par
00813 {\cf21 #elif CXX_STD >= 201103L}\par
00814   {\cf22 "11"}\par
00815 {\cf21 #else}\par
00816   {\cf22 "98"}\par
00817 {\cf21 #endif}\par
00818 {\cf22 "]"};\par
00819 \par
00820 {\cf17 const} {\cf18 char}* info_language_extensions_default = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
00821 {\cf21 #if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \\}\par
00822 {\cf21      defined(__TI_COMPILER_VERSION__)) &&                                     \\}\par
00823 {\cf21   !defined(__STRICT_ANSI__)}\par
00824   {\cf22 "ON"}\par
00825 {\cf21 #else}\par
00826   {\cf22 "OFF"}\par
00827 {\cf21 #endif}\par
00828 {\cf22 "]"};\par
00829 \par
00830 {\cf20 /*--------------------------------------------------------------------------*/}\par
00831 \par
00832 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
00833 \{\par
00834   {\cf18 int} require = 0;\par
00835   require += info_compiler[argc];\par
00836   require += info_platform[argc];\par
00837   require += info_arch[argc];\par
00838 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00839   require += info_version[argc];\par
00840 {\cf21 #endif}\par
00841 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00842   require += info_version_internal[argc];\par
00843 {\cf21 #endif}\par
00844 {\cf21 #ifdef SIMULATE_ID}\par
00845   require += info_simulate[argc];\par
00846 {\cf21 #endif}\par
00847 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00848   require += info_simulate_version[argc];\par
00849 {\cf21 #endif}\par
00850 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00851   require += info_cray[argc];\par
00852 {\cf21 #endif}\par
00853   require += info_language_standard_default[argc];\par
00854   require += info_language_extensions_default[argc];\par
00855   (void)argv;\par
00856   {\cf19 return} require;\par
00857 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB CMakeCXXCompilerId.cpp\par \pard\plain 
{\tc\tcl2 \v CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b __has_include}(x)\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COMPILER_ID}\~ ""\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY_HELPER}(X)\~ #X\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRINGIFY}(X)\~ {\b STRINGIFY_HELPER}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLATFORM_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARCHITECTURE_ID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEC}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HEX}(n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CXX_STD}\~ __cplusplus\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_compiler} = "INFO" ":" "compiler[" COMPILER_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_platform} = "INFO" ":" "platform[" PLATFORM_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const  * {\b info_arch} = "INFO" ":" "arch[" ARCHITECTURE_ID "]"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_standard_default}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b info_language_extensions_default}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CC\'E0\'EA\'F0\'EE\'F1\'FB\par
\pard\plain 
{\xe \v __has_include\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:__has_include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define __has_include( x)\~ 0}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
}
{\xe \v ARCHITECTURE_ID\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:ARCHITECTURE_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARCHITECTURE_ID}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 703}}\par
}
{\xe \v COMPILER_ID\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:COMPILER_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COMPILER_ID\~ ""}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 414}}\par
}
{\xe \v CXX_STD\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:CXX_STD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CXX_STD\~ __cplusplus}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 801}}\par
}
{\xe \v DEC\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:DEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEC( n)}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + (((n) / 10000000)%10)), \\\par
  ({\cf23 '0'} + (((n) / 1000000)%10)),  \\\par
  ({\cf23 '0'} + (((n) / 100000)%10)),   \\\par
  ({\cf23 '0'} + (((n) / 10000)%10)),    \\\par
  ({\cf23 '0'} + (((n) / 1000)%10)),     \\\par
  ({\cf23 '0'} + (((n) / 100)%10)),      \\\par
  ({\cf23 '0'} + (((n) / 10)%10)),       \\\par
  ({\cf23 '0'} +  ((n) % 10))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 707}}\par
}
{\xe \v HEX\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:HEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HEX( n)}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'CC\'E0\'EA\'F0\'EE\'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ({\cf23 '0'} + ((n)>>28 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>24 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>20 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>16 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>12 & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>8  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)>>4  & 0xF)), \\\par
  ({\cf23 '0'} + ((n)     & 0xF))\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 718}}\par
}
{\xe \v PLATFORM_ID\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:PLATFORM_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLATFORM_ID}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 545}}\par
}
{\xe \v STRINGIFY\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:STRINGIFY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY( X)\~ {\b STRINGIFY_HELPER}(X)}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 435}}\par
}
{\xe \v STRINGIFY_HELPER\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:STRINGIFY_HELPER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRINGIFY_HELPER( X)\~ #X}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 434}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v main\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 832}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00833 \{\par
00834   {\cf18 int} require = 0;\par
00835   require += info_compiler[argc];\par
00836   require += info_platform[argc];\par
00837   require += info_arch[argc];\par
00838 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00839   require += info_version[argc];\par
00840 {\cf21 #endif}\par
00841 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00842   require += info_version_internal[argc];\par
00843 {\cf21 #endif}\par
00844 {\cf21 #ifdef SIMULATE_ID}\par
00845   require += info_simulate[argc];\par
00846 {\cf21 #endif}\par
00847 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00848   require += info_simulate_version[argc];\par
00849 {\cf21 #endif}\par
00850 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00851   require += info_cray[argc];\par
00852 {\cf21 #endif}\par
00853   require += info_language_standard_default[argc];\par
00854   require += info_language_extensions_default[argc];\par
00855   (void)argv;\par
00856   {\cf19 return} require;\par
00857 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'E5\'F0\'E5\'EC\'E5\'ED\'ED\'FB\'E5\par
\pard\plain 
{\xe \v info_arch\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_arch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]"}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 784}}\par
}
{\xe \v info_compiler\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]"}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 421}}\par
}
{\xe \v info_language_extensions_default\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_language_extensions_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_extensions_default}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
\par
\par
\par
\par
\par
  {\cf22 "OFF"}\par
\par
{\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 820}}\par
}
{\xe \v info_language_standard_default\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_language_standard_default}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* info_language_standard_default}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'C8\'ED\'E8\'F6\'E8\'E0\'EB\'E8\'E7\'E0\'F2\'EE\'F0}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["}\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
\par
  {\cf22 "98"}\par
\par
{\cf22 "]"}\par
}
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 804}}\par
}
{\xe \v info_platform\:cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp}
{\xe \v cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\:info_platform}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]"}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 783}}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cmake-build-minsizerel/CMakeFiles/3.25.2/CompilerIdCXX/CMakeCXXCompilerId.cpp\par \pard\plain 
{\tc\tcl2 \v CMakeCXXCompilerId.cpp}
{\xe \v CMakeCXXCompilerId.cpp}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* This source file must have a .cpp extension so that all C++ compilers}\par
00002 {\cf20    recognize the extension without flags.  Borland does not know .cxx for}\par
00003 {\cf20    example.  */}\par
00004 {\cf21 #ifndef __cplusplus}\par
00005 {\cf21 # error "A C compiler has been selected for C++."}\par
00006 {\cf21 #endif}\par
00007 \par
00008 {\cf21 #if !defined(__has_include)}\par
00009 {\cf20 /* If the compiler does not have __has_include, pretend the answer is}\par
00010 {\cf20    always no.  */}\par
00011 {\cf21 #  define __has_include(x) 0}\par
00012 {\cf21 #endif}\par
00013 \par
00014 \par
00015 {\cf20 /* Version number components: V=Version, R=Revision, P=Patch}\par
00016 {\cf20    Version date components:   YYYY=Year, MM=Month,   DD=Day  */}\par
00017 \par
00018 {\cf21 #if defined(__COMO__)}\par
00019 {\cf21 # define COMPILER_ID "Comeau"}\par
00020   {\cf20 /* __COMO_VERSION__ = VRR */}\par
00021 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)}\par
00022 {\cf21 # define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)}\par
00023 \par
00024 {\cf21 #elif defined(__INTEL_COMPILER) || defined(__ICC)}\par
00025 {\cf21 # define COMPILER_ID "Intel"}\par
00026 {\cf21 # if defined(_MSC_VER)}\par
00027 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00028 {\cf21 # endif}\par
00029 {\cf21 # if defined(__GNUC__)}\par
00030 {\cf21 #  define SIMULATE_ID "GNU"}\par
00031 {\cf21 # endif}\par
00032   {\cf20 /* __INTEL_COMPILER = VRP prior to 2021, and then VVVV for 2021 and later,}\par
00033 {\cf20      except that a few beta releases use the old format with V=2021.  */}\par
00034 {\cf21 # if __INTEL_COMPILER < 2021 || __INTEL_COMPILER == 202110 || __INTEL_COMPILER == 202111}\par
00035 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)}\par
00036 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)}\par
00037 {\cf21 #  if defined(__INTEL_COMPILER_UPDATE)}\par
00038 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)}\par
00039 {\cf21 #  else}\par
00040 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)}\par
00041 {\cf21 #  endif}\par
00042 {\cf21 # else}\par
00043 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER)}\par
00044 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER_UPDATE)}\par
00045    {\cf20 /* The third version component from --version is an update index,}\par
00046 {\cf20       but no macro is provided for it.  */}\par
00047 {\cf21 #  define COMPILER_VERSION_PATCH DEC(0)}\par
00048 {\cf21 # endif}\par
00049 {\cf21 # if defined(__INTEL_COMPILER_BUILD_DATE)}\par
00050    {\cf20 /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */}\par
00051 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)}\par
00052 {\cf21 # endif}\par
00053 {\cf21 # if defined(_MSC_VER)}\par
00054    {\cf20 /* _MSC_VER = VVRR */}\par
00055 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00056 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00057 {\cf21 # endif}\par
00058 {\cf21 # if defined(__GNUC__)}\par
00059 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00060 {\cf21 # elif defined(__GNUG__)}\par
00061 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00062 {\cf21 # endif}\par
00063 {\cf21 # if defined(__GNUC_MINOR__)}\par
00064 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00065 {\cf21 # endif}\par
00066 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00067 {\cf21 #  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00068 {\cf21 # endif}\par
00069 \par
00070 {\cf21 #elif (defined(__clang__) && defined(__INTEL_CLANG_COMPILER)) || defined(__INTEL_LLVM_COMPILER)}\par
00071 {\cf21 # define COMPILER_ID "IntelLLVM"}\par
00072 {\cf21 #if defined(_MSC_VER)}\par
00073 {\cf21 # define SIMULATE_ID "MSVC"}\par
00074 {\cf21 #endif}\par
00075 {\cf21 #if defined(__GNUC__)}\par
00076 {\cf21 # define SIMULATE_ID "GNU"}\par
00077 {\cf21 #endif}\par
00078 {\cf20 /* __INTEL_LLVM_COMPILER = VVVVRP prior to 2021.2.0, VVVVRRPP for 2021.2.0 and}\par
00079 {\cf20  * later.  Look for 6 digit vs. 8 digit version number to decide encoding.}\par
00080 {\cf20  * VVVV is no smaller than the current year when a version is released.}\par
00081 {\cf20  */}\par
00082 {\cf21 #if __INTEL_LLVM_COMPILER < 1000000L}\par
00083 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/100)}\par
00084 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/10 % 10)}\par
00085 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER    % 10)}\par
00086 {\cf21 #else}\par
00087 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__INTEL_LLVM_COMPILER/10000)}\par
00088 {\cf21 # define COMPILER_VERSION_MINOR DEC(__INTEL_LLVM_COMPILER/100 % 100)}\par
00089 {\cf21 # define COMPILER_VERSION_PATCH DEC(__INTEL_LLVM_COMPILER     % 100)}\par
00090 {\cf21 #endif}\par
00091 {\cf21 #if defined(_MSC_VER)}\par
00092   {\cf20 /* _MSC_VER = VVRR */}\par
00093 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00094 {\cf21 # define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00095 {\cf21 #endif}\par
00096 {\cf21 #if defined(__GNUC__)}\par
00097 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00098 {\cf21 #elif defined(__GNUG__)}\par
00099 {\cf21 # define SIMULATE_VERSION_MAJOR DEC(__GNUG__)}\par
00100 {\cf21 #endif}\par
00101 {\cf21 #if defined(__GNUC_MINOR__)}\par
00102 {\cf21 # define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00103 {\cf21 #endif}\par
00104 {\cf21 #if defined(__GNUC_PATCHLEVEL__)}\par
00105 {\cf21 # define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00106 {\cf21 #endif}\par
00107 \par
00108 {\cf21 #elif defined(__PATHCC__)}\par
00109 {\cf21 # define COMPILER_ID "PathScale"}\par
00110 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PATHCC__)}\par
00111 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)}\par
00112 {\cf21 # if defined(__PATHCC_PATCHLEVEL__)}\par
00113 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)}\par
00114 {\cf21 # endif}\par
00115 \par
00116 {\cf21 #elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)}\par
00117 {\cf21 # define COMPILER_ID "Embarcadero"}\par
00118 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)}\par
00119 {\cf21 # define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)}\par
00120 {\cf21 # define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)}\par
00121 \par
00122 {\cf21 #elif defined(__BORLANDC__)}\par
00123 {\cf21 # define COMPILER_ID "Borland"}\par
00124   {\cf20 /* __BORLANDC__ = 0xVRR */}\par
00125 {\cf21 # define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)}\par
00126 {\cf21 # define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)}\par
00127 \par
00128 {\cf21 #elif defined(__WATCOMC__) && __WATCOMC__ < 1200}\par
00129 {\cf21 # define COMPILER_ID "Watcom"}\par
00130    {\cf20 /* __WATCOMC__ = VVRR */}\par
00131 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)}\par
00132 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00133 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00134 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00135 {\cf21 # endif}\par
00136 \par
00137 {\cf21 #elif defined(__WATCOMC__)}\par
00138 {\cf21 # define COMPILER_ID "OpenWatcom"}\par
00139    {\cf20 /* __WATCOMC__ = VVRP + 1100 */}\par
00140 {\cf21 # define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)}\par
00141 {\cf21 # define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)}\par
00142 {\cf21 # if (__WATCOMC__ % 10) > 0}\par
00143 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)}\par
00144 {\cf21 # endif}\par
00145 \par
00146 {\cf21 #elif defined(__SUNPRO_CC)}\par
00147 {\cf21 # define COMPILER_ID "SunPro"}\par
00148 {\cf21 # if __SUNPRO_CC >= 0x5100}\par
00149    {\cf20 /* __SUNPRO_CC = 0xVRRP */}\par
00150 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)}\par
00151 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)}\par
00152 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)}\par
00153 {\cf21 # else}\par
00154    {\cf20 /* __SUNPRO_CC = 0xVRP */}\par
00155 {\cf21 #  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)}\par
00156 {\cf21 #  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)}\par
00157 {\cf21 #  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)}\par
00158 {\cf21 # endif}\par
00159 \par
00160 {\cf21 #elif defined(__HP_aCC)}\par
00161 {\cf21 # define COMPILER_ID "HP"}\par
00162   {\cf20 /* __HP_aCC = VVRRPP */}\par
00163 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)}\par
00164 {\cf21 # define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)}\par
00165 {\cf21 # define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)}\par
00166 \par
00167 {\cf21 #elif defined(__DECCXX)}\par
00168 {\cf21 # define COMPILER_ID "Compaq"}\par
00169   {\cf20 /* __DECCXX_VER = VVRRTPPPP */}\par
00170 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)}\par
00171 {\cf21 # define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)}\par
00172 {\cf21 # define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)}\par
00173 \par
00174 {\cf21 #elif defined(__IBMCPP__) && defined(__COMPILER_VER__)}\par
00175 {\cf21 # define COMPILER_ID "zOS"}\par
00176   {\cf20 /* __IBMCPP__ = VRP */}\par
00177 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)}\par
00178 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)}\par
00179 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)}\par
00180 \par
00181 {\cf21 #elif defined(__open_xl__) && defined(__clang__)}\par
00182 {\cf21 # define COMPILER_ID "IBMClang"}\par
00183 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__open_xl_version__)}\par
00184 {\cf21 # define COMPILER_VERSION_MINOR DEC(__open_xl_release__)}\par
00185 {\cf21 # define COMPILER_VERSION_PATCH DEC(__open_xl_modification__)}\par
00186 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__open_xl_ptf_fix_level__)}\par
00187 \par
00188 \par
00189 {\cf21 #elif defined(__ibmxl__) && defined(__clang__)}\par
00190 {\cf21 # define COMPILER_ID "XLClang"}\par
00191 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)}\par
00192 {\cf21 # define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)}\par
00193 {\cf21 # define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)}\par
00194 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)}\par
00195 \par
00196 \par
00197 {\cf21 #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800}\par
00198 {\cf21 # define COMPILER_ID "XL"}\par
00199   {\cf20 /* __IBMCPP__ = VRP */}\par
00200 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)}\par
00201 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)}\par
00202 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)}\par
00203 \par
00204 {\cf21 #elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800}\par
00205 {\cf21 # define COMPILER_ID "VisualAge"}\par
00206   {\cf20 /* __IBMCPP__ = VRP */}\par
00207 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)}\par
00208 {\cf21 # define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)}\par
00209 {\cf21 # define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)}\par
00210 \par
00211 {\cf21 #elif defined(__NVCOMPILER)}\par
00212 {\cf21 # define COMPILER_ID "NVHPC"}\par
00213 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__NVCOMPILER_MAJOR__)}\par
00214 {\cf21 # define COMPILER_VERSION_MINOR DEC(__NVCOMPILER_MINOR__)}\par
00215 {\cf21 # if defined(__NVCOMPILER_PATCHLEVEL__)}\par
00216 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__NVCOMPILER_PATCHLEVEL__)}\par
00217 {\cf21 # endif}\par
00218 \par
00219 {\cf21 #elif defined(__PGI)}\par
00220 {\cf21 # define COMPILER_ID "PGI"}\par
00221 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__PGIC__)}\par
00222 {\cf21 # define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)}\par
00223 {\cf21 # if defined(__PGIC_PATCHLEVEL__)}\par
00224 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)}\par
00225 {\cf21 # endif}\par
00226 \par
00227 {\cf21 #elif defined(_CRAYC)}\par
00228 {\cf21 # define COMPILER_ID "Cray"}\par
00229 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)}\par
00230 {\cf21 # define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)}\par
00231 \par
00232 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00233 {\cf21 # define COMPILER_ID "TI"}\par
00234   {\cf20 /* __TI_COMPILER_VERSION__ = VVVRRRPPP */}\par
00235 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)}\par
00236 {\cf21 # define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)}\par
00237 {\cf21 # define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)}\par
00238 \par
00239 {\cf21 #elif defined(__CLANG_FUJITSU)}\par
00240 {\cf21 # define COMPILER_ID "FujitsuClang"}\par
00241 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00242 {\cf21 # define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00243 {\cf21 # define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00244 {\cf21 # define COMPILER_VERSION_INTERNAL_STR __clang_version__}\par
00245 \par
00246 \par
00247 {\cf21 #elif defined(__FUJITSU)}\par
00248 {\cf21 # define COMPILER_ID "Fujitsu"}\par
00249 {\cf21 # if defined(__FCC_version__)}\par
00250 {\cf21 #   define COMPILER_VERSION __FCC_version__}\par
00251 {\cf21 # elif defined(__FCC_major__)}\par
00252 {\cf21 #   define COMPILER_VERSION_MAJOR DEC(__FCC_major__)}\par
00253 {\cf21 #   define COMPILER_VERSION_MINOR DEC(__FCC_minor__)}\par
00254 {\cf21 #   define COMPILER_VERSION_PATCH DEC(__FCC_patchlevel__)}\par
00255 {\cf21 # endif}\par
00256 {\cf21 # if defined(__fcc_version)}\par
00257 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__fcc_version)}\par
00258 {\cf21 # elif defined(__FCC_VERSION)}\par
00259 {\cf21 #   define COMPILER_VERSION_INTERNAL DEC(__FCC_VERSION)}\par
00260 {\cf21 # endif}\par
00261 \par
00262 \par
00263 {\cf21 #elif defined(__ghs__)}\par
00264 {\cf21 # define COMPILER_ID "GHS"}\par
00265 {\cf20 /* __GHS_VERSION_NUMBER = VVVVRP */}\par
00266 {\cf21 # ifdef __GHS_VERSION_NUMBER}\par
00267 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)}\par
00268 {\cf21 # define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)}\par
00269 {\cf21 # define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)}\par
00270 {\cf21 # endif}\par
00271 \par
00272 {\cf21 #elif defined(__TASKING__)}\par
00273 {\cf21 # define COMPILER_ID "Tasking"}\par
00274 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__VERSION__/1000)}\par
00275 {\cf21   # define COMPILER_VERSION_MINOR DEC(__VERSION__ % 100)}\par
00276 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__VERSION__)}\par
00277 \par
00278 {\cf21 #elif defined(__SCO_VERSION__)}\par
00279 {\cf21 # define COMPILER_ID "SCO"}\par
00280 \par
00281 {\cf21 #elif defined(__ARMCC_VERSION) && !defined(__clang__)}\par
00282 {\cf21 # define COMPILER_ID "ARMCC"}\par
00283 {\cf21 #if __ARMCC_VERSION >= 1000000}\par
00284   {\cf20 /* __ARMCC_VERSION = VRRPPPP */}\par
00285 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)}\par
00286 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)}\par
00287 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)}\par
00288 {\cf21 #else}\par
00289   {\cf20 /* __ARMCC_VERSION = VRPPPP */}\par
00290 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)}\par
00291 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)}\par
00292 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)}\par
00293 {\cf21 #endif}\par
00294 \par
00295 \par
00296 {\cf21 #elif defined(__clang__) && defined(__apple_build_version__)}\par
00297 {\cf21 # define COMPILER_ID "AppleClang"}\par
00298 {\cf21 # if defined(_MSC_VER)}\par
00299 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00300 {\cf21 # endif}\par
00301 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00302 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00303 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00304 {\cf21 # if defined(_MSC_VER)}\par
00305    {\cf20 /* _MSC_VER = VVRR */}\par
00306 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00307 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00308 {\cf21 # endif}\par
00309 {\cf21 # define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)}\par
00310 \par
00311 {\cf21 #elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)}\par
00312 {\cf21 # define COMPILER_ID "ARMClang"}\par
00313 {\cf21   # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)}\par
00314 {\cf21   # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)}\par
00315 {\cf21   # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)}\par
00316 {\cf21 # define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)}\par
00317 \par
00318 {\cf21 #elif defined(__clang__)}\par
00319 {\cf21 # define COMPILER_ID "Clang"}\par
00320 {\cf21 # if defined(_MSC_VER)}\par
00321 {\cf21 #  define SIMULATE_ID "MSVC"}\par
00322 {\cf21 # endif}\par
00323 {\cf21 # define COMPILER_VERSION_MAJOR DEC(__clang_major__)}\par
00324 {\cf21 # define COMPILER_VERSION_MINOR DEC(__clang_minor__)}\par
00325 {\cf21 # define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)}\par
00326 {\cf21 # if defined(_MSC_VER)}\par
00327    {\cf20 /* _MSC_VER = VVRR */}\par
00328 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00329 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00330 {\cf21 # endif}\par
00331 \par
00332 {\cf21 #elif defined(__LCC__) && (defined(__GNUC__) || defined(__GNUG__) || defined(__MCST__))}\par
00333 {\cf21 # define COMPILER_ID "LCC"}\par
00334 {\cf21 # define COMPILER_VERSION_MAJOR DEC(1)}\par
00335 {\cf21 # if defined(__LCC__)}\par
00336 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__LCC__- 100)}\par
00337 {\cf21 # endif}\par
00338 {\cf21 # if defined(__LCC_MINOR__)}\par
00339 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__LCC_MINOR__)}\par
00340 {\cf21 # endif}\par
00341 {\cf21 # if defined(__GNUC__) && defined(__GNUC_MINOR__)}\par
00342 {\cf21 #  define SIMULATE_ID "GNU"}\par
00343 {\cf21 #  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)}\par
00344 {\cf21 #  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00345 {\cf21 #  if defined(__GNUC_PATCHLEVEL__)}\par
00346 {\cf21 #   define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00347 {\cf21 #  endif}\par
00348 {\cf21 # endif}\par
00349 \par
00350 {\cf21 #elif defined(__GNUC__) || defined(__GNUG__)}\par
00351 {\cf21 # define COMPILER_ID "GNU"}\par
00352 {\cf21 # if defined(__GNUC__)}\par
00353 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__GNUC__)}\par
00354 {\cf21 # else}\par
00355 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__GNUG__)}\par
00356 {\cf21 # endif}\par
00357 {\cf21 # if defined(__GNUC_MINOR__)}\par
00358 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)}\par
00359 {\cf21 # endif}\par
00360 {\cf21 # if defined(__GNUC_PATCHLEVEL__)}\par
00361 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)}\par
00362 {\cf21 # endif}\par
00363 \par
00364 {\cf21 #elif defined(_MSC_VER)}\par
00365 {\cf21 # define COMPILER_ID "MSVC"}\par
00366   {\cf20 /* _MSC_VER = VVRR */}\par
00367 {\cf21 # define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)}\par
00368 {\cf21 # define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)}\par
00369 {\cf21 # if defined(_MSC_FULL_VER)}\par
00370 {\cf21 #  if _MSC_VER >= 1400}\par
00371     {\cf20 /* _MSC_FULL_VER = VVRRPPPPP */}\par
00372 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)}\par
00373 {\cf21 #  else}\par
00374     {\cf20 /* _MSC_FULL_VER = VVRRPPPP */}\par
00375 {\cf21 #   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)}\par
00376 {\cf21 #  endif}\par
00377 {\cf21 # endif}\par
00378 {\cf21 # if defined(_MSC_BUILD)}\par
00379 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)}\par
00380 {\cf21 # endif}\par
00381 \par
00382 {\cf21 #elif defined(_ADI_COMPILER)}\par
00383 {\cf21 # define COMPILER_ID "ADSP"}\par
00384 {\cf21 #if defined(__VERSIONNUM__)}\par
00385   {\cf20 /* __VERSIONNUM__ = 0xVVRRPPTT */}\par
00386 {\cf21 #  define COMPILER_VERSION_MAJOR DEC(__VERSIONNUM__ >> 24 & 0xFF)}\par
00387 {\cf21 #  define COMPILER_VERSION_MINOR DEC(__VERSIONNUM__ >> 16 & 0xFF)}\par
00388 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__VERSIONNUM__ >> 8 & 0xFF)}\par
00389 {\cf21 #  define COMPILER_VERSION_TWEAK DEC(__VERSIONNUM__ & 0xFF)}\par
00390 {\cf21 #endif}\par
00391 \par
00392 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00393 {\cf21 # define COMPILER_ID "IAR"}\par
00394 {\cf21 # if defined(__VER__) && defined(__ICCARM__)}\par
00395 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)}\par
00396 {\cf21 #  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)}\par
00397 {\cf21 #  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)}\par
00398 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00399 {\cf21 # elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__) || defined(__ICCSTM8__))}\par
00400 {\cf21 #  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)}\par
00401 {\cf21 #  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))}\par
00402 {\cf21 #  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)}\par
00403 {\cf21 #  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)}\par
00404 {\cf21 # endif}\par
00405 \par
00406 \par
00407 {\cf20 /* These compilers are either not known or too old to define an}\par
00408 {\cf20   identification macro.  Try to identify the platform and guess that}\par
00409 {\cf20   it is the native compiler.  */}\par
00410 {\cf21 #elif defined(__hpux) || defined(__hpua)}\par
00411 {\cf21 # define COMPILER_ID "HP"}\par
00412 \par
00413 {\cf21 #else }{\cf20 /* unknown compiler */}{\cf21 }\par
00414 {\cf21 # define COMPILER_ID ""}\par
00415 {\cf21 #endif}\par
00416 \par
00417 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00418 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00419 {\cf20    because some compilers will just produce instructions to fill the}\par
00420 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00421 {\cf18 char} {\cf17 const}* info_compiler = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler["} COMPILER_ID {\cf22 "]"};\par
00422 {\cf21 #ifdef SIMULATE_ID}\par
00423 {\cf18 char} {\cf17 const}* info_simulate = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "simulate["} SIMULATE_ID {\cf22 "]"};\par
00424 {\cf21 #endif}\par
00425 \par
00426 {\cf21 #ifdef __QNXNTO__}\par
00427 {\cf18 char} {\cf17 const}* qnxnto = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "qnxnto[]"};\par
00428 {\cf21 #endif}\par
00429 \par
00430 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00431 {\cf18 char} {\cf17 const} *info_cray = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_wrapper[CrayPrgEnv]"};\par
00432 {\cf21 #endif}\par
00433 \par
00434 {\cf21 #define STRINGIFY_HELPER(X) #X}\par
00435 {\cf21 #define STRINGIFY(X) STRINGIFY_HELPER(X)}\par
00436 \par
00437 {\cf20 /* Identify known platforms by name.  */}\par
00438 {\cf21 #if defined(__linux) || defined(__linux__) || defined(linux)}\par
00439 {\cf21 # define PLATFORM_ID "Linux"}\par
00440 \par
00441 {\cf21 #elif defined(__MSYS__)}\par
00442 {\cf21 # define PLATFORM_ID "MSYS"}\par
00443 \par
00444 {\cf21 #elif defined(__CYGWIN__)}\par
00445 {\cf21 # define PLATFORM_ID "Cygwin"}\par
00446 \par
00447 {\cf21 #elif defined(__MINGW32__)}\par
00448 {\cf21 # define PLATFORM_ID "MinGW"}\par
00449 \par
00450 {\cf21 #elif defined(__APPLE__)}\par
00451 {\cf21 # define PLATFORM_ID "Darwin"}\par
00452 \par
00453 {\cf21 #elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)}\par
00454 {\cf21 # define PLATFORM_ID "Windows"}\par
00455 \par
00456 {\cf21 #elif defined(__FreeBSD__) || defined(__FreeBSD)}\par
00457 {\cf21 # define PLATFORM_ID "FreeBSD"}\par
00458 \par
00459 {\cf21 #elif defined(__NetBSD__) || defined(__NetBSD)}\par
00460 {\cf21 # define PLATFORM_ID "NetBSD"}\par
00461 \par
00462 {\cf21 #elif defined(__OpenBSD__) || defined(__OPENBSD)}\par
00463 {\cf21 # define PLATFORM_ID "OpenBSD"}\par
00464 \par
00465 {\cf21 #elif defined(__sun) || defined(sun)}\par
00466 {\cf21 # define PLATFORM_ID "SunOS"}\par
00467 \par
00468 {\cf21 #elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)}\par
00469 {\cf21 # define PLATFORM_ID "AIX"}\par
00470 \par
00471 {\cf21 #elif defined(__hpux) || defined(__hpux__)}\par
00472 {\cf21 # define PLATFORM_ID "HP-UX"}\par
00473 \par
00474 {\cf21 #elif defined(__HAIKU__)}\par
00475 {\cf21 # define PLATFORM_ID "Haiku"}\par
00476 \par
00477 {\cf21 #elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)}\par
00478 {\cf21 # define PLATFORM_ID "BeOS"}\par
00479 \par
00480 {\cf21 #elif defined(__QNX__) || defined(__QNXNTO__)}\par
00481 {\cf21 # define PLATFORM_ID "QNX"}\par
00482 \par
00483 {\cf21 #elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)}\par
00484 {\cf21 # define PLATFORM_ID "Tru64"}\par
00485 \par
00486 {\cf21 #elif defined(__riscos) || defined(__riscos__)}\par
00487 {\cf21 # define PLATFORM_ID "RISCos"}\par
00488 \par
00489 {\cf21 #elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)}\par
00490 {\cf21 # define PLATFORM_ID "SINIX"}\par
00491 \par
00492 {\cf21 #elif defined(__UNIX_SV__)}\par
00493 {\cf21 # define PLATFORM_ID "UNIX_SV"}\par
00494 \par
00495 {\cf21 #elif defined(__bsdos__)}\par
00496 {\cf21 # define PLATFORM_ID "BSDOS"}\par
00497 \par
00498 {\cf21 #elif defined(_MPRAS) || defined(MPRAS)}\par
00499 {\cf21 # define PLATFORM_ID "MP-RAS"}\par
00500 \par
00501 {\cf21 #elif defined(__osf) || defined(__osf__)}\par
00502 {\cf21 # define PLATFORM_ID "OSF1"}\par
00503 \par
00504 {\cf21 #elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)}\par
00505 {\cf21 # define PLATFORM_ID "SCO_SV"}\par
00506 \par
00507 {\cf21 #elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)}\par
00508 {\cf21 # define PLATFORM_ID "ULTRIX"}\par
00509 \par
00510 {\cf21 #elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)}\par
00511 {\cf21 # define PLATFORM_ID "Xenix"}\par
00512 \par
00513 {\cf21 #elif defined(__WATCOMC__)}\par
00514 {\cf21 # if defined(__LINUX__)}\par
00515 {\cf21 #  define PLATFORM_ID "Linux"}\par
00516 \par
00517 {\cf21 # elif defined(__DOS__)}\par
00518 {\cf21 #  define PLATFORM_ID "DOS"}\par
00519 \par
00520 {\cf21 # elif defined(__OS2__)}\par
00521 {\cf21 #  define PLATFORM_ID "OS2"}\par
00522 \par
00523 {\cf21 # elif defined(__WINDOWS__)}\par
00524 {\cf21 #  define PLATFORM_ID "Windows3x"}\par
00525 \par
00526 {\cf21 # elif defined(__VXWORKS__)}\par
00527 {\cf21 #  define PLATFORM_ID "VxWorks"}\par
00528 \par
00529 {\cf21 # else }{\cf20 /* unknown platform */}{\cf21 }\par
00530 {\cf21 #  define PLATFORM_ID}\par
00531 {\cf21 # endif}\par
00532 \par
00533 {\cf21 #elif defined(__INTEGRITY)}\par
00534 {\cf21 # if defined(INT_178B)}\par
00535 {\cf21 #  define PLATFORM_ID "Integrity178"}\par
00536 \par
00537 {\cf21 # else }{\cf20 /* regular Integrity */}{\cf21 }\par
00538 {\cf21 #  define PLATFORM_ID "Integrity"}\par
00539 {\cf21 # endif}\par
00540 \par
00541 {\cf21 # elif defined(_ADI_COMPILER)}\par
00542 {\cf21 #  define PLATFORM_ID "ADSP"}\par
00543 \par
00544 {\cf21 #else }{\cf20 /* unknown platform */}{\cf21 }\par
00545 {\cf21 # define PLATFORM_ID}\par
00546 \par
00547 {\cf21 #endif}\par
00548 \par
00549 {\cf20 /* For windows compilers MSVC and Intel we can determine}\par
00550 {\cf20    the architecture of the compiler being used.  This is because}\par
00551 {\cf20    the compilers do not have flags that can change the architecture,}\par
00552 {\cf20    but rather depend on which compiler is being used}\par
00553 {\cf20 */}\par
00554 {\cf21 #if defined(_WIN32) && defined(_MSC_VER)}\par
00555 {\cf21 # if defined(_M_IA64)}\par
00556 {\cf21 #  define ARCHITECTURE_ID "IA64"}\par
00557 \par
00558 {\cf21 # elif defined(_M_ARM64EC)}\par
00559 {\cf21 #  define ARCHITECTURE_ID "ARM64EC"}\par
00560 \par
00561 {\cf21 # elif defined(_M_X64) || defined(_M_AMD64)}\par
00562 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00563 \par
00564 {\cf21 # elif defined(_M_IX86)}\par
00565 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00566 \par
00567 {\cf21 # elif defined(_M_ARM64)}\par
00568 {\cf21 #  define ARCHITECTURE_ID "ARM64"}\par
00569 \par
00570 {\cf21 # elif defined(_M_ARM)}\par
00571 {\cf21 #  if _M_ARM == 4}\par
00572 {\cf21 #   define ARCHITECTURE_ID "ARMV4I"}\par
00573 {\cf21 #  elif _M_ARM == 5}\par
00574 {\cf21 #   define ARCHITECTURE_ID "ARMV5I"}\par
00575 {\cf21 #  else}\par
00576 {\cf21 #   define ARCHITECTURE_ID "ARMV"} STRINGIFY(_M_ARM)\par
00577 {\cf21 #  endif}\par
00578 \par
00579 {\cf21 # elif defined(_M_MIPS)}\par
00580 {\cf21 #  define ARCHITECTURE_ID "MIPS"}\par
00581 \par
00582 {\cf21 # elif defined(_M_SH)}\par
00583 {\cf21 #  define ARCHITECTURE_ID "SHx"}\par
00584 \par
00585 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00586 {\cf21 #  define ARCHITECTURE_ID ""}\par
00587 {\cf21 # endif}\par
00588 \par
00589 {\cf21 #elif defined(__WATCOMC__)}\par
00590 {\cf21 # if defined(_M_I86)}\par
00591 {\cf21 #  define ARCHITECTURE_ID "I86"}\par
00592 \par
00593 {\cf21 # elif defined(_M_IX86)}\par
00594 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00595 \par
00596 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00597 {\cf21 #  define ARCHITECTURE_ID ""}\par
00598 {\cf21 # endif}\par
00599 \par
00600 {\cf21 #elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)}\par
00601 {\cf21 # if defined(__ICCARM__)}\par
00602 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00603 \par
00604 {\cf21 # elif defined(__ICCRX__)}\par
00605 {\cf21 #  define ARCHITECTURE_ID "RX"}\par
00606 \par
00607 {\cf21 # elif defined(__ICCRH850__)}\par
00608 {\cf21 #  define ARCHITECTURE_ID "RH850"}\par
00609 \par
00610 {\cf21 # elif defined(__ICCRL78__)}\par
00611 {\cf21 #  define ARCHITECTURE_ID "RL78"}\par
00612 \par
00613 {\cf21 # elif defined(__ICCRISCV__)}\par
00614 {\cf21 #  define ARCHITECTURE_ID "RISCV"}\par
00615 \par
00616 {\cf21 # elif defined(__ICCAVR__)}\par
00617 {\cf21 #  define ARCHITECTURE_ID "AVR"}\par
00618 \par
00619 {\cf21 # elif defined(__ICC430__)}\par
00620 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00621 \par
00622 {\cf21 # elif defined(__ICCV850__)}\par
00623 {\cf21 #  define ARCHITECTURE_ID "V850"}\par
00624 \par
00625 {\cf21 # elif defined(__ICC8051__)}\par
00626 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00627 \par
00628 {\cf21 # elif defined(__ICCSTM8__)}\par
00629 {\cf21 #  define ARCHITECTURE_ID "STM8"}\par
00630 \par
00631 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00632 {\cf21 #  define ARCHITECTURE_ID ""}\par
00633 {\cf21 # endif}\par
00634 \par
00635 {\cf21 #elif defined(__ghs__)}\par
00636 {\cf21 # if defined(__PPC64__)}\par
00637 {\cf21 #  define ARCHITECTURE_ID "PPC64"}\par
00638 \par
00639 {\cf21 # elif defined(__ppc__)}\par
00640 {\cf21 #  define ARCHITECTURE_ID "PPC"}\par
00641 \par
00642 {\cf21 # elif defined(__ARM__)}\par
00643 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00644 \par
00645 {\cf21 # elif defined(__x86_64__)}\par
00646 {\cf21 #  define ARCHITECTURE_ID "x64"}\par
00647 \par
00648 {\cf21 # elif defined(__i386__)}\par
00649 {\cf21 #  define ARCHITECTURE_ID "X86"}\par
00650 \par
00651 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00652 {\cf21 #  define ARCHITECTURE_ID ""}\par
00653 {\cf21 # endif}\par
00654 \par
00655 {\cf21 #elif defined(__TI_COMPILER_VERSION__)}\par
00656 {\cf21 # if defined(__TI_ARM__)}\par
00657 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00658 \par
00659 {\cf21 # elif defined(__MSP430__)}\par
00660 {\cf21 #  define ARCHITECTURE_ID "MSP430"}\par
00661 \par
00662 {\cf21 # elif defined(__TMS320C28XX__)}\par
00663 {\cf21 #  define ARCHITECTURE_ID "TMS320C28x"}\par
00664 \par
00665 {\cf21 # elif defined(__TMS320C6X__) || defined(_TMS320C6X)}\par
00666 {\cf21 #  define ARCHITECTURE_ID "TMS320C6x"}\par
00667 \par
00668 {\cf21 # else }{\cf20 /* unknown architecture */}{\cf21 }\par
00669 {\cf21 #  define ARCHITECTURE_ID ""}\par
00670 {\cf21 # endif}\par
00671 \par
00672 {\cf21 # elif defined(__ADSPSHARC__)}\par
00673 {\cf21 #  define ARCHITECTURE_ID "SHARC"}\par
00674 \par
00675 {\cf21 # elif defined(__ADSPBLACKFIN__)}\par
00676 {\cf21 #  define ARCHITECTURE_ID "Blackfin"}\par
00677 \par
00678 {\cf21 #elif defined(__TASKING__)}\par
00679 \par
00680 {\cf21 # if defined(__CTC__) || defined(__CPTC__)}\par
00681 {\cf21 #  define ARCHITECTURE_ID "TriCore"}\par
00682 \par
00683 {\cf21 # elif defined(__CMCS__)}\par
00684 {\cf21 #  define ARCHITECTURE_ID "MCS"}\par
00685 \par
00686 {\cf21 # elif defined(__CARM__)}\par
00687 {\cf21 #  define ARCHITECTURE_ID "ARM"}\par
00688 \par
00689 {\cf21 # elif defined(__CARC__)}\par
00690 {\cf21 #  define ARCHITECTURE_ID "ARC"}\par
00691 \par
00692 {\cf21 # elif defined(__C51__)}\par
00693 {\cf21 #  define ARCHITECTURE_ID "8051"}\par
00694 \par
00695 {\cf21 # elif defined(__CPCP__)}\par
00696 {\cf21 #  define ARCHITECTURE_ID "PCP"}\par
00697 \par
00698 {\cf21 # else}\par
00699 {\cf21 #  define ARCHITECTURE_ID ""}\par
00700 {\cf21 # endif}\par
00701 \par
00702 {\cf21 #else}\par
00703 {\cf21 #  define ARCHITECTURE_ID}\par
00704 {\cf21 #endif}\par
00705 \par
00706 {\cf20 /* Convert integer to decimal digit literals.  */}\par
00707 {\cf21 #define DEC(n)                   \\}\par
00708 {\cf21   ('0' + (((n) / 10000000)%10)), \\}\par
00709 {\cf21   ('0' + (((n) / 1000000)%10)),  \\}\par
00710 {\cf21   ('0' + (((n) / 100000)%10)),   \\}\par
00711 {\cf21   ('0' + (((n) / 10000)%10)),    \\}\par
00712 {\cf21   ('0' + (((n) / 1000)%10)),     \\}\par
00713 {\cf21   ('0' + (((n) / 100)%10)),      \\}\par
00714 {\cf21   ('0' + (((n) / 10)%10)),       \\}\par
00715 {\cf21   ('0' +  ((n) % 10))}\par
00716 \par
00717 {\cf20 /* Convert integer to hex digit literals.  */}\par
00718 {\cf21 #define HEX(n)             \\}\par
00719 {\cf21   ('0' + ((n)>>28 & 0xF)), \\}\par
00720 {\cf21   ('0' + ((n)>>24 & 0xF)), \\}\par
00721 {\cf21   ('0' + ((n)>>20 & 0xF)), \\}\par
00722 {\cf21   ('0' + ((n)>>16 & 0xF)), \\}\par
00723 {\cf21   ('0' + ((n)>>12 & 0xF)), \\}\par
00724 {\cf21   ('0' + ((n)>>8  & 0xF)), \\}\par
00725 {\cf21   ('0' + ((n)>>4  & 0xF)), \\}\par
00726 {\cf21   ('0' + ((n)     & 0xF))}\par
00727 \par
00728 {\cf20 /* Construct a string literal encoding the version number. */}\par
00729 {\cf21 #ifdef COMPILER_VERSION}\par
00730 {\cf18 char} {\cf17 const}* info_version = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version["} COMPILER_VERSION {\cf22 "]"};\par
00731 \par
00732 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00733 {\cf21 #elif defined(COMPILER_VERSION_MAJOR)}\par
00734 {\cf18 char} {\cf17 const} info_version[] = \{\par
00735   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00736   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00737   COMPILER_VERSION_MAJOR,\par
00738 {\cf21 # ifdef COMPILER_VERSION_MINOR}\par
00739   {\cf23 '.'}, COMPILER_VERSION_MINOR,\par
00740 {\cf21 #  ifdef COMPILER_VERSION_PATCH}\par
00741    {\cf23 '.'}, COMPILER_VERSION_PATCH,\par
00742 {\cf21 #   ifdef COMPILER_VERSION_TWEAK}\par
00743     {\cf23 '.'}, COMPILER_VERSION_TWEAK,\par
00744 {\cf21 #   endif}\par
00745 {\cf21 #  endif}\par
00746 {\cf21 # endif}\par
00747   {\cf23 ']'},{\cf23 '\\0'}\};\par
00748 {\cf21 #endif}\par
00749 \par
00750 {\cf20 /* Construct a string literal encoding the internal version number. */}\par
00751 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00752 {\cf18 char} {\cf17 const} info_version_internal[] = \{\par
00753   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00754   {\cf23 'c'},{\cf23 'o'},{\cf23 'm'},{\cf23 'p'},{\cf23 'i'},{\cf23 'l'},{\cf23 'e'},{\cf23 'r'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '_'},\par
00755   {\cf23 'i'},{\cf23 'n'},{\cf23 't'},{\cf23 'e'},{\cf23 'r'},{\cf23 'n'},{\cf23 'a'},{\cf23 'l'},{\cf23 '['},\par
00756   COMPILER_VERSION_INTERNAL,{\cf23 ']'},{\cf23 '\\0'}\};\par
00757 {\cf21 #elif defined(COMPILER_VERSION_INTERNAL_STR)}\par
00758 {\cf18 char} {\cf17 const}* info_version_internal = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "compiler_version_internal["} COMPILER_VERSION_INTERNAL_STR {\cf22 "]"};\par
00759 {\cf21 #endif}\par
00760 \par
00761 {\cf20 /* Construct a string literal encoding the version number components. */}\par
00762 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00763 {\cf18 char} {\cf17 const} info_simulate_version[] = \{\par
00764   {\cf23 'I'}, {\cf23 'N'}, {\cf23 'F'}, {\cf23 'O'}, {\cf23 ':'},\par
00765   {\cf23 's'},{\cf23 'i'},{\cf23 'm'},{\cf23 'u'},{\cf23 'l'},{\cf23 'a'},{\cf23 't'},{\cf23 'e'},{\cf23 '_'},{\cf23 'v'},{\cf23 'e'},{\cf23 'r'},{\cf23 's'},{\cf23 'i'},{\cf23 'o'},{\cf23 'n'},{\cf23 '['},\par
00766   SIMULATE_VERSION_MAJOR,\par
00767 {\cf21 # ifdef SIMULATE_VERSION_MINOR}\par
00768   {\cf23 '.'}, SIMULATE_VERSION_MINOR,\par
00769 {\cf21 #  ifdef SIMULATE_VERSION_PATCH}\par
00770    {\cf23 '.'}, SIMULATE_VERSION_PATCH,\par
00771 {\cf21 #   ifdef SIMULATE_VERSION_TWEAK}\par
00772     {\cf23 '.'}, SIMULATE_VERSION_TWEAK,\par
00773 {\cf21 #   endif}\par
00774 {\cf21 #  endif}\par
00775 {\cf21 # endif}\par
00776   {\cf23 ']'},{\cf23 '\\0'}\};\par
00777 {\cf21 #endif}\par
00778 \par
00779 {\cf20 /* Construct the string literal in pieces to prevent the source from}\par
00780 {\cf20    getting matched.  Store it in a pointer rather than an array}\par
00781 {\cf20    because some compilers will just produce instructions to fill the}\par
00782 {\cf20    array rather than assigning a pointer to a static array.  */}\par
00783 {\cf18 char} {\cf17 const}* info_platform = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "platform["} PLATFORM_ID {\cf22 "]"};\par
00784 {\cf18 char} {\cf17 const}* info_arch = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "arch["} ARCHITECTURE_ID {\cf22 "]"};\par
00785 \par
00786 \par
00787 \par
00788 {\cf21 #if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L}\par
00789 {\cf21 #  if defined(__INTEL_CXX11_MODE__)}\par
00790 {\cf21 #    if defined(__cpp_aggregate_nsdmi)}\par
00791 {\cf21 #      define CXX_STD 201402L}\par
00792 {\cf21 #    else}\par
00793 {\cf21 #      define CXX_STD 201103L}\par
00794 {\cf21 #    endif}\par
00795 {\cf21 #  else}\par
00796 {\cf21 #    define CXX_STD 199711L}\par
00797 {\cf21 #  endif}\par
00798 {\cf21 #elif defined(_MSC_VER) && defined(_MSVC_LANG)}\par
00799 {\cf21 #  define CXX_STD _MSVC_LANG}\par
00800 {\cf21 #else}\par
00801 {\cf21 #  define CXX_STD __cplusplus}\par
00802 {\cf21 #endif}\par
00803 \par
00804 {\cf17 const} {\cf18 char}* info_language_standard_default = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "standard_default["}\par
00805 {\cf21 #if CXX_STD > 202002L}\par
00806   {\cf22 "23"}\par
00807 {\cf21 #elif CXX_STD > 201703L}\par
00808   {\cf22 "20"}\par
00809 {\cf21 #elif CXX_STD >= 201703L}\par
00810   {\cf22 "17"}\par
00811 {\cf21 #elif CXX_STD >= 201402L}\par
00812   {\cf22 "14"}\par
00813 {\cf21 #elif CXX_STD >= 201103L}\par
00814   {\cf22 "11"}\par
00815 {\cf21 #else}\par
00816   {\cf22 "98"}\par
00817 {\cf21 #endif}\par
00818 {\cf22 "]"};\par
00819 \par
00820 {\cf17 const} {\cf18 char}* info_language_extensions_default = {\cf22 "INFO"} {\cf22 ":"} {\cf22 "extensions_default["}\par
00821 {\cf21 #if (defined(__clang__) || defined(__GNUC__) || defined(__xlC__) ||           \\}\par
00822 {\cf21      defined(__TI_COMPILER_VERSION__)) &&                                     \\}\par
00823 {\cf21   !defined(__STRICT_ANSI__)}\par
00824   {\cf22 "ON"}\par
00825 {\cf21 #else}\par
00826   {\cf22 "OFF"}\par
00827 {\cf21 #endif}\par
00828 {\cf22 "]"};\par
00829 \par
00830 {\cf20 /*--------------------------------------------------------------------------*/}\par
00831 \par
00832 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
00833 \{\par
00834   {\cf18 int} require = 0;\par
00835   require += info_compiler[argc];\par
00836   require += info_platform[argc];\par
00837   require += info_arch[argc];\par
00838 {\cf21 #ifdef COMPILER_VERSION_MAJOR}\par
00839   require += info_version[argc];\par
00840 {\cf21 #endif}\par
00841 {\cf21 #ifdef COMPILER_VERSION_INTERNAL}\par
00842   require += info_version_internal[argc];\par
00843 {\cf21 #endif}\par
00844 {\cf21 #ifdef SIMULATE_ID}\par
00845   require += info_simulate[argc];\par
00846 {\cf21 #endif}\par
00847 {\cf21 #ifdef SIMULATE_VERSION_MAJOR}\par
00848   require += info_simulate_version[argc];\par
00849 {\cf21 #endif}\par
00850 {\cf21 #if defined(__CRAYXT_COMPUTE_LINUX_TARGET)}\par
00851   require += info_cray[argc];\par
00852 {\cf21 #endif}\par
00853   require += info_language_standard_default[argc];\par
00854   require += info_language_extensions_default[argc];\par
00855   (void)argv;\par
00856   {\cf19 return} require;\par
00857 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB CommandLine.h\par \pard\plain 
{\tc\tcl2 \v CommandLine.h}
{\xe \v CommandLine.h}
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF CommandLine.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_command_line_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_command_line_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CommandLine}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'EF\'F0\'E5\'E4\'F1\'F2\'E0\'E2\'EB\'FF\'FE\'F9\'E8\'E9 \'E8\'ED\'F2\'E5\'F0\'F4\'E5\'E9\'F1 \'EA\'EE\'EC\'E0\'ED\'E4\'ED\'EE\'E9 \'F1\'F2\'F0\'EE\'EA\'E8. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CommandLine.h\par \pard\plain 
{\tc\tcl2 \v CommandLine.h}
{\xe \v CommandLine.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_COMMANDLINE_H}\par
00002 {\cf21 #define BLANKS_COMMANDLINE_H}\par
00003 {\cf21 #include <string>}\par
00004 {\cf21 #include <vector>}\par
00012 {\cf17 class }CommandLine \{\par
00013 {\cf17 public}:\par
00014     CommandLine({\cf18 int} argc, {\cf18 char}* argv[]);\par
00015     {\cf17 enum class} CommandType \{\par
00016         CONVERT,\par
00017         PRINT,\par
00018         GEN,\par
00019         UNKNOWN\par
00020     \};\par
00021     [[nodiscard]] CommandType get_command_type() {\cf17 const};\par
00022     [[nodiscard]] std::vector<std::string> get_args() {\cf17 const};\par
00023 {\cf17 private}:\par
00024     CommandType command_type;\par
00025     std::vector<std::string> args;\par
00026 \};\par
00027 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB EncodingConverter.h\par \pard\plain 
{\tc\tcl2 \v EncodingConverter.h}
{\xe \v EncodingConverter.h}
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "string"}\par
{\f2 #include "vector"}\par
{\f2 #include "filesystem"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF EncodingConverter.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_encoding_converter_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_encoding_converter_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EncodingConverter}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'EF\'F0\'E5\'EE\'E1\'F0\'E0\'E7\'EE\'E2\'E0\'ED\'E8\'FF \'EA\'EE\'E4\'E8\'F0\'EE\'E2\'EA\'E8 \'F4\'E0\'E9\'EB\'EE\'E2. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EncodingConverter.h\par \pard\plain 
{\tc\tcl2 \v EncodingConverter.h}
{\xe \v EncodingConverter.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_ENCODINGCONVERTER_H}\par
00002 {\cf21 #define BLANKS_ENCODINGCONVERTER_H}\par
00003 {\cf21 #include "string"}\par
00004 {\cf21 #include "vector"}\par
00005 {\cf21 #include "filesystem"}\par
00006 \par
00014 {\cf17 class }EncodingConverter \{\par
00015 {\cf17 public}:\par
00016     EncodingConverter(std::string  inputDir, {\cf17 const} std::string& outputDir = {\cf22 ""});\par
00017     {\cf18 void} convert();\par
00018 {\cf17 private}:\par
00019     std::string inputDirectory;\par
00020     std::string outputDirectory;\par
00021     {\cf18 bool} useTempDirectory;\par
00022     std::vector<std::string> fileExtensions;\par
00023     std::string sourceEncoding;\par
00024     std::string targetEncoding;\par
00025     {\cf18 size_t} filesProcessed;\par
00026     {\cf18 size_t} filesConverted;\par
00027 \par
00028     {\cf18 void} loadSettings();\par
00029     {\cf18 void} convertDirectory({\cf17 const} std::filesystem::path& dir);\par
00030     {\cf18 void} convertFile({\cf17 const} std::filesystem::path& filepath);\par
00031     {\cf17 static} {\cf18 bool} iconvConvert({\cf17 const} std::string& input, std::string& output, {\cf17 const} std::string& fromCharset, {\cf17 const} std::string& toCharset);\par
00032     {\cf18 void} printStats() {\cf17 const};\par
00033     {\cf17 static} {\cf18 bool} is_utf8({\cf17 const} std::string& str);\par
00034 \};\par
00035 {\cf21 #endif }{\cf20 //BLANKS_ENCODINGCONVERTER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB Generated.h\par \pard\plain 
{\tc\tcl2 \v Generated.h}
{\xe \v Generated.h}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include "nlohmann/json.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF Generated.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_generated_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_generated_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Generated}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1, \'F1\'EE\'E4\'E5\'F0\'E6\'E0\'F9\'E8\'E9 \'F4\'F3\'ED\'EA\'F6\'E8\'FE \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 JSON-\'F4\'E0\'E9\'EB\'E0. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generated.h\par \pard\plain 
{\tc\tcl2 \v Generated.h}
{\xe \v Generated.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_GENERATED_H}\par
00002 {\cf21 #define BLANKS_GENERATED_H}\par
00003 \par
00004 {\cf21 #include <fstream>}\par
00005 {\cf21 #include "nlohmann/json.hpp"}\par
00006 \par
00011 {\cf17 class }Generated \{\par
00012 {\cf17 public}:\par
00013     {\cf18 void} generateJsonFile({\cf17 const} std::string& filename);\par
00014 \};\par
00015 \par
00016 {\cf21 #endif }{\cf20 //BLANKS_GENERATED_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB json.h\par \pard\plain 
{\tc\tcl2 \v json.h}
{\xe \v json.h}
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <nlohmann/json.hpp>}\par
{\f2 #include "ParserConfiguration.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF json.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "json_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "json_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b json}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F0\'E0\'E1\'EE\'F2\'FB \'F1 JSON-\'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E5\'E9. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
json.h\par \pard\plain 
{\tc\tcl2 \v json.h}
{\xe \v json.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_JSON_H}\par
00002 {\cf21 #define BLANKS_JSON_H}\par
00003 \par
00004 {\cf21 #include <nlohmann/json.hpp>}\par
00005 {\cf21 #include "ParserConfiguration.h"}\par
00006 \par
00013 {\cf17 class }json: {\cf17 public} ParserConfiguration\{\par
00014 {\cf17 public}:\par
00015     {\cf18 void} display() {\cf17 override};\par
00016 \par
00017     {\cf17 explicit} json({\cf17 const} std::string& config_file_path);\par
00018 \par
00019     std::filesystem::path getFilePath({\cf17 const} std::string& key) {\cf17 override};\par
00020 \par
00021     std::vector<std::filesystem::path> getFileList({\cf17 const} std::string& key, {\cf17 const} std::string& search) {\cf17 override};\par
00022 \par
00023     {\cf18 long} {\cf18 long} getInteger({\cf17 const} std::string &key);\par
00024 \par
00025 {\cf17 private}:\par
00026     nlohmann::json config_json;\par
00027 \};\par
00028 {\cf21 #endif }{\cf20 //BLANKS_JSON_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB ParserConfiguration.h\par \pard\plain 
{\tc\tcl2 \v ParserConfiguration.h}
{\xe \v ParserConfiguration.h}
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <memory>}\par
{\f2 #include <filesystem>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF ParserConfiguration.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_parser_configuration_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_parser_configuration_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParserConfiguration}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F1\'EE\'E7\'E4\'E0\'ED\'E8\'FF \'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'EA\'EE\'ED\'F4\'E8\'E3\'F3\'F0\'E0\'F6\'E8\'E8 \'EF\'E0\'F0\'F1\'E5\'F0\'E0. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ParserConfiguration.h\par \pard\plain 
{\tc\tcl2 \v ParserConfiguration.h}
{\xe \v ParserConfiguration.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_PARSERCONFIGURATION_H}\par
00002 {\cf21 #define BLANKS_PARSERCONFIGURATION_H}\par
00003 \par
00004 {\cf21 #include <string>}\par
00005 {\cf21 #include <vector>}\par
00006 {\cf21 #include <memory>}\par
00007 {\cf21 #include <filesystem>}\par
00008 \par
00016 {\cf17 class }ParserConfiguration \{\par
00017 {\cf17 public}:\par
00018     {\cf17 virtual} ~ParserConfiguration() = {\cf19 default};\par
00019 \par
00028     {\cf17 virtual} std::filesystem::path getFilePath({\cf17 const} std::string& key) = 0;\par
00029 \par
00039     {\cf17 virtual} std::vector<std::filesystem::path> getFileList({\cf17 const} std::string& key, {\cf17 const} std::string& search) = 0;\par
00040 \par
00047     {\cf17 virtual} {\cf18 void} display() = 0;\par
00048 \par
00059 {\cf20 /*}\par
00060 {\cf20     static std::unique_ptr<ParserConfiguration> create(const std::string& config_file_path);}\par
00061 {\cf20 */}\par
00062 \par
00083     {\cf17 virtual} {\cf18 long} {\cf18 long} getInteger({\cf17 const} std::string &key);\par
00084 \};\par
00085 {\cf21 #endif }{\cf20 //BLANKS_PARSERCONFIGURATION_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB Plug.h\par \pard\plain 
{\tc\tcl2 \v Plug.h}
{\xe \v Plug.h}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include "ParserConfiguration.h"}\par
{\f2 #include "json.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF Plug.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_plug_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_plug_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'F0\'EE\'F1\'F2\'F0\'E0\'ED\'F1\'F2\'E2\'E0 \'E8\'EC\'E5\'ED\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b parser}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::unique_ptr< {\b ParserConfiguration} > {\b parser::create} (const std::string &config_file_path)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Plug.h\par \pard\plain 
{\tc\tcl2 \v Plug.h}
{\xe \v Plug.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_PLUG_H}\par
00002 {\cf21 #define BLANKS_PLUG_H}\par
00003 \par
00004 {\cf21 #include <string>}\par
00005 {\cf21 #include "ParserConfiguration.h"}\par
00006 {\cf21 #include "json.h"}\par
00007 \par
00008 {\cf17 namespace }parser\{\par
00009     {\cf17 static} std::unique_ptr<ParserConfiguration> create({\cf17 const} std::string& config_file_path) \{\par
00010         {\cf19 if} (config_file_path.ends_with({\cf22 ".json"})) \{\par
00011             {\cf19 return} std::make_unique<json>(config_file_path);\par
00012         \}\par
00013         {\cf19 else} \{\par
00014             {\cf19 throw} std::runtime_error({\cf22 "Unsupported file type: "} + config_file_path);\par
00015         \}\par
00016     \}\par
00017 \}\par
00018 \par
00019 \par
00020 {\cf21 #endif }{\cf20 //BLANKS_PLUG_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB FileReader.h\par \pard\plain 
{\tc\tcl2 \v FileReader.h}
{\xe \v FileReader.h}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <filesystem>}\par
{\f2 #include <utility>}\par
{\f2 #include "string"}\par
{\f2 #include "fstream"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF FileReader.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_file_reader_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_file_reader_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FileReader}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F4\'E0\'E9\'EB\'E0. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileReader.h\par \pard\plain 
{\tc\tcl2 \v FileReader.h}
{\xe \v FileReader.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_FILEREADER_H}\par
00002 {\cf21 #define BLANKS_FILEREADER_H}\par
00003 \par
00004 {\cf21 #include <filesystem>}\par
00005 {\cf21 #include <utility>}\par
00006 {\cf21 #include "string"}\par
00007 {\cf21 #include "fstream"}\par
00008 \par
00015 {\cf17 class }FileReader \{\par
00016 {\cf17 public}:\par
00023     {\cf17 explicit} FileReader(std::filesystem::path file_path) : file_path_(std::move(file_path)) \{\}\par
00024 \par
00025 {\cf17 protected}:\par
00026     std::filesystem::path file_path_; \par
00037     {\cf17 static} std::string readLineString(std::ifstream &file);\par
00038 \par
00047     {\cf17 static} std::string trim({\cf17 const} std::string& s);\par
00048 \};\par
00049 \par
00050 {\cf21 #endif }{\cf20 //BLANKS_FILEREADER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB textReader.h\par \pard\plain 
{\tc\tcl2 \v textReader.h}
{\xe \v textReader.h}
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <regex>}\par
{\f2 #include "FileReader.h"}\par
{\f2 #include "../struct/nbr.h"}\par
{\f2 #include "../struct/point_data.h"}\par
{\f2 #include "../struct/tbl.h"}\par
{\f2 #include "../struct/cfm.h"}\par
{\f2 #include "../struct/zgt.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF textReader.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "text_reader_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "text_reader_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b textReader}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'F7\'F2\'E5\'ED\'E8\'FF \'F2\'E5\'EA\'F1\'F2\'EE\'E2\'EE\'E3\'EE \'F4\'E0\'E9\'EB\'E0. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
textReader.h\par \pard\plain 
{\tc\tcl2 \v textReader.h}
{\xe \v textReader.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_TEXTREADER_H}\par
00002 {\cf21 #define BLANKS_TEXTREADER_H}\par
00003 \par
00004 {\cf21 #include <regex>}\par
00005 {\cf21 #include "FileReader.h"}\par
00006 {\cf21 #include "../struct/nbr.h"}\par
00007 {\cf21 #include "../struct/point_data.h"}\par
00008 {\cf21 #include "../struct/tbl.h"}\par
00009 {\cf21 #include "../struct/cfm.h"}\par
00010 {\cf21 #include "../struct/zgt.h"}\par
00011 \par
00018 {\cf17 class }textReader : {\cf17 public} FileReader \{\par
00019 {\cf17 public}:\par
00027     {\cf17 explicit} textReader({\cf17 const} std::filesystem::path& file_path) : FileReader(file_path) \{\}\par
00028 \par
00035     {\cf18 void} read_nbr(nbr& data);\par
00036 \par
00043     {\cf18 void} read_point(point& data);\par
00044 \par
00051     {\cf18 void} read_tbl(tbl& data);\par
00052 \par
00059     {\cf18 void} read_cfm(cfm& data);\par
00060 \par
00067     {\cf18 void} read_zgt(zgt& data);\par
00068 \};\par
00069 \par
00070 {\cf21 #endif }{\cf20 //BLANKS_TEXTREADER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB RenderPDF.h\par \pard\plain 
{\tc\tcl2 \v RenderPDF.h}
{\xe \v RenderPDF.h}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <hpdf.h>}\par
{\f2 #include <filesystem>}\par
{\f2 #include <cmath>}\par
{\f2 #include "../struct/cfm.h"}\par
{\f2 #include "../struct/zgt.h"}\par
{\f2 #include "../struct/nbr.h"}\par
{\f2 #include "../struct/point_data.h"}\par
{\f2 #include "../struct/tbl.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF RenderPDF.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_render_p_d_f_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_render_p_d_f_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RenderPDF}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'EB\'E0\'F1\'F1 \'E4\'EB\'FF \'E3\'E5\'ED\'E5\'F0\'E0\'F6\'E8\'E8 PDF-\'F4\'E0\'E9\'EB\'E0. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RenderPDF.h\par \pard\plain 
{\tc\tcl2 \v RenderPDF.h}
{\xe \v RenderPDF.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANKS_RENDERPDF_H}\par
00002 {\cf21 #define BLANKS_RENDERPDF_H}\par
00003 \par
00004 {\cf21 #include <vector>}\par
00005 {\cf21 #include <hpdf.h>}\par
00006 {\cf21 #include <filesystem>}\par
00007 {\cf21 #include <cmath>}\par
00008 {\cf21 #include "../struct/cfm.h"}\par
00009 {\cf21 #include "../struct/zgt.h"}\par
00010 {\cf21 #include "../struct/nbr.h"}\par
00011 {\cf21 #include "../struct/point_data.h"}\par
00012 {\cf21 #include "../struct/tbl.h"}\par
00013 \par
00020 {\cf17 class }RenderPDF \{\par
00021 \par
00022     HPDF_Font loadFont({\cf17 const} std::string& fontPath);\par
00023     {\cf18 void} sortTblData();\par
00024     {\cf18 void} populatePointTbl();\par
00025     {\cf18 bool} checkForNewPage();\par
00026 \par
00027     {\cf18 void} createA3Page();\par
00028 \par
00029     {\cf18 void} setFontSize(HPDF_Page page, {\cf18 double} size);\par
00030 \par
00031     {\cf17 static} {\cf18 void} drawCircle(HPDF_Page page, {\cf18 double} x, {\cf18 double} y, {\cf18 double} radius);\par
00032 \par
00033     {\cf17 static} {\cf18 void} draw_line(HPDF_Page page, HPDF_REAL x1, HPDF_REAL y1, HPDF_REAL x2, HPDF_REAL y2);\par
00034 \par
00035     {\cf18 void} generate_Marks({\cf18 size_t} blank);\par
00036 \par
00037     {\cf18 void} drawDigitIndices(HPDF_Page page, {\cf18 size_t} blank);\par
00038 \par
00039     {\cf18 void} drawMainLines(HPDF_Page page, {\cf18 size_t} blank);\par
00040 \par
00041     {\cf18 void} drawAdditionalTicks(HPDF_Page page, {\cf18 size_t} blank);\par
00042 \par
00043     {\cf18 void} initializeData(cfm cfm_data, zgt zgt_data, {\cf17 const} std::vector<tbl> &tbl_data, nbr nbr_data, point point_data, std::filesystem::path fontPath);\par
00044     {\cf18 void} initializePDF();\par
00045     {\cf18 void} adjustFontSize();\par
00046 \par
00047     HPDF_REAL calculateYCoordinate(HPDF_REAL angle, {\cf18 size_t} blank);\par
00048     HPDF_REAL calculateXCoordinate(HPDF_REAL angle, {\cf18 double} textWidth, {\cf18 size_t} blank);\par
00049     std::string formatText({\cf18 int} i);\par
00050     {\cf18 void} drawText(HPDF_Page page, {\cf17 const} std::string& text, HPDF_REAL x, HPDF_REAL y);\par
00051 \par
00052 {\cf17 public}:\par
00053     {\cf18 void} generatePDF(std::string& filename);\par
00054 \par
00055     RenderPDF(cfm cfm_data, zgt zgt_data, {\cf17 const} std::vector<tbl> &tbl_data, nbr nbr_data, point point_data, std::filesystem::path fontPath);\par
00056 \par
00057     ~RenderPDF();\par
00058 \par
00059 {\cf17 private}:\par
00060     {\cf17 const} {\cf18 double} PI = 3.14159265358979323846; \par
00061     {\cf18 double} margitText = 1; \par
00062     {\cf18 bool} new_page = {\cf17 false}; \par
00063     std::filesystem::path fontPath_; \par
00065     HPDF_Doc pdf_; \par
00066     HPDF_Font font_; \par
00068     cfm cfm_data_; \par
00069     zgt zgt_data_; \par
00070     nbr nbr_data_; \par
00071     point point_data_; \par
00072     std::vector<tbl> tbl_data_; \par
00073     std::vector<size_t> point_tbl; \par
00074     std::vector<double> marks; \par
00075 \};\par
00076 {\cf21 #endif }{\cf20 //BLANKS_RENDERPDF_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB cfm.h\par \pard\plain 
{\tc\tcl2 \v cfm.h}
{\xe \v cfm.h}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <array>}\par
{\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF cfm.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cfm_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cfm_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cfm}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 cfm. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cfm.h\par \pard\plain 
{\tc\tcl2 \v cfm.h}
{\xe \v cfm.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANK_CFM_H}\par
00002 {\cf21 #define BLANK_CFM_H}\par
00003 \par
00004 {\cf21 #include <string>}\par
00005 {\cf21 #include <vector>}\par
00006 {\cf21 #include <array>}\par
00007 {\cf21 #include <iostream>}\par
00008 \par
00016 {\cf17 struct }cfm \{\par
00017     std::string header; \par
00018     std::string blank; \par
00019     std::vector<double> marks; \par
00020     std::array<int, 2> format; \par
00021     {\cf18 int} diameter; \par
00022     std::array<double, 2> small_tick; \par
00023     std::array<double, 2> big_tick; \par
00024     std::array<double, 4> digital_tick; \par
00025     {\cf18 int} digit_height; \par
00026     {\cf18 int} label_height; \par
00027     std::string tick_mask; \par
00035     {\cf18 void} display(){\cf17  const }\{\par
00036         std::cout << {\cf22 "Header: "} << header << {\cf22 "\\n"};\par
00037         std::cout << {\cf22 "Blank: "} << blank << {\cf22 "\\n"};\par
00038 \par
00039         std::cout << {\cf22 "Marks: "};\par
00040         {\cf19 for} ({\cf17 auto} val : marks)\par
00041             std::cout << val << {\cf22 " "};\par
00042         std::cout << {\cf22 "\\n"};\par
00043 \par
00044         std::cout << {\cf22 "Format: "} << format[0] << {\cf22 " "} << format[1] << {\cf22 "\\n"};\par
00045 \par
00046         std::cout << {\cf22 "Diameter: "} << diameter << {\cf22 "\\n"};\par
00047 \par
00048         std::cout << {\cf22 "Small Tick: "} << small_tick[0] << {\cf22 " "} << small_tick[1] << {\cf22 "\\n"};\par
00049 \par
00050         std::cout << {\cf22 "Big Tick: "} << big_tick[0] << {\cf22 " "} << big_tick[1] << {\cf22 "\\n"};\par
00051 \par
00052         std::cout << {\cf22 "Digital Tick: "} << digital_tick[0] << {\cf22 " "} << digital_tick[1] << {\cf22 " "} << digital_tick[2] << {\cf22 " "} << digital_tick[3] << {\cf22 "\\n"};\par
00053 \par
00054         std::cout << {\cf22 "Digit Height: "} << digit_height << {\cf22 "\\n"};\par
00055 \par
00056         std::cout << {\cf22 "Label Height: "} << label_height << {\cf22 "\\n"};\par
00057 \par
00058         std::cout << {\cf22 "Tick Mask: "} << tick_mask << {\cf22 "\\n"};\par
00059     \}\par
00060 \};\par
00061 {\cf21 #endif }{\cf20 //BLANK_CFM_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB nbr.h\par \pard\plain 
{\tc\tcl2 \v nbr.h}
{\xe \v nbr.h}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <map>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF nbr.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nbr_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nbr_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b nbr}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 nbr. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nbr.h\par \pard\plain 
{\tc\tcl2 \v nbr.h}
{\xe \v nbr.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANK_NBR_H}\par
00002 {\cf21 #define BLANK_NBR_H}\par
00003 \par
00004 {\cf21 #include <map>}\par
00005 {\cf21 #include <string>}\par
00006 \par
00014 {\cf17 struct }nbr\{\par
00015     std::map<size_t, std::string> icon; \par
00017 \};\par
00018 {\cf21 #endif }{\cf20 //BLANK_NBR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB point_data.h\par \pard\plain 
{\tc\tcl2 \v point_data.h}
{\xe \v point_data.h}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "iostream"}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF point_data.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__data_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__data_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b point}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 \'F2\'EE\'F7\'E5\'EA. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
point_data.h\par \pard\plain 
{\tc\tcl2 \v point_data.h}
{\xe \v point_data.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANK_POINT_DATA_H}\par
00002 {\cf21 #define BLANK_POINT_DATA_H}\par
00003 {\cf21 #include "iostream"}\par
00004 {\cf21 #include <vector>}\par
00010 {\cf17 struct }point \{\par
00011     std::vector<std::pair<double, double>> coordinates;\par
00015     {\cf18 void} display()\{\par
00016         {\cf19 for} ({\cf17 const} {\cf17 auto}& coord : coordinates) \{\par
00017             std::cout << {\cf22 "("} << coord.first << {\cf22 "; "} << coord.second << {\cf22 ")"} << std::endl;\par
00018         \}\par
00019     \}\par
00020 \};\par
00021 {\cf21 #endif }{\cf20 //BLANK_POINT_DATA_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB tbl.h\par \pard\plain 
{\tc\tcl2 \v tbl.h}
{\xe \v tbl.h}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF tbl.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tbl_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tbl_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tbl}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E0\'E1\'EB\'E8\'F6\'FB. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tbl.h\par \pard\plain 
{\tc\tcl2 \v tbl.h}
{\xe \v tbl.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANK_TBL_H}\par
00002 {\cf21 #define BLANK_TBL_H}\par
00003 \par
00004 {\cf21 #include <string>}\par
00005 {\cf21 #include <vector>}\par
00006 {\cf21 #include <iostream>}\par
00007 \par
00015 {\cf17 struct }tbl \{\par
00016     {\cf18 int} position;\par
00017     std::string model;\par
00018     std::vector<std::vector<double>> measurements;\par
00019 \par
00023     {\cf18 void} display(){\cf17  const }\{\par
00024         std::cout << {\cf22 "Position: "} << position << {\cf22 "\\n"};\par
00025         std::cout << {\cf22 "Model: "} << model << {\cf22 "\\n"};\par
00026 \par
00027         std::cout << {\cf22 "Measurements:\\n"};\par
00028         {\cf19 for} ({\cf17 const} {\cf17 auto}& row : measurements) \{\par
00029             {\cf19 for} ({\cf17 const} {\cf17 auto}& value : row) \{\par
00030                 std::cout << value << {\cf22 " "};\par
00031             \}\par
00032             std::cout << {\cf22 "\\n"};\par
00033         \}\par
00034     \}\par
00035 \};\par
00036 {\cf21 #endif }{\cf20 //BLANK_TBL_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB zgt.h\par \pard\plain 
{\tc\tcl2 \v zgt.h}
{\xe \v zgt.h}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <array>}\par
{\f2 #include <iostream>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF zgt.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "zgt_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'F4\'E0\'E9\'EB\'EE\'E2, \'E2 \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'F2\'F1\'FF \'FD\'F2\'EE\'F2 \'F4\'E0\'E9\'EB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "zgt_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CA\'EB\'E0\'F1\'F1\'FB\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b zgt}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D1\'F2\'F0\'F3\'EA\'F2\'F3\'F0\'E0 \'E4\'EB\'FF \'F5\'F0\'E0\'ED\'E5\'ED\'E8\'FF \'E4\'E0\'ED\'ED\'FB\'F5 \'F2\'E8\'EF\'E0 zgt. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
zgt.h\par \pard\plain 
{\tc\tcl2 \v zgt.h}
{\xe \v zgt.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef BLANK_ZGT_H}\par
00002 {\cf21 #define BLANK_ZGT_H}\par
00003 \par
00004 {\cf21 #include <vector>}\par
00005 {\cf21 #include <array>}\par
00006 {\cf21 #include <iostream>}\par
00007 \par
00015 {\cf17 struct }zgt\{\par
00016     {\cf18 double} diameter; \par
00017     {\cf18 double} center_hole_diameter; \par
00018     std::vector<double> mounting_holes; \par
00019     std::vector<double> marker_position; \par
00020     std::array<double, 2> font_serial_number\{\}; \par
00021     std::array<double, 3> stop_position\{\}; \par
00030     {\cf18 void} display(){\cf17  const }\{\par
00031         std::cout << {\cf22 "Diameter: "} << diameter << {\cf22 "\\n"};\par
00032         std::cout << {\cf22 "Center Hole Diameter: "} << center_hole_diameter << {\cf22 "\\n"};\par
00033 \par
00034         std::cout << {\cf22 "Mounting Holes: "};\par
00035         {\cf19 for} ({\cf17 auto} val : mounting_holes)\par
00036             std::cout << val << {\cf22 " "};\par
00037         std::cout << {\cf22 "\\n"};\par
00038 \par
00039         std::cout << {\cf22 "Marker Position: "};\par
00040         {\cf19 for} ({\cf17 auto} val : marker_position)\par
00041             std::cout << val << {\cf22 " "};\par
00042         std::cout << {\cf22 "\\n"};\par
00043 \par
00044         std::cout << {\cf22 "Font Serial Number: "} << font_serial_number[0] << {\cf22 " "} << font_serial_number[1] << {\cf22 "\\n"};\par
00045 \par
00046         std::cout << {\cf22 "Stop Position: "} << stop_position[0] << {\cf22 " "} << stop_position[1] << {\cf22 " "} << stop_position[2] << {\cf22 "\\n"};\par
00047     \}\par
00048 \};\par
00049 {\cf21 #endif }{\cf20 //BLANK_ZGT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB main.cpp\par \pard\plain 
{\tc\tcl2 \v main.cpp}
{\xe \v main.cpp}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "include/Converting/EncodingConverter.h"}\par
{\f2 #include "include/CommandLine/CommandLine.h"}\par
{\f2 #include "include/struct/cfm.h"}\par
{\f2 #include "include/struct/zgt.h"}\par
{\f2 #include "include/Reader/textReader.h"}\par
{\f2 #include "include/Generated/Generated.h"}\par
{\f2 #include "include/RenderPDF/RenderPDF.h"}\par
{\f2 #include "include/Parser/Plug.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF main.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_duration} (const auto &start)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::filesystem::path {\b find_file_by_name} (const std::filesystem::path &directory, std::string &model_name, const std::string &extension)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getCurrentDateTime} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D4\'F3\'ED\'EA\'F6\'E8\'E8\par
\pard\plain 
{\xe \v find_file_by_name\:main.cpp}
{\xe \v main.cpp\:find_file_by_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::filesystem::path find_file_by_name (const std::filesystem::path &  {\i directory}, std::string &  {\i model_name}, const std::string &  {\i extension})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b main.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 19}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00019                                                                                                                            \{\par
00020     {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : std::filesystem::recursive_directory_iterator(directory)) \{\par
00021         {\cf19 if} (entry.is_regular_file()) \{\par
00022             {\cf17 const} {\cf17 auto}& file_name = entry.path().filename().string();\par
00023             {\cf17 const} {\cf17 auto}& file_extension = entry.path().extension().string();\par
00024             {\cf19 if} (file_name == model_name + file_extension && file_extension == extension) \{\par
00025                 std::filesystem::path path_str = entry.path();\par
00026                 {\cf20 //std::replace(path_str.string().begin(), path_str.string().end(), '\\\\', '/');}\par
00027                 {\cf19 return} path_str;\par
00028             \}\par
00029         \}\par
00030     \}\par
00031     {\cf19 throw} std::runtime_error({\cf22 "File not found: "} + model_name);\par
00032 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp_a17fe4a740253ee0f9a2dbe3821cb02b4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCurrentDateTime\:main.cpp}
{\xe \v main.cpp\:getCurrentDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string getCurrentDateTime ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b main.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 34}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00034                                \{\par
00035     std::time_t currentTime = std::time({\cf17 nullptr});\par
00036     std::tm* localTime = std::localtime(&currentTime);\par
00037 \par
00038     {\cf18 char} dateTimeString[20];\par
00039     std::strftime(dateTimeString, {\cf17 sizeof}(dateTimeString), {\cf22 "%Y-%m-%d_%H-%M-%S"}, localTime);\par
00040 \par
00041     {\cf19 return} std::string(dateTimeString);\par
00042 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp_a333b5413e0cb25ebfc2919e897c49e0c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b main.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 44}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00044                                  \{\par
00045     setlocale(LC_ALL, {\cf22 "ru_RU.UTF-8"});\par
00046     {\cf17 auto} start = std::chrono::high_resolution_clock::now();\par
00047     \{\par
00048         CommandLine cmd(argc, argv);\par
00049         {\cf17 auto} command_type = cmd.get_command_type();\par
00050         {\cf17 auto} args = cmd.get_args();\par
00051 \par
00052         {\cf19 if}(command_type == CommandLine::CommandType::GEN)\{\par
00053             Generated gen;\par
00054             gen.generateJsonFile({\cf22 "setting.json"});\par
00055         \}\par
00056 \par
00057         {\cf19 if}(command_type == CommandLine::CommandType::UNKNOWN)\{\par
00058             print_duration(start);\par
00059             std::cout << {\cf22 "\'CD\'E5\'E8\'E7\'E2\'E5\'F1\'F2\'ED\'E0\'FF \'EA\'EE\'EC\'E0\'ED\'E4\'E0\\n"};\par
00060             {\cf19 return} -1;\par
00061         \}\par
00062 \par
00063         {\cf19 if}(command_type == CommandLine::CommandType::CONVERT)\{\par
00064             {\cf19 if}(args.size() == 1)\{\par
00065                 EncodingConverter converter(args[0]);\par
00066                 converter.convert();\par
00067             \} {\cf19 else} {\cf19 if} (args.size() == 2) \{\par
00068                 EncodingConverter converter(args[0], args[1]);\par
00069                 converter.convert();\par
00070             \} {\cf19 else} \{\par
00071                 std::cerr << {\cf22 "\'CD\'E5\'E2\'E5\'F0\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2."} << std::endl;\par
00072                 {\cf19 return} 1;\par
00073             \}\par
00074         \}\par
00075 \par
00076         {\cf19 if}(CommandLine::CommandType::PRINT == command_type)\{\par
00077             {\cf17 auto} config_parser = parser::create(args[0]);\par
00078             {\cf17 const} {\cf17 auto} debug = config_parser->getInteger({\cf22 "debug"});\par
00079 \par
00080             {\cf17 auto} tbl_directory = config_parser->getFilePath({\cf22 "tbl"});\par
00081             {\cf17 auto} tbl_files = config_parser->getFileList({\cf22 "tbl"}, {\cf22 "scale"});\par
00082             std::vector<tbl> tbl_data;\par
00083             {\cf19 for} ({\cf17 auto}& tbl_file : tbl_files) \{\par
00084                 std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 TBL:\\t"} << tbl_file << std::endl;\par
00085                 tbl temp_tbl;\par
00086                 textReader(tbl_file).read_tbl(temp_tbl);\par
00087                 tbl_data.push_back(temp_tbl);\par
00088                 {\cf19 if}(debug)\{\par
00089                     temp_tbl.display();\par
00090                 \}\par
00091             \}\par
00092 \par
00093             {\cf17 auto} cfm_file = config_parser->getFilePath({\cf22 "cfm"});\par
00094             {\cf17 auto} cfm_file_path = find_file_by_name(cfm_file, tbl_data[0].model, {\cf22 ".cfm"});\par
00095             std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 CFM:\\t"} << cfm_file_path << std::endl;\par
00096             cfm cfm_data;\par
00097             textReader(cfm_file_path).read_cfm(cfm_data);\par
00098             {\cf19 if}(debug)\{\par
00099                 cfm_data.display();\par
00100             \}\par
00101 \par
00102             {\cf17 auto} point_file = config_parser->getFilePath({\cf22 "point"});\par
00103             {\cf17 auto} point_file_path = find_file_by_name(point_file, tbl_data[0].model, {\cf22 ".point"});\par
00104             std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 \'ED\'E0\'E1\'EE\'F0\'E0 \'F2\'EE\'F7\'E5\'EA:\\t"} << point_file_path << std::endl;\par
00105             point point_data;\par
00106             textReader(point_file_path).read_point(point_data);\par
00107             {\cf19 if}(debug)\{\par
00108                 point_data.display();\par
00109             \}\par
00110 \par
00111             {\cf17 auto} zgt_file = config_parser->getFilePath({\cf22 "zgt"});\par
00112             {\cf17 auto} zgt_file_path = find_file_by_name(zgt_file, cfm_data.blank, {\cf22 ".\'E7\'E3\'F2"});\par
00113             std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 \'E7\'E0\'E3\'EE\'F2\'EE\'E2\'EE\'EA:\\t"} << zgt_file_path << std::endl;\par
00114             zgt zgt_data;\par
00115             textReader(zgt_file_path).read_zgt(zgt_data);\par
00116             {\cf19 if}(debug)\{\par
00117                 zgt_data.display();\par
00118             \}\par
00119             {\cf20 //std::cout << "\'D7\'F2\'E5\'ED\'E8\'E5 \'ED\'E0\'E1\'EE\'F0\'EE\'E2 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'E9:\\t" << nbr_file_path << std::endl;}\par
00120             {\cf17 auto} nbr_file = config_parser->getFilePath({\cf22 "nbr"});\par
00121             {\cf20 //auto nbr_file_path = find_file_by_name(zgt_file, cfm_data.blank, ".\'ED\'E1\'F0");}\par
00122             nbr nbr_data;\par
00123             {\cf20 //textReader(nbr_file_path).read_nbr(nbr_data);}\par
00124             {\cf19 if}(debug == 0)\{\par
00125             \}\par
00126 \par
00127             RenderPDF pdf(cfm_data, zgt_data, tbl_data, nbr_data, point_data, config_parser->getFilePath({\cf22 "fontPath"}));\par
00128             std::string filename = getCurrentDateTime() + {\cf22 "("} + cfm_data.blank + {\cf22 ")"};\par
00129             pdf.generatePDF(filename);\par
00130 \par
00131         \}\par
00132 \par
00133     \}\par
00134 \par
00135     print_duration(start);\par
00136 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'EE\'E2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp_a0ddf1224851353fc92bfbff6f499fa97_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_duration\:main.cpp}
{\xe \v main.cpp\:print_duration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_duration (const auto &  {\i start})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D1\'EC. \'EE\'EF\'F0\'E5\'E4\'E5\'EB\'E5\'ED\'E8\'E5 \'E2 \'F4\'E0\'E9\'EB\'E5 {\b main.cpp} \'F1\'F2\'F0\'EE\'EA\'E0 {\b 11}}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00011                                        \{\par
00012     {\cf17 auto} stop = std::chrono::high_resolution_clock::now();\par
00013     {\cf17 auto} duration_microseconds = std::chrono::duration_cast<std::chrono::microseconds>(stop - start);\par
00014     {\cf17 auto} duration_milliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);\par
00015     std::cout << {\cf22 "\'C2\'F0\'E5\'EC\'FF \'E2\'FB\'EF\'EE\'EB\'ED\'E5\'ED\'E8\'FF: "} << duration_microseconds.count() << {\cf22 " microseconds"} << std::endl;\par
00016     std::cout << {\cf22 "\'C2\'F0\'E5\'EC\'FF \'E2\'FB\'EF\'EE\'EB\'ED\'E5\'ED\'E8\'FF: "} << duration_milliseconds.count() << {\cf22 " milliseconds"} << std::endl;\par
00017 \}\par
}
\'C3\'F0\'E0\'F4 \'E2\'FB\'E7\'EE\'E2\'E0 \'F4\'F3\'ED\'EA\'F6\'E8\'E8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp_ab97d7330981023823ad0d4017ddbec3b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include "include/Converting/EncodingConverter.h"}\par
00003 {\cf21 #include "include/CommandLine/CommandLine.h"}\par
00004 {\cf21 #include "include/struct/cfm.h"}\par
00005 {\cf21 #include "include/struct/zgt.h"}\par
00006 {\cf21 #include "include/Reader/textReader.h"}\par
00007 {\cf21 #include "include/Generated/Generated.h"}\par
00008 {\cf21 #include "include/RenderPDF/RenderPDF.h"}\par
00009 {\cf21 #include "include/Parser/Plug.h"}\par
00010 \par
00011 {\cf18 void} print_duration({\cf17 const} {\cf17 auto}& start) \{\par
00012     {\cf17 auto} stop = std::chrono::high_resolution_clock::now();\par
00013     {\cf17 auto} duration_microseconds = std::chrono::duration_cast<std::chrono::microseconds>(stop - start);\par
00014     {\cf17 auto} duration_milliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(stop - start);\par
00015     std::cout << {\cf22 "\'C2\'F0\'E5\'EC\'FF \'E2\'FB\'EF\'EE\'EB\'ED\'E5\'ED\'E8\'FF: "} << duration_microseconds.count() << {\cf22 " microseconds"} << std::endl;\par
00016     std::cout << {\cf22 "\'C2\'F0\'E5\'EC\'FF \'E2\'FB\'EF\'EE\'EB\'ED\'E5\'ED\'E8\'FF: "} << duration_milliseconds.count() << {\cf22 " milliseconds"} << std::endl;\par
00017 \}\par
00018 \par
00019 std::filesystem::path find_file_by_name({\cf17 const} std::filesystem::path& directory, std::string& model_name, {\cf17 const} std::string& extension) \{\par
00020     {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : std::filesystem::recursive_directory_iterator(directory)) \{\par
00021         {\cf19 if} (entry.is_regular_file()) \{\par
00022             {\cf17 const} {\cf17 auto}& file_name = entry.path().filename().string();\par
00023             {\cf17 const} {\cf17 auto}& file_extension = entry.path().extension().string();\par
00024             {\cf19 if} (file_name == model_name + file_extension && file_extension == extension) \{\par
00025                 std::filesystem::path path_str = entry.path();\par
00026                 {\cf20 //std::replace(path_str.string().begin(), path_str.string().end(), '\\\\', '/');}\par
00027                 {\cf19 return} path_str;\par
00028             \}\par
00029         \}\par
00030     \}\par
00031     {\cf19 throw} std::runtime_error({\cf22 "File not found: "} + model_name);\par
00032 \}\par
00033 \par
00034 std::string getCurrentDateTime() \{\par
00035     std::time_t currentTime = std::time({\cf17 nullptr});\par
00036     std::tm* localTime = std::localtime(&currentTime);\par
00037 \par
00038     {\cf18 char} dateTimeString[20];\par
00039     std::strftime(dateTimeString, {\cf17 sizeof}(dateTimeString), {\cf22 "%Y-%m-%d_%H-%M-%S"}, localTime);\par
00040 \par
00041     {\cf19 return} std::string(dateTimeString);\par
00042 \}\par
00043 \par
00044 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00045     setlocale(LC_ALL, {\cf22 "ru_RU.UTF-8"});\par
00046     {\cf17 auto} start = std::chrono::high_resolution_clock::now();\par
00047     \{\par
00048         CommandLine cmd(argc, argv);\par
00049         {\cf17 auto} command_type = cmd.get_command_type();\par
00050         {\cf17 auto} args = cmd.get_args();\par
00051 \par
00052         {\cf19 if}(command_type == CommandLine::CommandType::GEN)\{\par
00053             Generated gen;\par
00054             gen.generateJsonFile({\cf22 "setting.json"});\par
00055         \}\par
00056 \par
00057         {\cf19 if}(command_type == CommandLine::CommandType::UNKNOWN)\{\par
00058             print_duration(start);\par
00059             std::cout << {\cf22 "\'CD\'E5\'E8\'E7\'E2\'E5\'F1\'F2\'ED\'E0\'FF \'EA\'EE\'EC\'E0\'ED\'E4\'E0\\n"};\par
00060             {\cf19 return} -1;\par
00061         \}\par
00062 \par
00063         {\cf19 if}(command_type == CommandLine::CommandType::CONVERT)\{\par
00064             {\cf19 if}(args.size() == 1)\{\par
00065                 EncodingConverter converter(args[0]);\par
00066                 converter.convert();\par
00067             \} {\cf19 else} {\cf19 if} (args.size() == 2) \{\par
00068                 EncodingConverter converter(args[0], args[1]);\par
00069                 converter.convert();\par
00070             \} {\cf19 else} \{\par
00071                 std::cerr << {\cf22 "\'CD\'E5\'E2\'E5\'F0\'ED\'EE\'E5 \'EA\'EE\'EB\'E8\'F7\'E5\'F1\'F2\'E2\'EE \'E0\'F0\'E3\'F3\'EC\'E5\'ED\'F2\'EE\'E2."} << std::endl;\par
00072                 {\cf19 return} 1;\par
00073             \}\par
00074         \}\par
00075 \par
00076         {\cf19 if}(CommandLine::CommandType::PRINT == command_type)\{\par
00077             {\cf17 auto} config_parser = parser::create(args[0]);\par
00078             {\cf17 const} {\cf17 auto} debug = config_parser->getInteger({\cf22 "debug"});\par
00079 \par
00080             {\cf17 auto} tbl_directory = config_parser->getFilePath({\cf22 "tbl"});\par
00081             {\cf17 auto} tbl_files = config_parser->getFileList({\cf22 "tbl"}, {\cf22 "scale"});\par
00082             std::vector<tbl> tbl_data;\par
00083             {\cf19 for} ({\cf17 auto}& tbl_file : tbl_files) \{\par
00084                 std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 TBL:\\t"} << tbl_file << std::endl;\par
00085                 tbl temp_tbl;\par
00086                 textReader(tbl_file).read_tbl(temp_tbl);\par
00087                 tbl_data.push_back(temp_tbl);\par
00088                 {\cf19 if}(debug)\{\par
00089                     temp_tbl.display();\par
00090                 \}\par
00091             \}\par
00092 \par
00093             {\cf17 auto} cfm_file = config_parser->getFilePath({\cf22 "cfm"});\par
00094             {\cf17 auto} cfm_file_path = find_file_by_name(cfm_file, tbl_data[0].model, {\cf22 ".cfm"});\par
00095             std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 CFM:\\t"} << cfm_file_path << std::endl;\par
00096             cfm cfm_data;\par
00097             textReader(cfm_file_path).read_cfm(cfm_data);\par
00098             {\cf19 if}(debug)\{\par
00099                 cfm_data.display();\par
00100             \}\par
00101 \par
00102             {\cf17 auto} point_file = config_parser->getFilePath({\cf22 "point"});\par
00103             {\cf17 auto} point_file_path = find_file_by_name(point_file, tbl_data[0].model, {\cf22 ".point"});\par
00104             std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 \'ED\'E0\'E1\'EE\'F0\'E0 \'F2\'EE\'F7\'E5\'EA:\\t"} << point_file_path << std::endl;\par
00105             point point_data;\par
00106             textReader(point_file_path).read_point(point_data);\par
00107             {\cf19 if}(debug)\{\par
00108                 point_data.display();\par
00109             \}\par
00110 \par
00111             {\cf17 auto} zgt_file = config_parser->getFilePath({\cf22 "zgt"});\par
00112             {\cf17 auto} zgt_file_path = find_file_by_name(zgt_file, cfm_data.blank, {\cf22 ".\'E7\'E3\'F2"});\par
00113             std::cout << {\cf22 "\'D7\'F2\'E5\'ED\'E8\'E5 \'E7\'E0\'E3\'EE\'F2\'EE\'E2\'EE\'EA:\\t"} << zgt_file_path << std::endl;\par
00114             zgt zgt_data;\par
00115             textReader(zgt_file_path).read_zgt(zgt_data);\par
00116             {\cf19 if}(debug)\{\par
00117                 zgt_data.display();\par
00118             \}\par
00119             {\cf20 //std::cout << "\'D7\'F2\'E5\'ED\'E8\'E5 \'ED\'E0\'E1\'EE\'F0\'EE\'E2 \'E8\'E7\'EE\'E1\'F0\'E0\'E6\'E5\'ED\'E8\'E9:\\t" << nbr_file_path << std::endl;}\par
00120             {\cf17 auto} nbr_file = config_parser->getFilePath({\cf22 "nbr"});\par
00121             {\cf20 //auto nbr_file_path = find_file_by_name(zgt_file, cfm_data.blank, ".\'ED\'E1\'F0");}\par
00122             nbr nbr_data;\par
00123             {\cf20 //textReader(nbr_file_path).read_nbr(nbr_data);}\par
00124             {\cf19 if}(debug == 0)\{\par
00125             \}\par
00126 \par
00127             RenderPDF pdf(cfm_data, zgt_data, tbl_data, nbr_data, point_data, config_parser->getFilePath({\cf22 "fontPath"}));\par
00128             std::string filename = getCurrentDateTime() + {\cf22 "("} + cfm_data.blank + {\cf22 ")"};\par
00129             pdf.generatePDF(filename);\par
00130 \par
00131         \}\par
00132 \par
00133     \}\par
00134 \par
00135     print_duration(start);\par
00136 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB CommandLine.cpp\par \pard\plain 
{\tc\tcl2 \v CommandLine.cpp}
{\xe \v CommandLine.cpp}
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/CommandLine/CommandLine.h"}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF CommandLine.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_command_line_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CommandLine.cpp\par \pard\plain 
{\tc\tcl2 \v CommandLine.cpp}
{\xe \v CommandLine.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/CommandLine/CommandLine.h"}\par
00002 {\cf21 #include <string>}\par
00003 {\cf21 #include <vector>}\par
00004 \par
00015 CommandLine::CommandLine({\cf18 int} argc, {\cf18 char} *argv[]) \{\par
00016     {\cf19 if} (argc < 2) \{\par
00017         command_type = CommandType::UNKNOWN;\par
00018         {\cf19 return};\par
00019     \}\par
00020 \par
00021     std::string command(argv[1]);\par
00022     {\cf19 if} (command == {\cf22 "convert"}) \{\par
00023         command_type = CommandType::CONVERT;\par
00024     \}\par
00025     {\cf19 else} {\cf19 if} (command == {\cf22 "print"}) \{\par
00026         command_type = CommandType::PRINT;\par
00027     \}\par
00028     {\cf19 else} {\cf19 if} (command == {\cf22 "gen"}) \{\par
00029         command_type = CommandType::GEN;\par
00030     \}\par
00031     {\cf19 else} \{\par
00032         command_type = CommandType::UNKNOWN;\par
00033     \}\par
00034 \par
00035     {\cf19 for} ({\cf18 int} i = 2; i < argc; ++i) \{\par
00036         args.emplace_back(argv[i]);\par
00037     \}\par
00038 \}\par
00039 \par
00047 CommandLine::CommandType CommandLine::get_command_type(){\cf17  const }\{\par
00048     {\cf19 return} command_type;\par
00049 \}\par
00050 \par
00058 std::vector<std::string> CommandLine::get_args(){\cf17  const }\{\par
00059     {\cf19 return} args;\par
00060 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB EncodingConverter.cpp\par \pard\plain 
{\tc\tcl2 \v EncodingConverter.cpp}
{\xe \v EncodingConverter.cpp}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/converting/EncodingConverter.h"}\par
{\f2 #include "iostream"}\par
{\f2 #include <utility>}\par
{\f2 #include "iconv.h"}\par
{\f2 #include "filesystem"}\par
{\f2 #include "fstream"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF EncodingConverter.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_encoding_converter_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EncodingConverter.cpp\par \pard\plain 
{\tc\tcl2 \v EncodingConverter.cpp}
{\xe \v EncodingConverter.cpp}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/converting/EncodingConverter.h"}\par
00002 {\cf21 #include "iostream"}\par
00003 {\cf21 #include <utility>}\par
00004 {\cf21 #include "iconv.h"}\par
00005 {\cf21 #include "filesystem"}\par
00006 {\cf21 #include "fstream"}\par
00007 \par
00017 EncodingConverter::EncodingConverter(std::string inputDir, {\cf17 const} std::string& outputDir)\par
00018         : inputDirectory(std::move(inputDir)), outputDirectory(outputDir), useTempDirectory(outputDir.empty()) \{\par
00019     loadSettings(), filesConverted = 0, filesProcessed = 0;\par
00020 \}\par
00021 \par
00028 {\cf18 void} EncodingConverter::loadSettings()\{\par
00029     sourceEncoding = {\cf22 "WINDOWS-1251"};\par
00030     targetEncoding = {\cf22 "UTF-8"};\par
00031 \par
00032     {\cf20 // \'D1\'EE\'E7\'E4\'E0\'E5\'EC \'EC\'E0\'F1\'F1\'E8\'E2 \'E8\'F2\'E5\'F0\'E0\'F2\'EE\'F0\'EE\'E2 \'ED\'E0 \'F1\'F2\'F0\'EE\'EA\'E8, \'EA\'EE\'F2\'EE\'F0\'FB\'E5 \'ED\'F3\'E6\'ED\'EE \'E4\'EE\'E1\'E0\'E2\'E8\'F2\'FC}\par
00033     std::string extensions[] = \{ {\cf22 ".tbl"}, {\cf22 ".\'ED\'E1\'F0"}, {\cf22 ".\'E7\'E3\'F2"}, {\cf22 ".cfm"} \};\par
00034     {\cf18 size_t} numExtensions = {\cf17 sizeof}(extensions) / {\cf17 sizeof}(extensions[0]);\par
00035 \par
00036     {\cf20 // \'C8\'F1\'EF\'EE\'EB\'FC\'E7\'F3\'E5\'EC \'EA\'EE\'ED\'F1\'F2\'F0\'F3\'EA\'F2\'EE\'F0 std::vector, \'EF\'F0\'E8\'ED\'E8\'EC\'E0\'FE\'F9\'E8\'E9 \'E4\'E2\'E0 \'E8\'F2\'E5\'F0\'E0\'F2\'EE\'F0\'E0}\par
00037     fileExtensions.insert(fileExtensions.end(), extensions, extensions + numExtensions);\par
00038 \}\par
00039 \par
00046 {\cf18 void} EncodingConverter::convert() \{\par
00047     std::filesystem::path inputPath(inputDirectory);\par
00048     convertDirectory(inputPath);\par
00049     printStats();\par
00050 \}\par
00051 \par
00061 {\cf18 void} EncodingConverter::convertDirectory({\cf17 const} std::filesystem::path& dir) \{\par
00062     {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : std::filesystem::recursive_directory_iterator(dir)) \{\par
00063         {\cf19 if} (entry.is_regular_file()) \{\par
00064             filesProcessed++;\par
00065             std::filesystem::path relativePath = std::filesystem::relative(entry, inputDirectory);\par
00066             std::filesystem::path outputPath = useTempDirectory ? std::filesystem::temp_directory_path() / relativePath : outputDirectory / relativePath;\par
00067 \par
00068             {\cf19 if} (std::find(fileExtensions.begin(), fileExtensions.end(), entry.path().extension()) != fileExtensions.end()) \{\par
00069                 convertFile(entry.path());\par
00070             \} {\cf19 else} {\cf19 if} (!outputDirectory.empty()) \{\par
00071                 {\cf20 // \'C5\'F1\'EB\'E8 \'F4\'E0\'E9\'EB \'E8\'EC\'E5\'E5\'F2 \'E4\'F0\'F3\'E3\'EE\'E5 \'F0\'E0\'F1\'F8\'E8\'F0\'E5\'ED\'E8\'E5 \'E8 outputDirectory \'F3\'EA\'E0\'E7\'E0\'ED\'E0, \'EA\'EE\'EF\'E8\'F0\'F3\'E5\'EC \'E5\'E3\'EE}\par
00072                 std::filesystem::create_directories(outputPath.parent_path());\par
00073                 std::filesystem::copy_file(entry, outputPath, std::filesystem::copy_options::overwrite_existing);\par
00074             \}\par
00075         \}\par
00076     \}\par
00077 \}\par
00078 \par
00090 {\cf18 bool} EncodingConverter::iconvConvert({\cf17 const} std::string& input, std::string& output, {\cf17 const} std::string& fromCharset, {\cf17 const} std::string& toCharset) \{\par
00091     iconv_t cd = iconv_open(toCharset.c_str(), fromCharset.c_str());\par
00092     {\cf19 if} (cd == (iconv_t)-1) \{\par
00093         perror({\cf22 "iconv_open"});\par
00094         {\cf19 return} {\cf17 false};\par
00095     \}\par
00096 \par
00097     std::vector<char> inBuf(input.begin(), input.end());\par
00098     {\cf18 size_t} inLeft = inBuf.size();\par
00099     {\cf18 size_t} outLeft = inLeft * 4;\par
00100     std::vector<char> outBuf(outLeft);\par
00101 \par
00102     {\cf18 char}* inPtr = inBuf.data();\par
00103     {\cf18 char}* outPtr = outBuf.data();\par
00104 \par
00105     {\cf19 while} (inLeft > 0) \{\par
00106         {\cf18 size_t} result = iconv(cd, &inPtr, &inLeft, &outPtr, &outLeft);\par
00107         {\cf19 if} (result == ({\cf18 size_t})-1) \{\par
00108             iconv_close(cd);\par
00109             {\cf19 return} {\cf17 false};\par
00110         \}\par
00111     \}\par
00112 \par
00113     iconv_close(cd);\par
00114     outBuf.resize(outBuf.size() - outLeft);\par
00115 \par
00116     output.assign(outBuf.begin(), outBuf.end());\par
00117     {\cf19 return} {\cf17 true};\par
00118 \}\par
00119 \par
00128 {\cf18 void} EncodingConverter::convertFile({\cf17 const} std::filesystem::path& filepath) \{\par
00129     std::cout << filepath << std::endl;\par
00130     std::ifstream inFile(filepath, std::ios::binary);\par
00131     std::string content((std::istreambuf_iterator<char>(inFile)), std::istreambuf_iterator<char>());\par
00132 \par
00133     std::filesystem::path relativePath = std::filesystem::relative(filepath, inputDirectory);\par
00134     std::filesystem::path outputPath = useTempDirectory ? std::filesystem::temp_directory_path() / relativePath : outputDirectory / relativePath;\par
00135     std::filesystem::create_directories(outputPath.parent_path());\par
00136 \par
00137     {\cf19 if} (!is_utf8(content)) \{\par
00138         std::string utf8Content;\par
00139         {\cf19 if} (iconvConvert(content, utf8Content, sourceEncoding, targetEncoding)) \{\par
00140             content = utf8Content;\par
00141             filesConverted++;\par
00142         \} {\cf19 else} \{\par
00143             std::cerr << {\cf22 "Error Converting file '"} << filepath << {\cf22 "': Invalid or incomplete multibyte or wide character"} << std::endl;\par
00144         \}\par
00145     \}\par
00146 \par
00147     std::ofstream outFile(outputPath, std::ios::binary);\par
00148     outFile.write(content.data(), content.size());\par
00149     outFile.close();\par
00150 \par
00151     {\cf19 if} (useTempDirectory) \{\par
00152         std::filesystem::copy(outputPath, filepath, std::filesystem::copy_options::overwrite_existing);\par
00153         std::filesystem::remove(outputPath);\par
00154     \}\par
00155 \}\par
00156 \par
00162 {\cf18 void} EncodingConverter::printStats(){\cf17  const }\{\par
00163     std::cout << {\cf22 "Files processed: "} << filesProcessed << std::endl;\par
00164     std::cout << {\cf22 "Files converted: "} << filesConverted << std::endl;\par
00165 \}\par
00166 \par
00176 {\cf18 bool} EncodingConverter::is_utf8({\cf17 const} std::string &str) \{\par
00177     {\cf18 size_t} length = str.size();\par
00178     {\cf19 for} ({\cf18 size_t} i = 0; i < length; ) \{\par
00179         {\cf19 if} ((str[i] & 0x80) == 0) \{\par
00180             i += 1;\par
00181         \} {\cf19 else} {\cf19 if} ((str[i] & 0xE0) == 0xC0 && i + 1 < length && (str[i + 1] & 0xC0) == 0x80) \{\par
00182             i += 2;\par
00183         \} {\cf19 else} {\cf19 if} ((str[i] & 0xF0) == 0xE0 && i + 2 < length && (str[i + 1] & 0xC0) == 0x80 && (str[i + 2] & 0xC0) == 0x80) \{\par
00184             i += 3;\par
00185         \} {\cf19 else} {\cf19 if} ((str[i] & 0xF8) == 0xF0 && i + 3 < length && (str[i + 1] & 0xC0) == 0x80 && (str[i + 2] & 0xC0) == 0x80 && (str[i + 3] & 0xC0) == 0x80) \{\par
00186             i += 4;\par
00187         \} {\cf19 else} \{\par
00188             {\cf19 return} {\cf17 false};\par
00189         \}\par
00190     \}\par
00191     {\cf19 return} {\cf17 true};\par
00192 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB Generated.cpp\par \pard\plain 
{\tc\tcl2 \v Generated.cpp}
{\xe \v Generated.cpp}
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/Generated/Generated.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF Generated.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_generated_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Generated.cpp\par \pard\plain 
{\tc\tcl2 \v Generated.cpp}
{\xe \v Generated.cpp}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/Generated/Generated.h"}\par
00002 \par
00010 {\cf18 void} Generated::generateJsonFile({\cf17 const} std::string &filename) \{\par
00011     nlohmann::json j;\par
00012 \par
00013     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'EF\'F3\'F2\'E5\'E9 \'EA \'F0\'E0\'E7\'EB\'E8\'F7\'ED\'FB\'EC \'E4\'E8\'F0\'E5\'EA\'F2\'EE\'F0\'E8\'FF\'EC}\par
00014     j[{\cf22 "directories"}][{\cf22 "tbl"}] = {\cf22 "/path/to/tbl"};\par
00015     j[{\cf22 "directories"}][{\cf22 "cfm"}] = {\cf22 "/path/to/cfm"};\par
00016     j[{\cf22 "directories"}][{\cf22 "zagotovki"}] = {\cf22 "/path/to/zgt"};\par
00017     j[{\cf22 "directories"}][{\cf22 "nabor"}] = {\cf22 "/path/to/\'ED\'E0\'E1\'EE\'F0\'FB"};\par
00018     j[{\cf22 "directories"}][{\cf22 "font"}] = {\cf22 "/path/to/font"};\par
00019 \par
00020     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'F2\'E5\'EA\'F1\'F2\'E0 \'F1\'EF\'F0\'E0\'E2\'EA\'E8}\par
00021     j[{\cf22 "help"}] = {\cf22 "\'D2\'E5\'EA\'F1\'F2 \'EF\'EE\'EC\'EE\'F9\'E8 \'E7\'E4\'E5\'F1\'FC..."};\par
00022 \par
00023     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'E8\'EC\'E5\'ED\'E8 \'F4\'E0\'E9\'EB\'E0 PDF}\par
00024     j[{\cf22 "pdf_file_name"}] = {\cf22 "example.pdf"};\par
00025 \par
00026     {\cf20 // \'CE\'F2\'EA\'F0\'FB\'F2\'E8\'E5 \'F4\'E0\'E9\'EB\'E0 \'E4\'EB\'FF \'E7\'E0\'EF\'E8\'F1\'E8}\par
00027     std::ofstream o(filename);\par
00028     {\cf20 // \'C7\'E0\'EF\'E8\'F1\'FC JSON-\'EE\'E1\'FA\'E5\'EA\'F2\'E0 \'E2 \'F4\'E0\'E9\'EB \'F1 \'EE\'F2\'F1\'F2\'F3\'EF\'EE\'EC 4 \'EF\'F0\'EE\'E1\'E5\'EB\'E0 \'E4\'EB\'FF \'F4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'FF}\par
00029     o << std::setw(4) << j << std::endl;\par
00030 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB json.cpp\par \pard\plain 
{\tc\tcl2 \v json.cpp}
{\xe \v json.cpp}
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include "../../include/Parser/json.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF json.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "json_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
json.cpp\par \pard\plain 
{\tc\tcl2 \v json.cpp}
{\xe \v json.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <fstream>}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include "../../include/Parser/json.h"}\par
00004 \par
00013 std::vector<std::filesystem::path> json::getFileList({\cf17 const} std::string &key, {\cf17 const} std::string &search) \{\par
00014     std::vector<std::filesystem::path> files;\par
00015     std::filesystem::path directory = getFilePath(key);\par
00016 \par
00017     {\cf19 if} (std::filesystem::exists(directory)) \{\par
00018         {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : std::filesystem::recursive_directory_iterator(directory)) \{\par
00019             {\cf19 if} (entry.is_regular_file() && entry.path().filename().string().find(search) != std::string::npos) \{\par
00020                 files.push_back(entry.path());\par
00021                 {\cf20 //std::cout << entry.path().string() << "\\t" << entry.path() << std::endl;}\par
00022             \}\par
00023         \}\par
00024     \} {\cf19 else} \{\par
00025         {\cf20 // \'CE\'E1\'F0\'E0\'E1\'EE\'F2\'EA\'E0 \'EE\'F8\'E8\'E1\'EA\'E8}\par
00026         std::cout << {\cf22 "Directory does not exist or is not accessible: "} << directory << std::endl;\par
00027     \}\par
00028 \par
00029     {\cf19 return} files;\par
00030 \}\par
00031 \par
00041 std::filesystem::path json::getFilePath({\cf17 const} std::string &key) \{\par
00042     {\cf19 if} (!config_json.contains(key)) \{\par
00043         {\cf19 throw} std::runtime_error({\cf22 "Configuration file does not contain key: "} + key);\par
00044     \}\par
00045     {\cf19 return} std::filesystem::u8path(config_json[key].get<std::string>());\par
00046 \}\par
00047 \par
00058 {\cf18 long} {\cf18 long} json::getInteger({\cf17 const} std::string &key) \{\par
00059     {\cf19 if} (!config_json.contains(key)) \{\par
00060         {\cf19 throw} std::runtime_error({\cf22 "Configuration file does not contain key: "} + key);\par
00061     \}\par
00062     {\cf19 return} config_json[key];\par
00063 \}\par
00074 json::json({\cf17 const} std::string &config_file_path) \{\par
00075     std::ifstream config_file(config_file_path);\par
00076     {\cf19 if} (!config_file.is_open()) \{\par
00077         {\cf19 throw} std::runtime_error({\cf22 "Cannot open configuration file: "} + config_file_path);\par
00078     \}\par
00079     config_file >> config_json;\par
00080 \}\par
00081 \par
00082 {\cf18 void} json::display() \{\par
00083     {\cf19 for} ({\cf17 const} {\cf17 auto}& [key, value] : config_json.items()) \{\par
00084         std::cout << key << {\cf22 ": "} << value << std::endl;\par
00085     \}\par
00086 \}\par
00087 \par
00088 \par
00089 \par
00090 \par
00091 \par
00092 \par
00093 \par
00094 \par
00095 \par
00096 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB ParserConfiguration.cpp\par \pard\plain 
{\tc\tcl2 \v ParserConfiguration.cpp}
{\xe \v ParserConfiguration.cpp}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ParserConfiguration.cpp\par \pard\plain 
{\tc\tcl2 \v ParserConfiguration.cpp}
{\xe \v ParserConfiguration.cpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid }
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB FileReader.cpp\par \pard\plain 
{\tc\tcl2 \v FileReader.cpp}
{\xe \v FileReader.cpp}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/Reader/FileReader.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF FileReader.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_file_reader_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FileReader.cpp\par \pard\plain 
{\tc\tcl2 \v FileReader.cpp}
{\xe \v FileReader.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/Reader/FileReader.h"}\par
00002 \par
00012 std::string FileReader::trim({\cf17 const} std::string &s) \{\par
00013     {\cf17 auto} start = s.begin();\par
00014     {\cf19 while} (start != s.end() && ({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*start) > 255 || std::isspace({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*start)))) \{\par
00015         start++;\par
00016     \}\par
00017     {\cf17 auto} end = s.end();\par
00018     {\cf19 while} (end != start && ({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*(end - 1)) > 255 || std::isspace({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(*(end - 1))))) \{\par
00019         end--;\par
00020     \}\par
00021     {\cf19 return} std::string(start, end);\par
00022 \}\par
00023 \par
00033 std::string FileReader::readLineString(std::ifstream &file) \{\par
00034     std::string line;\par
00035     {\cf19 if} (std::getline(file, line))\par
00036     \{\par
00037         {\cf20 // Remove any leading/trailing whitespace}\par
00038         line.erase(0, line.find_first_not_of({\cf22 " \\t\\r\\n"}));\par
00039         line.erase(line.find_last_not_of({\cf22 " \\t\\r\\n"}) + 1);\par
00040     \}\par
00041     {\cf19 return} line;\par
00042 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB textReader.cpp\par \pard\plain 
{\tc\tcl2 \v textReader.cpp}
{\xe \v textReader.cpp}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/Reader/textReader.h"}\par
{\f2 #include <iostream>}\par
{\f2 #include <regex>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF textReader.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "text_reader_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
textReader.cpp\par \pard\plain 
{\tc\tcl2 \v textReader.cpp}
{\xe \v textReader.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/Reader/textReader.h"}\par
00002 {\cf21 #include <iostream>}\par
00003 {\cf21 #include <regex>}\par
00004 \par
00011 {\cf18 void} textReader::read_cfm(cfm &data) \{\par
00012     std::ifstream file(file_path_);\par
00013     {\cf19 if} (!file.is_open()) \{\par
00014         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00015     \}\par
00016 \par
00017     std::string line;\par
00018     {\cf18 size_t} count = 1;\par
00019     {\cf19 while} (std::getline(file, line)) \{\par
00020         {\cf19 if} (count == 1) \{\par
00021             data.header = trim(line);\par
00022         \} {\cf19 else} {\cf19 if} (count == 3) \{\par
00023             data.blank = trim(line);\par
00024         \} {\cf19 else} {\cf19 if} (count == 6) \{\par
00025             std::istringstream iss(line);\par
00026             {\cf18 double} temp;\par
00027             {\cf19 while} (iss >> temp) \{\par
00028                 data.marks.push_back(temp);\par
00029             \}\par
00030         \} {\cf19 else} {\cf19 if} (count == 8) \{\par
00031             std::istringstream(line) >> data.format[0] >> data.format[1];\par
00032         \} {\cf19 else} {\cf19 if} (count == 10) \{\par
00033             std::istringstream(line) >> data.diameter;\par
00034         \} {\cf19 else} {\cf19 if} (count == 12) \{\par
00035             std::istringstream(line) >> data.small_tick[0] >> data.small_tick[1];\par
00036         \} {\cf19 else} {\cf19 if} (count == 14) \{\par
00037             std::istringstream(line) >> data.big_tick[0] >> data.big_tick[1];\par
00038         \} {\cf19 else} {\cf19 if} (count == 16) \{\par
00039             std::istringstream(line) >> data.digital_tick[0] >> data.digital_tick[1] >> data.digital_tick[2] >> data.digital_tick[3];\par
00040         \} {\cf19 else} {\cf19 if} (count == 18) \{\par
00041             std::istringstream(line) >> data.digit_height >> data.label_height;\par
00042         \} {\cf19 else} {\cf19 if} (count == 20) \{\par
00043             data.tick_mask = trim(line);\par
00044         \}\par
00045         count++;\par
00046     \}\par
00047 \}\par
00048 \par
00055 {\cf18 void} textReader::read_zgt(zgt &data) \{\par
00056     std::ifstream file(file_path_);\par
00057     {\cf19 if} (!file.is_open()) \{\par
00058         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00059     \}\par
00060 \par
00061     {\cf18 size_t} count = 1;\par
00062     std::string line;\par
00063     {\cf19 while} (std::getline(file, line)) \{\par
00064         {\cf19 if} (count == 2) \{\par
00065             std::istringstream(line) >> data.diameter;\par
00066         \} {\cf19 else} {\cf19 if} (count == 4) \{\par
00067             std::istringstream(line) >> data.center_hole_diameter;\par
00068         \} {\cf19 else} {\cf19 if} (count == 6) \{\par
00069             std::istringstream iss(line);\par
00070             {\cf18 double} temp;\par
00071             {\cf19 while} (iss >> temp) \{\par
00072                 data.mounting_holes.push_back(temp);\par
00073             \}\par
00074         \} {\cf19 else} {\cf19 if} (count == 8) \{\par
00075             std::istringstream iss(line);\par
00076             {\cf18 double} temp;\par
00077             {\cf19 while} (iss >> temp) \{\par
00078                 data.marker_position.push_back(temp);\par
00079             \}\par
00080         \} {\cf19 else} {\cf19 if} (count == 10) \{\par
00081             std::istringstream(line) >> data.font_serial_number[0] >> data.font_serial_number[1];\par
00082         \} {\cf19 else} {\cf19 if} (count == 12) \{\par
00083             std::istringstream(line) >> data.stop_position[0] >> data.stop_position[1] >> data.stop_position[2];\par
00084         \}\par
00085         count++;\par
00086     \}\par
00087 \}\par
00088 \par
00095 {\cf18 void} textReader::read_tbl(tbl &data) \{\par
00096     std::ifstream file(file_path_);\par
00097     {\cf19 if} (!file.is_open()) \{\par
00098         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00099     \}\par
00100 \par
00101     std::string file_name = file_path_.filename().string();\par
00102 \par
00103     std::string prefix = {\cf22 "scale"};\par
00104     std::string suffix = {\cf22 ".tbl"};\par
00105 \par
00106     {\cf17 auto} start = file_name.find(prefix);\par
00107     {\cf17 auto} end = file_name.find(suffix);\par
00108 \par
00109     {\cf19 if} (start == std::string::npos || end == std::string::npos || start >= end) \{\par
00110         {\cf19 throw} std::runtime_error({\cf22 "Could not extract number from file name"});\par
00111     \}\par
00112 \par
00113     start += prefix.length();\par
00114     std::string number_str = file_name.substr(start, end - start);\par
00115 \par
00116     {\cf19 try} \{\par
00117         data.position = std::stoi(number_str);\par
00118     \} {\cf19 catch} ({\cf17 const} std::invalid_argument& e) \{\par
00119         {\cf19 throw} std::runtime_error({\cf22 "Invalid number in file name: "} + number_str);\par
00120     \} {\cf19 catch} ({\cf17 const} std::out_of_range& e) \{\par
00121         {\cf19 throw} std::runtime_error({\cf22 "Number in file name is out of range: "} + number_str);\par
00122     \}\par
00123 \par
00124     std::string line;\par
00125     readLineString(file);\par
00126     data.model = readLineString(file);\par
00127 \par
00128     data.measurements.reserve(20);\par
00129     {\cf19 while} (std::getline(file, line)) \{\par
00130         {\cf18 double} temp;\par
00131         {\cf18 double} col2;\par
00132         {\cf18 double} col3;\par
00133         {\cf19 if} (std::istringstream(line) >> temp >> col2 >> col3) \{\par
00134             data.measurements.push_back(\{col2, col3\});\par
00135         \}\par
00136     \}\par
00137 \}\par
00138 \par
00145 {\cf18 void} textReader::read_point(point &data) \{\par
00146     std::ifstream file(file_path_);\par
00147     {\cf19 if} (!file.is_open()) \{\par
00148         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00149     \}\par
00150 \par
00151     {\cf18 double} x, y;\par
00152     {\cf19 while} (file >> x >> y) \{\par
00153         data.coordinates.emplace_back(x, y);\par
00154     \}\par
00155 \}\par
00156 \par
00163 {\cf18 void} textReader::read_nbr(nbr &data) \{\par
00164     std::ifstream file(file_path_);\par
00165     {\cf19 if} (!file.is_open()) \{\par
00166         {\cf19 throw} std::runtime_error({\cf22 "Failed to open file: "} + file_path_.string());\par
00167     \}\par
00168 \par
00169     std::string line;\par
00170     {\cf18 size_t} line_number = 1;\par
00171     {\cf19 while} (std::getline(file, line)) \{\par
00172         data.icon.insert(std::make_pair(line_number, line));\par
00173         line_number++;\par
00174     \}\par
00175 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB digit.cpp\par \pard\plain 
{\tc\tcl2 \v digit.cpp}
{\xe \v digit.cpp}
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/RenderPDF/RenderPDF.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF digit.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "digit_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
digit.cpp\par \pard\plain 
{\tc\tcl2 \v digit.cpp}
{\xe \v digit.cpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/RenderPDF/RenderPDF.h"}\par
00002 \par
00009 {\cf18 void} RenderPDF::drawDigitIndices(HPDF_Page page, {\cf18 size_t} blank) \{\par
00010     {\cf20 // \'D3\'F1\'F2\'E0\'ED\'EE\'E2\'EA\'E0 \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'F8\'F0\'E8\'F4\'F2\'E0 \'E4\'EB\'FF \'E8\'ED\'E4\'E5\'EA\'F1\'EE\'E2}\par
00011     setFontSize(page, cfm_data_.digit_height);\par
00012 \par
00013     {\cf20 // \'D6\'E8\'EA\'EB \'EF\'EE \'E2\'F1\'E5\'EC \'EC\'E5\'F2\'EA\'E0\'EC}\par
00014     {\cf19 for} ({\cf18 int} i = 0; i < marks.size(); i++) \{\par
00015         {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'F3\'E3\'EB\'E0 \'E4\'EB\'FF \'EA\'E0\'E6\'E4\'EE\'E9 \'EC\'E5\'F2\'EA\'E8}\par
00016         HPDF_REAL angle = 4.71239 - marks[i];\par
00017 \par
00018         {\cf20 // \'D4\'EE\'F0\'EC\'E0\'F2\'E8\'F0\'EE\'E2\'E0\'ED\'E8\'E5 \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8}\par
00019         {\cf17 auto} text = formatText(i);\par
00020 \par
00021         {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'F8\'E8\'F0\'E8\'ED\'FB \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8}\par
00022         {\cf17 auto} textWidth = HPDF_Page_TextWidth(page, text.c_str());\par
00023 \par
00024         {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2 x \'E8 y \'E4\'EB\'FF \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8}\par
00025         HPDF_REAL x = calculateXCoordinate(angle, textWidth, blank);\par
00026         HPDF_REAL y = calculateYCoordinate(angle, blank);\par
00027 \par
00028         {\cf20 // \'D0\'E8\'F1\'EE\'E2\'E0\'ED\'E8\'E5 \'F2\'E5\'EA\'F1\'F2\'E0 \'EC\'E5\'F2\'EA\'E8 \'ED\'E0 \'F1\'F2\'F0\'E0\'ED\'E8\'F6\'E5}\par
00029         drawText(page, text, x, y);\par
00030     \}\par
00031 \}\par
00032 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB draw.cpp\par \pard\plain 
{\tc\tcl2 \v draw.cpp}
{\xe \v draw.cpp}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/RenderPDF/RenderPDF.h"}\par
{\f2 #include <cmath>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF draw.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "draw_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
draw.cpp\par \pard\plain 
{\tc\tcl2 \v draw.cpp}
{\xe \v draw.cpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/RenderPDF/RenderPDF.h"}\par
00002 {\cf21 #include <cmath>}\par
00003 \par
00010 {\cf18 void} RenderPDF::setFontSize(HPDF_Page page, {\cf18 double} size) \{\par
00011     HPDF_Page_SetFontAndSize(page, font_, size);\par
00012     HPDF_Page_SetHeight(page, 420);\par
00013     HPDF_Page_SetWidth(page, 297);\par
00014 \}\par
00015 \par
00024 {\cf18 void} RenderPDF::drawCircle(HPDF_Page page, {\cf18 double} x, {\cf18 double} y, {\cf18 double} radius) \{\par
00025     HPDF_Page_Circle(page, x, y, radius);\par
00026     HPDF_Page_Stroke(page);\par
00027 \}\par
00028 \par
00038 {\cf18 void} RenderPDF::draw_line(HPDF_Page page, HPDF_REAL x1, HPDF_REAL y1, HPDF_REAL x2, HPDF_REAL y2) \{\par
00039     HPDF_Page_MoveTo(page, x1, y1);\par
00040     HPDF_Page_LineTo(page, x2, y2);\par
00041     HPDF_Page_Stroke(page);\par
00042 \}\par
00043 \par
00052 {\cf18 void} RenderPDF::drawText(HPDF_Page page, {\cf17 const} std::string& text, HPDF_REAL x, HPDF_REAL y) \{\par
00053     HPDF_Page_BeginText(page);\par
00054     HPDF_Page_MoveTextPos(page, x, y);\par
00055     HPDF_Page_ShowText(page, text.c_str());\par
00056     HPDF_Page_EndText(page);\par
00057 \}\par
00058 \par
00065 std::string RenderPDF::formatText({\cf18 int} i) \{\par
00066     std::stringstream ss;\par
00067     ss.precision(cfm_data_.format[1]);\par
00068     ss << std::fixed << cfm_data_.marks[i];\par
00069     {\cf19 return} ss.str();\par
00070 \}\par
00071 \par
00080 HPDF_REAL RenderPDF::calculateXCoordinate(HPDF_REAL angle, {\cf18 double} textWidth, {\cf18 size_t} blank) \{\par
00081     {\cf18 double} marginText = 1;\par
00082     {\cf17 auto} radius = (cfm_data_.diameter / 2.0) - cfm_data_.digital_tick[0] / 2;\par
00083     HPDF_REAL x = point_data_.coordinates[point_tbl[blank] - marginText].first +\par
00084                   (radius - cfm_data_.digital_tick[0]-1) * cos(angle) - textWidth / 2;\par
00085     {\cf19 return} x;\par
00086 \}\par
00087 \par
00095 HPDF_REAL RenderPDF::calculateYCoordinate(HPDF_REAL angle, {\cf18 size_t} blank) \{\par
00096     {\cf18 double} marginText = 1;\par
00097     {\cf17 auto} radius = (cfm_data_.diameter / 2.0) - cfm_data_.digital_tick[0] / 2;\par
00098     HPDF_REAL y = point_data_.coordinates[point_tbl[blank] - marginText].second +\par
00099                   (radius - cfm_data_.digital_tick[0]-1) * sin(angle) - cfm_data_.digit_height / 2.5 + 0.5;\par
00100     {\cf19 return} y;\par
00101 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB Line.cpp\par \pard\plain 
{\tc\tcl2 \v Line.cpp}
{\xe \v Line.cpp}
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cmath>}\par
{\f2 #include "../../include/RenderPDF/RenderPDF.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF Line.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_line_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Line.cpp\par \pard\plain 
{\tc\tcl2 \v Line.cpp}
{\xe \v Line.cpp}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <cmath>}\par
00002 \par
00003 {\cf21 #include "../../include/RenderPDF/RenderPDF.h"}\par
00004 \par
00010 {\cf18 void} RenderPDF::generate_Marks({\cf18 size_t} blank) \{\par
00011     {\cf18 size_t} size = tbl_data_[blank].measurements.size();\par
00012     {\cf17 auto} a0 = (tbl_data_[blank].measurements[0][0] + tbl_data_[blank].measurements[0][1]) / 2.0;\par
00013     {\cf17 auto} an =\par
00014             (tbl_data_[blank].measurements[size - 1][0] + tbl_data_[blank].measurements[size - 1][1]) / 2.0;\par
00015     {\cf17 auto} aDelta = (an - a0) / size;\par
00016 \par
00017     {\cf19 for} ({\cf18 int} i = 0; i < size; i++) \{\par
00018         {\cf17 auto} asred = (tbl_data_[blank].measurements[i][0] + tbl_data_[blank].measurements[i][1]) / 2.0;\par
00019         marks.push_back(asred + aDelta);\par
00020     \}\par
00021     std::vector<double> angles_deg(marks.size());\par
00022 \par
00023     {\cf20 // \'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'FF \'F3\'E3\'EB\'EE\'E2 \'E8\'E7 \'F0\'E0\'E4\'E8\'E0\'ED \'E2 \'E3\'F0\'E0\'E4\'F3\'F1\'FB}\par
00024     {\cf19 for} ({\cf18 size_t} i = 0; i < marks.size(); i++) \{\par
00025         angles_deg[i] = marks[i] * (180.0 / PI);\par
00026     \}\par
00027 \par
00028     {\cf18 double} a0_deg = angles_deg.front();\par
00029     {\cf18 double} an_deg = angles_deg.back();\par
00030 \par
00031     {\cf20 // \'C2\'FB\'F7\'E8\'F1\'EB\'E5\'ED\'E8\'E5 \'E4\'EE\'E1\'E0\'E2\'EE\'F7\'ED\'EE\'E3\'EE \'F3\'E3\'EB\'E0 \\Delta}\par
00032     {\cf18 double} delta = (360.0 - an_deg - a0_deg) / 2;\par
00033 \par
00034     {\cf20 // \'CF\'E5\'F0\'E5\'F1\'F7\'E5\'F2 \'F3\'E3\'EB\'EE\'E2 \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \\Delta}\par
00035     std::vector<double> new_angles_deg(angles_deg.size());\par
00036     {\cf19 for} ({\cf18 size_t} i = 0; i < angles_deg.size(); i++) \{\par
00037         new_angles_deg[i] = angles_deg[i] + delta;\par
00038     \}\par
00039 \par
00040     {\cf20 // \'CA\'EE\'ED\'E2\'E5\'F0\'F2\'E0\'F6\'E8\'FF \'F3\'E3\'EB\'EE\'E2 \'EE\'E1\'F0\'E0\'F2\'ED\'EE \'E2 \'F0\'E0\'E4\'E8\'E0\'ED\'FB}\par
00041     {\cf19 for} ({\cf18 size_t} i = 0; i < new_angles_deg.size(); i++) \{\par
00042         marks[i] = new_angles_deg[i] * (PI / 180.0);\par
00043     \}\par
00044 \}\par
00045 \par
00052 {\cf18 void} RenderPDF::drawMainLines(HPDF_Page page, {\cf18 size_t} blank) \{\par
00053     {\cf20 //\'D0\'E8\'F1\'F3\'E5\'EC \'EB\'E8\'ED\'E8\'E8 \'E3\'EB\'E0\'E2\'ED\'FB\'E5}\par
00054     {\cf18 double} radius = cfm_data_.diameter / 2.0;\par
00055     {\cf18 size_t} i = 0;\par
00056     {\cf19 for} ({\cf18 double} angle: marks) \{\par
00057         angle = 4.71239 - angle;\par
00058 \par
00059         {\cf18 double} sinAngle = sin(angle);\par
00060         {\cf18 double} cosAngle = cos(angle);\par
00061         HPDF_REAL x1, x2, y1, y2;\par
00062 \par
00063         x1 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00064              (radius - cfm_data_.digital_tick[0]) * cosAngle;\par
00065         y1 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00066              (radius - cfm_data_.digital_tick[0]) * sinAngle;\par
00067 \par
00068         {\cf19 if} (i == 0) \{ {\cf20 // \'C5\'F1\'EB\'E8 \'FD\'F2\'EE \'EF\'E5\'F0\'E2\'E0\'FF \'E8\'F2\'E5\'F0\'E0\'F6\'E8\'FF, \'F1\'EC\'E5\'F1\'F2\'E8\'F2\'FC \'E2\'E5\'F0\'F5\'ED\'FE\'FE \'EB\'E8\'ED\'E8\'FE \'ED\'E0 90 \'E3\'F0\'E0\'E4\'F3\'F1\'EE\'E2}\par
00069             {\cf18 double} shift_angle = angle + 1.5708; {\cf20 // \'D1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 \'ED\'E0 90 \'E3\'F0\'E0\'E4\'F3\'F1\'EE\'E2 \'E2\'EF\'F0\'E0\'E2\'EE}\par
00070             {\cf18 double} center_offset = cfm_data_.digital_tick[2] / 2; {\cf20 // \'D0\'E0\'E7\'EC\'E5\'F0 \'F6\'E5\'ED\'F2\'F0\'E0}\par
00071 \par
00072             x1 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00073                  (radius - cfm_data_.digital_tick[0]) * cosAngle;\par
00074             y1 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00075                  (radius - cfm_data_.digital_tick[0]) * sinAngle;\par
00076 \par
00077             x1 -= center_offset * cos(shift_angle); {\cf20 // \'D1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 x \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB}\par
00078             y1 -= center_offset * sin(shift_angle); {\cf20 // \'D1\'EC\'E5\'F9\'E5\'ED\'E8\'E5 y \'EA\'EE\'EE\'F0\'E4\'E8\'ED\'E0\'F2\'FB}\par
00079 \par
00080             x2 = x1 + (cfm_data_.digital_tick[0] - cfm_data_.digital_tick[2]) *\par
00081                       cos(shift_angle); {\cf20 // \'CF\'F0\'E0\'E2\'E0\'FF \'F7\'E0\'F1\'F2\'FC \'EB\'E8\'ED\'E8\'E8}\par
00082             y2 = y1 + (cfm_data_.digital_tick[0] - cfm_data_.digital_tick[2]) *\par
00083                       sin(shift_angle); {\cf20 // \'CF\'F0\'E0\'E2\'E0\'FF \'F7\'E0\'F1\'F2\'FC \'EB\'E8\'ED\'E8\'E8}\par
00084         \} {\cf19 else} \{\par
00085             x2 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00086                  (radius - cfm_data_.digital_tick[2]) * cosAngle;\par
00087             y2 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00088                  (radius - cfm_data_.digital_tick[2]) * sinAngle;\par
00089         \}\par
00090 \par
00091         {\cf20 // \'C2\'E5\'F0\'ED\'FF\'FF \'EB\'E8\'ED\'E8\'FF}\par
00092         HPDF_Page_SetLineWidth(page, cfm_data_.digital_tick[3]);\par
00093 \par
00094         draw_line(page, x2, y2, x1, y1);\par
00095 \par
00096         {\cf20 // \'CD\'E8\'E6\'ED\'FF\'FF \'EB\'E8\'ED\'E8\'FF}\par
00097         x1 = point_data_.coordinates[point_tbl[blank] - 1].first + radius * cos(angle);\par
00098         y1 = point_data_.coordinates[point_tbl[blank] - 1].second + radius * sin(angle);\par
00099         x2 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00100              (radius - cfm_data_.digital_tick[2]) * cosAngle;\par
00101         y2 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00102              (radius - cfm_data_.digital_tick[2]) * sinAngle;\par
00103 \par
00104         {\cf19 if} (i == 0) \{\par
00105             x2 = point_data_.coordinates[point_tbl[blank] - 1].first +\par
00106                  (radius - cfm_data_.digital_tick[0]) * cosAngle;\par
00107             y2 = point_data_.coordinates[point_tbl[blank] - 1].second +\par
00108                  (radius - cfm_data_.digital_tick[0]) * sinAngle;\par
00109         \}\par
00110 \par
00111         HPDF_Page_SetLineWidth(page, cfm_data_.digital_tick[1]);\par
00112         draw_line(page, x2, y2, x1, y1);\par
00113 \par
00114         i++;\par
00115     \}\par
00116 \}\par
00117 \par
00118 \par
00125 {\cf18 void} RenderPDF::drawAdditionalTicks(HPDF_Page page, {\cf18 size_t} blank) \{\par
00126     {\cf17 auto} radius = cfm_data_.diameter / 2.0f;\par
00127     {\cf18 size_t} size_tick_mask = cfm_data_.tick_mask.size() - 1;\par
00128     {\cf19 for} ({\cf18 size_t} k = 0; k < marks.size() - 1; k++) \{\par
00129         {\cf18 double} angle1 = 4.71239 - marks[k];\par
00130         {\cf18 double} angle2 = 4.71239 - marks[k + 1];\par
00131         {\cf18 double} angle_diff = (angle2 - angle1) / {\cf18 double}(size_tick_mask);\par
00132 \par
00133         {\cf19 for} ({\cf18 size_t} j = 1; j <= size_tick_mask; j++) \{\par
00134             {\cf18 double} angle = angle1 + j * angle_diff;\par
00135             HPDF_REAL x1 = point_data_.coordinates[point_tbl[blank] - 1].first + radius * cos(angle);\par
00136             HPDF_REAL y1 = point_data_.coordinates[point_tbl[blank] - 1].second + radius * sin(angle);\par
00137             HPDF_REAL x2, y2;\par
00138             HPDF_REAL height_line;\par
00139 \par
00140             {\cf19 if} (cfm_data_.tick_mask[j] == {\cf23 '1'}) \{\par
00141                 height_line = cfm_data_.small_tick[0];\par
00142             \}\par
00143             {\cf19 if} (cfm_data_.tick_mask[j] == {\cf23 '2'}) \{\par
00144                 height_line = cfm_data_.big_tick[0];\par
00145             \}\par
00146             {\cf19 if} (cfm_data_.tick_mask[j] == {\cf23 '3'}) \{\par
00147                 height_line = cfm_data_.digital_tick[0];\par
00148             \}\par
00149 \par
00150             x2 = point_data_.coordinates[point_tbl[blank] - 1].first + (radius - height_line) * cos(angle);\par
00151             y2 = point_data_.coordinates[point_tbl[blank] - 1].second + (radius - height_line) * sin(angle);\par
00152 \par
00153             draw_line(page, x1, y1, x2, y2);\par
00154         \}\par
00155     \}\par
00156 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB Print.cpp\par \pard\plain 
{\tc\tcl2 \v Print.cpp}
{\xe \v Print.cpp}
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/RenderPDF/RenderPDF.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF Print.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_print_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Print.cpp\par \pard\plain 
{\tc\tcl2 \v Print.cpp}
{\xe \v Print.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/RenderPDF/RenderPDF.h"}\par
00002 \par
00012 {\cf18 void} RenderPDF::generatePDF(std::string &filename) \{\par
00013 \par
00014     HPDF_Page page;\par
00015     {\cf18 size_t} size_point_tbl = point_tbl.size();\par
00016     {\cf18 int} blank = 0;\par
00017     {\cf18 int} totalPage = 1;\par
00018     {\cf19 if}(new_page)\{\par
00019         size_point_tbl/=2;\par
00020         totalPage = 2;\par
00021     \}\par
00022 \par
00023     {\cf19 for}({\cf17 auto} page_list = 0; page_list < totalPage; ++page_list) \{\par
00024         {\cf19 if}(page_list == 1) \{\par
00025             pdf_ = HPDF_New({\cf17 nullptr}, {\cf17 nullptr});\par
00026             font_ = loadFont(fontPath_.string());\par
00027 \par
00028             size_point_tbl = point_tbl.size();\par
00029         \}\par
00030         createA3Page();\par
00031         page = HPDF_GetCurrentPage(pdf_);\par
00032         {\cf19 for} (; blank < size_point_tbl; blank++) \{\par
00033 \par
00034             HPDF_Page_SetLineWidth(page, cfm_data_.digital_tick[1]);\par
00035 \par
00036             {\cf20 //test \'D3\'E4\'E0\'EB\'E8\'F2\'FC \'E2 \'EA\'EE\'ED\'F6\'E5, \'ED\'E5 \'F0\'E8\'F1\'F3\'E5\'F2\'F1\'FF}\par
00037             {\cf19 if} ({\cf17 false}) \{\par
00038                 drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first,\par
00039                            point_data_.coordinates[point_tbl[blank] - 1].second, cfm_data_.diameter / 2.0f);\par
00040             \}\par
00041 \par
00042             {\cf20 // \'EE\'F2\'F0\'E8\'F1\'EE\'E2\'EA\'E0 \'EA\'F0\'F3\'E3\'E0}\par
00043             {\cf19 if} ({\cf17 false}) \{\par
00044                 drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first,\par
00045                            point_data_.coordinates[point_tbl[blank] - 1].second, zgt_data_.diameter / 2.0f);\par
00046             \}\par
00047 \par
00048             {\cf20 //\'D6\'E5\'ED\'F2\'F0\'E0\'EB\'FC\'ED\'FB\'E9 \'EE\'F2\'E2\'E5\'F0\'F1\'F2\'E8\'E5}\par
00049             {\cf19 if} ({\cf17 false}) \{\par
00050                 drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first,\par
00051                            point_data_.coordinates[point_tbl[blank] - 1].second,\par
00052                            zgt_data_.center_hole_diameter / 2.0f);\par
00053             \}\par
00054 \par
00055             {\cf20 // \'C8\'ED\'E4\'E5\'EA\'F1\'FB \'ED\'E5 \'E8\'E7\'EC\'E5\'ED\'FF\'FE\'F2\'F1\'FF (\'E8\'F1\'EF\'F0\'E0\'E2\'E8\'F2\'FC!!!)}\par
00056             {\cf19 if}({\cf17 false})\{\par
00057                 {\cf18 double} xy, yz, radius;\par
00058                 {\cf19 for} ({\cf18 int} i = 0; i < 2; ++i) \{\par
00059                     xy = zgt_data_.mounting_holes[i * 3];\par
00060                     yz = zgt_data_.mounting_holes[i * 3 + 1];\par
00061                     yz = (yz > 0) ? -yz : abs(yz);\par
00062                     radius = zgt_data_.mounting_holes[i * 3 + 2] / 2.0f;\par
00063 \par
00064                     drawCircle(page, point_data_.coordinates[point_tbl[blank] - 1].first + xy,\par
00065                                point_data_.coordinates[point_tbl[blank] - 1].second + yz,\par
00066                                radius);\par
00067                 \}\par
00068             \}\par
00069 \par
00070             generate_Marks(blank);\par
00071             drawMainLines(page, blank);\par
00072 \par
00073             drawDigitIndices(page, blank);\par
00074             drawAdditionalTicks(page, blank);\par
00075             marks.clear();\par
00076 \par
00077             generate_Marks(blank);\par
00078             drawMainLines(page, blank);\par
00079 \par
00080             drawDigitIndices(page, blank);\par
00081             drawAdditionalTicks(page, blank);\par
00082             marks.clear();\par
00083         \}\par
00084         {\cf19 if}(page_list == 1)\{\par
00085             filename+= {\cf22 "("} + std::to_string(page_list + 1) + {\cf22 ")"};\par
00086         \}\par
00087         HPDF_SaveToFile(pdf_, (filename + {\cf22 ".pdf"}).c_str());\par
00088     \}\par
00089 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB Processor.cpp\par \pard\plain 
{\tc\tcl2 \v Processor.cpp}
{\xe \v Processor.cpp}
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../../include/RenderPDF/RenderPDF.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF Processor.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_processor_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Processor.cpp\par \pard\plain 
{\tc\tcl2 \v Processor.cpp}
{\xe \v Processor.cpp}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "../../include/RenderPDF/RenderPDF.h"}\par
00002 \par
00008 {\cf18 bool} RenderPDF::checkForNewPage() \{\par
00009     {\cf19 for} ({\cf18 size_t} i = 0; i < point_data_.coordinates.size(); ++i) \{\par
00010         {\cf19 for} ({\cf18 size_t} j = i + 1; j < point_data_.coordinates.size(); ++j) \{\par
00011             {\cf19 if} (point_data_.coordinates[i] == point_data_.coordinates[j]) \{\par
00012                 {\cf19 return} {\cf17 true};\par
00013             \}\par
00014         \}\par
00015     \}\par
00016     {\cf19 return} {\cf17 false};\par
00017 \}\par
00018 \par
00025 {\cf18 void} RenderPDF::sortTblData() \{\par
00026     {\cf17 auto} compare_position = []({\cf17 const} tbl& a, {\cf17 const} tbl& b) \{\par
00027         {\cf19 return} a.position < b.position;\par
00028     \};\par
00029 \par
00030     {\cf20 // \'D1\'EE\'F0\'F2\'E8\'F0\'EE\'E2\'EA\'E0 \'E2\'E5\'EA\'F2\'EE\'F0\'E0 tbl_data_ \'F1 \'E8\'F1\'EF\'EE\'EB\'FC\'E7\'EE\'E2\'E0\'ED\'E8\'E5\'EC \'F4\'F3\'ED\'EA\'F6\'E8\'E8 \'F1\'F0\'E0\'E2\'ED\'E5\'ED\'E8\'FF}\par
00031     std::sort(tbl_data_.begin(), tbl_data_.end(), compare_position);\par
00032 \}\par
00033 \par
00039 {\cf18 void} RenderPDF::populatePointTbl() \{\par
00040     {\cf19 for}({\cf17 auto} i : tbl_data_)\{\par
00041         point_tbl.push_back(i.position);\par
00042     \}\par
00043 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'D4\'E0\'E9\'EB RenderPDF.cpp\par \pard\plain 
{\tc\tcl2 \v RenderPDF.cpp}
{\xe \v RenderPDF.cpp}
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
{\f2 #include "../../include/RenderPDF/RenderPDF.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'C3\'F0\'E0\'F4 \'E2\'EA\'EB\'FE\'F7\'E0\'E5\'EC\'FB\'F5 \'E7\'E0\'E3\'EE\'EB\'EE\'E2\'EE\'F7\'ED\'FB\'F5 \'F4\'E0\'E9\'EB\'EE\'E2 \'E4\'EB\'FF RenderPDF.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_render_p_d_f_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
RenderPDF.cpp\par \pard\plain 
{\tc\tcl2 \v RenderPDF.cpp}
{\xe \v RenderPDF.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\'D1\'EC. \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2\'E0\'F6\'E8\'FE.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <stdexcept>}\par
00002 {\cf21 #include "../../include/RenderPDF/RenderPDF.h"}\par
00003 \par
00007  {\cf18 void} RenderPDF::createA3Page() \{\par
00008     HPDF_Page page = HPDF_AddPage(pdf_);\par
00009     HPDF_Page_SetSize(page, HPDF_PAGE_SIZE_A3, HPDF_PAGE_PORTRAIT);\par
00010 \}\par
00011 \par
00019 HPDF_Font RenderPDF::loadFont({\cf17 const} std::string& fontPath) \{\par
00020     {\cf17 auto} font_name = HPDF_LoadTTFontFromFile(pdf_, fontPath.c_str(), HPDF_TRUE);\par
00021     {\cf17 auto} font = HPDF_GetFont(pdf_, font_name, {\cf22 "CP1251"});\par
00022 \par
00023     {\cf19 if}(!font)\{\par
00024         {\cf19 throw} std::runtime_error({\cf22 "\'CD\'E5 \'F3\'E4\'E0\'EB\'EE\'F1\'FC \'E7\'E0\'E3\'F0\'F3\'E7\'E8\'F2\'FC \'F8\'F0\'E8\'F4\'F2."});\par
00025     \}\par
00026 \par
00027     {\cf19 return} font;\par
00028 \}\par
00029 \par
00035 RenderPDF::~RenderPDF() \{\par
00036     {\cf19 if} (pdf_) \{\par
00037         HPDF_Free(pdf_);\par
00038     \}\par
00039 \}\par
00040 \par
00047 RenderPDF::RenderPDF(cfm cfm_data, zgt zgt_data, {\cf17 const} std::vector<tbl> &tbl_data, nbr nbr_data, point point_data, std::filesystem::path fontPath) \{\par
00048     initializeData(std::move(cfm_data), std::move(zgt_data), tbl_data, std::move(nbr_data), std::move(point_data), fontPath);\par
00049     initializePDF();\par
00050     adjustFontSize();\par
00051     font_ = loadFont(fontPath_.string());\par
00052     sortTblData();\par
00053     populatePointTbl();\par
00054     new_page = checkForNewPage();\par
00055 \}\par
00056 \par
00067  {\cf18 void} RenderPDF::initializeData(cfm cfm_data, zgt zgt_data, {\cf17 const} std::vector<tbl> &tbl_data, nbr nbr_data, point point_data, std::filesystem::path fontPath) \{\par
00068     cfm_data_ = std::move(cfm_data);\par
00069     zgt_data_ = std::move(zgt_data);\par
00070     tbl_data_ = tbl_data;\par
00071     nbr_data_ = std::move(nbr_data);\par
00072     point_data_ = std::move(point_data);\par
00073     fontPath_ = fontPath;\par
00074 \}\par
00075 {\cf18 void} RenderPDF::initializePDF() \{\par
00081     pdf_ = HPDF_New({\cf17 nullptr}, {\cf17 nullptr});\par
00082     {\cf19 if}(!pdf_)\{\par
00083         {\cf19 throw} std::runtime_error({\cf22 "\'CD\'E5 \'F3\'E4\'E0\'EB\'EE\'F1\'FC \'F1\'EE\'E7\'E4\'E0\'F2\'FC PDF \'E4\'EE\'EA\'F3\'EC\'E5\'ED\'F2."});\par
00084     \}\par
00085 \}\par
00086 \par
00092  {\cf18 void} RenderPDF::adjustFontSize() \{\par
00093     cfm_data_.digit_height*=1.090248; {\cf20 //\'EA\'EE\'FD\'F4\'F4\'E8\'F6\'E8\'E5\'ED\'F2 \'EF\'EE\'EF\'F0\'E0\'E2\'EA\'E8 \'F0\'E0\'E7\'EC\'E5\'F0\'E0 \'E4\'EB\'FF \'F8\'F0\'E8\'F4\'F2\'E0 GOST_B}\par
00094 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC\par 
\pard\plain 
{\tc \v \'C0\'EB\'F4\'E0\'E2\'E8\'F2\'ED\'FB\'E9 \'F3\'EA\'E0\'E7\'E0\'F2\'E5\'EB\'FC}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
