<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="ru">
  <compounddef id="_command_line_8cpp" kind="file" language="C++">
    <compoundname>CommandLine.cpp</compoundname>
    <includes refid="_command_line_8h" local="yes">../../include/CommandLine/CommandLine.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="2">
        <label>../../include/CommandLine/CommandLine.h</label>
        <link refid="_command_line_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>CommandLine.cpp</label>
        <link refid="_command_line_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../../include/CommandLine/CommandLine.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_command_line_1a1aa9581e68b84a283af934ccb8aeef3b" refkind="member"><highlight class="normal"><ref refid="class_command_line_1a1aa9581e68b84a283af934ccb8aeef3b" kindref="member">CommandLine::CommandLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_line_1ab4fd31333cdf63113b591497e40d2c82" kindref="member">command_type</ref><sp/>=<sp/><ref refid="class_command_line_1a92cbc16916d68d2117eef38093155941a696b031073e74bf2cb98e5ef201d4aa3" kindref="member">CommandType::UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>command(argv[1]);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;convert&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_line_1ab4fd31333cdf63113b591497e40d2c82" kindref="member">command_type</ref><sp/>=<sp/><ref refid="class_command_line_1a92cbc16916d68d2117eef38093155941a947a338c0e482e4afcffca292d5944f2" kindref="member">CommandType::CONVERT</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;print&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_line_1ab4fd31333cdf63113b591497e40d2c82" kindref="member">command_type</ref><sp/>=<sp/><ref refid="class_command_line_1a92cbc16916d68d2117eef38093155941af96eee4e48ee90430f17fb3a8388507b" kindref="member">CommandType::PRINT</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;gen&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_line_1ab4fd31333cdf63113b591497e40d2c82" kindref="member">command_type</ref><sp/>=<sp/><ref refid="class_command_line_1a92cbc16916d68d2117eef38093155941a58cb16120e5f67c8966bbe20c5c8ff26" kindref="member">CommandType::GEN</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_line_1ab4fd31333cdf63113b591497e40d2c82" kindref="member">command_type</ref><sp/>=<sp/><ref refid="class_command_line_1a92cbc16916d68d2117eef38093155941a696b031073e74bf2cb98e5ef201d4aa3" kindref="member">CommandType::UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>argc;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_command_line_1a0b7436a3732b1fc19cfdd3dd48b09fca" kindref="member">args</ref>.emplace_back(argv[i]);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_command_line_1aa17cd3db7ef897f09cb04bd2acbfabd6" refkind="member"><highlight class="normal"><ref refid="class_command_line_1a92cbc16916d68d2117eef38093155941" kindref="member">CommandLine::CommandType</ref><sp/><ref refid="class_command_line_1aa17cd3db7ef897f09cb04bd2acbfabd6" kindref="member">CommandLine::get_command_type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_command_line_1ab4fd31333cdf63113b591497e40d2c82" kindref="member">command_type</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_command_line_1a58060c2f8b6032c5d1feab576b642125" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="class_command_line_1a58060c2f8b6032c5d1feab576b642125" kindref="member">CommandLine::get_args</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_command_line_1a0b7436a3732b1fc19cfdd3dd48b09fca" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/stawl/OneDrive/Рабочий стол/blanks/src/CommandLine/CommandLine.cpp"/>
  </compounddef>
</doxygen>
